[conjecture_answer] Formal Problem Statement: import Mathlib
import Mathlib.Data.Finset.Basic

open Nat Set

abbrev P2004AIMEII_4_answer : ℕ := sorry
theorem P2004AIMEII_4 : 
  Finset.card (Finset.filter (fun n => ∃ (d₁ d₂ : Fin 10), ∀ d ∈ digits 10 n, d = d₁ ∨ d = d₂) (Finset.Ioo 0 10000)) = P2004AIMEII_4_answer := by sorry. Enumerated answers: . Expected Answer Type: ℕ
The problem involves counting four-digit numbers with a specific digit condition involving only two digits. Such numbers range from 1000 to 9999, with recursive digit constraints. The pattern suggests selecting 2 digits out of 10 and forming four-digit numbers where each digit is one of those two. For each choice of two distinct digits, the number of such four-digit numbers is \( 2^4 = 16 \). Choosing 2 digits from 10 digits yields \( \binom{10}{2} \). So the total count is \( \binom{10}{2} \times 16 \).

Final answer:
<<<(10 * 9 / 2) * (2 ^ 4)>>>
