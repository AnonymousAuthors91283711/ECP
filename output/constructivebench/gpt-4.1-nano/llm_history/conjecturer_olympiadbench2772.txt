[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev olympiadbench2772_answer : ℕ := sorry
theorem olympiadbench2772 :
  IsLeast {n : ℕ | 2023 < n ∧ (digits 10 n).sum = 17} olympiadbench2772_answer := by sorry. Enumerated answers: . Expected Answer Type: ℕ
Since the digits sum to 17 and the number exceeds 2023, it's likely the smallest such number is 2027 with digits summing to 2 + 0 + 2 + 7 = 11, which is too small. The next candidate is 2036 with sum 2+0+3+6=11, still too small. Next, 2045 with sum 2+0+4+5=11; continue this pattern. For sum 17, candidates are minimal numbers with digits summing to 17 exceeding 2023, e.g., 2999: sum 2+9+9+9=29, too large. So, the minimal is around 2008 (sum 2+0+0+8=10), too small. Check 2009 with sum 11. Next, 2018 sum 2+0+1+8=11 still too small. 2027 sum 2+0+2+7=11 again. Next candidate 2108 sum 2+1+0+8=11. We need sum 17. To get sum 17 and number >2023, minimal number is 2999 with sum 29. To get sum 17, minimal number is 2999 with sum 2+9+9+9=29, too large. Next, 2998 sum 2+9+9+8=28 still too large. 2995 sum 2+9+9+5=25. 2993 sum 2+9+9+3=23. 2990 sum 2+9+9+0=20. Next, 2808 sum 2+8+0+8=18. Still too many. 2708 sum 2+7+0+8=17, number 2708. Since 2708>2023, and sum of digits is 2+7+0+8=17, minimal such number is 2708.

Answer in Lean:
<<<2708>>>
