[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev olympiadbench2636_answer : ℕ := sorry
theorem olympiadbench2636
(n : ℕ)
(hn : 1000 ≤ n ∧ n < 10000)
(hsqrt : Real.sqrt n = 3 * (digits 10 n).sum)
: n = olympiadbench2636_answer := by sorry. Enumerated answers: . Expected Answer Type: ℕ
Given that \( \sqrt{n} = 3 \times \) sum of digits of \( n \) in base 10, and \( n \) lies between 1000 and 9999, the pattern indicates \( n \) must be a perfect square and the digits sum to 6 (since \( \sqrt{n} = 3 \times \) sum of digits). The only perfect square between 1000 and 9999 with digit sum 6, and sqrt 3 times digit sum, is 3600 with digits sum 9, but that does not match. Noticing the product of digit sum and 3 is the square root, the valid \( n \) is 576, evidence by the pattern matching for these properties. 

Thus, the answer is: \( 1296 \).

<<<1296>>>