[check_equivalence] Problem: import Mathlib

open Nat

abbrev omnimath4322_answer : Fin 4 → ℕ := sorry
theorem omnimath4322 (a b c d : ℕ) :
  a + b + c + d = 48 ∧
  a + 3 = b - 3 ∧
  b - 3 = 3 * c ∧
  3 * c = d / 3 ↔
  (a, b, c, d) = (omnimath4322_answer 0, omnimath4322_answer 1, omnimath4322_answer 2, omnimath4322_answer 3) := by sorry
Ground Truth Answer: fun i => match i with
  | 0 => 6
  | 1 => 12
  | 2 => 3
  | 3 => 27
Proposed Answer: fun i : Fin 4 =>
  match i with
  | ⟨0, _⟩ => 6
  | ⟨1, _⟩ => 12
  | ⟨2, _⟩ => 3
  | ⟨3, _⟩ => 27
<<<True>>>
The proposed answer is equivalent to the ground truth answer. Both define a function that returns 6, 12, 3, and 27 for inputs 0, 1, 2, and 3 respectively. The only difference is in syntax: the proposed answer uses the `⟨⟩` notation for `Fin` values, while the ground truth uses pattern matching directly on the constructor. The behavior and results are identical.