[conjecture_answer] Formal Problem Statement: import Mathlib

open List

abbrev olympiadbench2600_answer : ℕ := sorry
theorem olympiadbench2600 :
  Fintype.card {l : List String // 
    l.Permutation ["Bobby", "Peter", "Greg", "Cindy", "Jan", "Marcia"] ∧
    l.indexOf "Greg" < l.indexOf "Peter" ∧
    l.indexOf "Peter" < l.indexOf "Bobby" ∧
    l.indexOf "Marcia" < l.indexOf "Jan" ∧
    l.indexOf "Jan" < l.indexOf "Cindy"} = olympiadbench2600_answer := by sorry. Enumerated answers: . Expected Answer Type: ℕ
<<<Nat.factorial 6 / (Nat.factorial 3 * Nat.factorial 2)>>> 

Explanation: The problem counts permutations of 6 names with ordering constraints. The constraints split into two independent chains: Greg < Peter < Bobby (3 elements) and Marcia < Jan < Cindy (3 elements). The remaining 2 elements (none) are unconstrained. The answer is 6!/(3!*3!*2!) but since there are no unconstrained elements, it simplifies to 6!/(3!*2!).