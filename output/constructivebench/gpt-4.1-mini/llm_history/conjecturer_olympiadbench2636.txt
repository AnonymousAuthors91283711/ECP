[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev olympiadbench2636_answer : ℕ := sorry
theorem olympiadbench2636
(n : ℕ)
(hn : 1000 ≤ n ∧ n < 10000)
(hsqrt : Real.sqrt n = 3 * (digits 10 n).sum)
: n = olympiadbench2636_answer := by sorry. Enumerated answers: . Expected Answer Type: ℕ
Explanation: The problem states that the square root of a four-digit number n equals three times the sum of its digits. Let s = (digits 10 n).sum. Then sqrt n = 3s ⇒ n = 9s². Also, s is the sum of the digits of n, which equals s.

Restricting to 1000 ≤ n < 10000, we look for s where 9s² has digit sum equal to s.

Testing small values of s (digit sums) leads to s=27 → n=9*27²=9*729=6561, and digits sum of 6561 is 6+5+6+1=18 ≠ 27, so discard.

For s=18, n=9*18²=9*324=2916, digits sum = 2+9+1+6=18 matches s.

Also verify sqrt(2916) = 54, and 3*18=54, so condition holds.

No other candidate s in range 4 to 36 (max digit sum for 4-digit number) satisfies all conditions.

Thus, the unique number is 2916.

Hence:

<<<2916>>>