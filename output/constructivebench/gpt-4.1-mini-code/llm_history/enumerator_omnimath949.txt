[write_program]
The problem is to find the probability that a random permutation of 6 elements has exactly one fixed point. We can enumerate all permutations of 6 elements, count the number of fixed points, and print the fraction of permutations with exactly one fixed point.

```python
import math
from fractions import Fraction
from itertools import permutations

def fixed_points_count(perm):
    return sum(1 for i, p in enumerate(perm) if i == p)

n = 6
total = math.factorial(n)
count_exactly_one = 0

# Enumerate permutations to verify count
for perm in permutations(range(n)):
    fp = fixed_points_count(perm)
    if fp == 1:
        count_exactly_one += 1
        print(f"Permutation with exactly one fixed point: {perm}")

frac = Fraction(count_exactly_one, total)
print(f"\nNumber with exactly one fixed point: {count_exactly_one}")
print(f"Total permutations: {total}")
print(f"Probability = {count_exactly_one}/{total} = {float(frac):.6f} (approx)")
print(f"Exact fraction answer: {frac}")
```
This will enumerate permutations of 6 (720 permutations), print each that has exactly one fixed point, then print the exact and approximate_fraction. This helps find the exact rational answer and confirm the value.
