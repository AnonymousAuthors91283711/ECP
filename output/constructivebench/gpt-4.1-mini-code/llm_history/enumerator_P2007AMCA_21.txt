[write_program]
We want to explore complex coefficients \(a,b,c\) of a quadratic \(f(x)=a x^2 + b x + c\) with \(a \neq 0\), such that

\[
\text{sum of zeros} = \text{product of zeros} = \text{sum of coefficients}
\]

where sum_zeros = \(-b/a\), prod_zeros = \(c/a\), sum_coeffs = \(a+b+c\).

This implies \(-b/a = c/a = a+b+c\).

We will enumerate over some small integers \(a,b,c\), \(a \neq 0\), and print all triples where these conditions hold. We print the triple \( (a,b,c) \) followed by the common value of these expressions. We try small integers \(-3\ldots 3\) excluding zero for \(a\).

```python
# Enumerate (a,b,c) with small integer coeffs, a != 0
# Check conditions: -b/a = c/a = a+b+c
# Print out (a,b,c) and the common value if condition holds

def approx_equal(x, y, eps=1e-12):
    return abs(x - y) < eps

print("Enumerating integer triples (a,b,c), a!=0, from -3 to 3:")

for a in range(-3,4):
    if a == 0:
        continue
    for b in range(-3,4):
        for c in range(-3,4):
            sum_zeros = -b / a
            prod_zeros = c / a
            sum_coeffs = a + b + c
            # Check if all three are equal (exact for ints converted to float)
            if approx_equal(sum_zeros, prod_zeros) and approx_equal(prod_zeros, sum_coeffs):
                print(f"a={a}, b={b}, c={c} -> common value = {sum_zeros:.6g}")
```
This will help identify all possible triples that satisfy these equalities approximately â€” since values are rational, equality is exact in float division unless division by zero. This stream can help conjecture possible forms of (a,b,c).
