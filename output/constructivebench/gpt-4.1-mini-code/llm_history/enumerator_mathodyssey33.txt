[write_program]
The problem is to find the number of ordered triples of positive integers \((a,b,c)\) with \(a \leq b \leq c\) and \(a^2 + b^2 + c^2 = 2005\).

We'll enumerate possible triples by iterating \(a,b,c\) within reasonable bounds (since \(a,b,c > 0\) and squares sum to 2005, \(c\) max is \(\lfloor \sqrt{2005} \rfloor\)) and count those meeting all conditions. We'll print each triple satisfying the equation immediately.

```python
import math

def main():
    limit = int(math.isqrt(2005))
    count = 0
    for a in range(1, limit+1):
        a_sq = a*a
        if a_sq > 2005:
            break
        for b in range(a, limit+1):  # b >= a
            b_sq = b*b
            if a_sq + b_sq > 2005:
                break
            # Compute c^2 needed
            c_sq = 2005 - a_sq - b_sq
            if c_sq < b*b:  # c >= b, so c^2 >= b^2
                continue
            c = int(math.isqrt(c_sq))
            if c*c == c_sq and c >= b and c > 0:
                print(f"Found triple: (a={a}, b={b}, c={c})")
                count += 1
    print(f"Total count of triples: {count}")

if __name__ == "__main__":
    main()
```
