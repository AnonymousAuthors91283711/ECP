[write_program]
The problem involves real numbers \( A < B < C < D \) satisfying two ratio conditions and given distances. We want to find \( D - A \).

Given parameters \( A, B, C, D \) with conditions:

- \( A < B < C < D \)
- \( \frac{B - A}{C - B} = \frac{D - A}{C - D} \)
- \( C - A = 3 \)
- \( D - B = 4 \)

We want to find \( D - A \).

We can enumerate rational values for \( B \) and \( C \) within the constraints to find concrete instances satisfying these equations, then compute \( D - A \) and print results.

```python
# Enumerate rational candidates for A, B, C, D satisfying given conditions.
# A < B < C < D real numbers
# Given: C - A = 3, D - B = 4
# Ratio condition: (B - A)/(C - B) = (D - A)/(C - D)
# Goal: compute D - A

print("Enumerating possible (A,B,C,D) with given constraints:")
from fractions import Fraction

# We fix A=0 without loss of generality by translation.
# So C=3.
A = Fraction(0)
C = Fraction(3)

results = set()

# Enumerate B between A and C: 0 < B < 3
# Enumerate B with denominator up to 10 to limit enumeration
for b_num in range(1, 30):
    B = Fraction(b_num, 10)
    if not (A < B < C):
        continue
    # From D-B=4 => D = B+4
    D = B + 4

    # Check ratio condition:
    # (B - A)/(C - B) == (D - A)/(C - D)
    left = (B - A) / (C - B)
    right = (D - A) / (C - D)
    if left == right:
        DA = D - A
        print(f"A=0, B={float(B):.3g}, C=3, D={float(D):.3g}, D-A={float(DA):.5g}")
        results.add(DA)

if results:
    min_DA = min(results)
    max_DA = max(results)
    print(f"Minimal D-A found: {float(min_DA):.5g}")
    print(f"Maximal D-A found: {float(max_DA):.5g}")
else:
    print("No solutions found for enumerated B values.")
```

