[write_program]
The problem asks for the smallest positive integer \( m \) such that \( m^2 - m + 11 \) can be expressed as the product of \( k \) primes for some integer \( k \geq 4 \). Each prime \( p_i \) multiplies to \( m^2 - m + 11 \), and we want the least such \( m > 0 \).

To approach this, I'll write a Python program to:
- Iterate \( m \) starting from 1,
- Compute \( n = m^2 - m + 11 \),
- Factorize \( n \),
- Check if the number of prime factors (counting multiplicities) is at least 4,
- Print all such \( m \) found, then stop after finding a few to guess the minimal one.

I'll factorize by trial division for simplicity and speed given small \( m \) ranges. Let's enumerate and print candidates immediately.

```python
import math

def prime_factors(n):
    factors = []
    # Trial division up to sqrt(n)
    for i in range(2, int(math.isqrt(n)) + 1):
        while n % i == 0:
            factors.append(i)
            n //= i
    if n > 1:
        factors.append(n)
    return factors

def main():
    print("Enumerating m and factorizations for m^2 - m + 11 with ≥4 prime factors:")
    found = []
    for m in range(1, 1000):  # sample range
        val = m*m - m + 11
        factors = prime_factors(val)
        if len(factors) >= 4:
            print(f"m = {m}, value = {val}, prime factors = {factors}")
            found.append(m)
            # Let's stop after finding 5 candidates for brevity
            if len(found) == 5:
                break
    if found:
        print(f"Minimum m found with ≥4 prime factors in m^2 - m + 11 is: {min(found)}")
    else:
        print("No m found with ≥4 prime factors in the search range.")

if __name__ == "__main__":
    main()
```
