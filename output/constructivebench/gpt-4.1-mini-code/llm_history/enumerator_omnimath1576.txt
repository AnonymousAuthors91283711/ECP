[write_program]
The problem concerns finding all positive integers \( n \) such that there exists an integer \( x \) fulfilling

\[ x^n + (2 + x)^n + (2 - x)^n = 0. \]

Our program will enumerate small positive values of \( n \), and for each \( n \), check integers \( x \) in a reasonable range (e.g., \(-10\) to \(10\)) to test this equality exactly. When found, we print the \( n \) and \( x \) values. This may help formulate the full set of solutions.

```python
# Enumerate positive integers n and integer x to check
# x^n + (2+x)^n + (2 - x)^n = 0
# Print solutions immediately

def main():
    max_n = 20  # upper bound on n, can be adjusted
    max_x = 10  # search x in [-max_x, max_x]

    for n in range(1, max_n + 1):
        found = False
        for x in range(-max_x, max_x + 1):
            # Compute the sum exactly using integers
            val = pow(x, n) + pow(2 + x, n) + pow(2 - x, n)
            if val == 0:
                print(f"n = {n}, x = {x}, sum = 0")
                found = True
        if found:
            print(f"--- Solutions found for n = {n} ---")

if __name__ == "__main__":
    main()
```
