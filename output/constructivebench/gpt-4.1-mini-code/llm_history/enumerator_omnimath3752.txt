[write_program]
The problem is to find natural numbers \( n \) such that 30 divides \( n \) and the number of divisors of \( n \) is exactly 30. The task is to enumerate such numbers to explore the set and possibly conjecture explicit forms.

We will:
- Loop over multiples of 30 up to a limit (say 100_000 for speed and size).
- For each multiple, compute the number of divisors.
- Print the number if the number of divisors is 30.

This allows us to investigate the numbers meeting the criteria.

```python
# Enumerate natural numbers n divisible by 30 with exactly 30 divisors
# and print them immediately.

from math import gcd

def divisors_count(n):
    count = 1
    temp = n
    d = 2
    while d * d <= temp:
        exp = 0
        while temp % d == 0:
            temp //= d
            exp += 1
        if exp > 0:
            count *= (exp + 1)
        d += 1 if d == 2 else 2
    if temp > 1:
        count *= 2
    return count

LIMIT = 100_000
print("n divisible by 30 with exactly 30 divisors:")

for n in range(30, LIMIT+1, 30):
    if divisors_count(n) == 30:
        print(n)
```
