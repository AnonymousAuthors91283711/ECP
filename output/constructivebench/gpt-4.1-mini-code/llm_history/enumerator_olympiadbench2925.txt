[write_program]
The problem is to find the smallest natural number \(n > 0\) such that \(\frac{2}{2^n} < 0.1\). Equivalently, this means finding the minimal \(n\) with \(2^{n} > \frac{2}{0.1} = 20\).

We enumerate values of \(n\) starting from 1, checking the inequality, and print each candidate until the condition is met. Then output the minimal such \(n\).

```python
# Enumerate n >= 1 and find minimal n with 2/2^n < 0.1, i.e. 2^n > 20
def main():
    threshold = 0.1
    numerator = 2
    n = 1
    while True:
        val = numerator / (2 ** n)
        print(f"n={n}, 2/2^{n} = {val}")
        if val < threshold:
            print(f"Minimal n with 2/2^n < 0.1 is: {n}")
            break
        n += 1

if __name__ == "__main__":
    main()
```
