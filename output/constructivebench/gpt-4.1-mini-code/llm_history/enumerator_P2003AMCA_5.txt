[write_program]
This problem concerns finding digits \( A, M, C \) (each from 0 to 9) such that:
\[
(10000A + 1000M + 100C + 10) + (10000A + 1000M + 100C + 12) = 123422
\]
and then calculating \( A + M + C \).

We enumerate all \( A, M, C \in \{0,\ldots,9\} \) and check the equality. We print each triple satisfying the equation along with the sum \( A+M+C \).

```python
# Enumerate digits A,M,C in 0..9 to solve:
# (10000*A +1000*M +100*C +10) + (10000*A +1000*M +100*C +12) = 123422
# Print each (A,M,C) that satisfies, then print A+M+C

def main():
    target = 123422
    # Compute sum for given digits A,M,C
    # sum = 2*(10000*A + 1000*M + 100*C) + 22
    for A in range(10):
        for M in range(10):
            for C in range(10):
                val = 2*(10000*A + 1000*M +100*C) + 22
                if val == target:
                    print(f"A={A}, M={M}, C={C}, sum={A+M+C}")

if __name__ == "__main__":
    main()
```
