[write_program]
The problem relates to calculating the relative increase in total price when quantities and price increases are given. Given fixed prices and increase rates, and fixed quantities, we want to find the relative increase expression:

((squantity * (sprice * (1 + sincrease)) + lquantity * (lprice * (1 + lincrease))) - (squantity * sprice + lquantity * lprice)) / (squantity * sprice + lquantity * lprice)

We will enumerate for given values:

- sprice = 1.5
- lprice = 2.0
- sincrease = 0.1
- lincrease = 0.05
- squantity = 2
- lquantity = 1

We can vary small integer values for quantities to check the relative increase, but since quantities are fixed to 2 and 1, just calculate and print the answer exactly.

The output will stream each partial step for clarity and print the exact fraction and float values.

```python
from fractions import Fraction

def main():
    # Given values
    sprice = Fraction(3, 2)  # 1.5
    lprice = Fraction(2, 1)  # 2.0
    sincrease = Fraction(1, 10)  # 0.1
    lincrease = Fraction(1, 20)  # 0.05
    squantity = 2
    lquantity = 1

    # Original total price
    original_total = squantity * sprice + lquantity * lprice
    print(f"Original total price: {original_total} = {float(original_total)}")

    # Increased total price
    increased_total = squantity * (sprice * (1 + sincrease)) + lquantity * (lprice * (1 + lincrease))
    print(f"Increased total price: {increased_total} = {float(increased_total)}")

    # Relative increase
    relative_increase = (increased_total - original_total) / original_total
    print(f"Relative increase (exact): {relative_increase}")
    print(f"Relative increase (float): {float(relative_increase)}")

if __name__ == "__main__":
    main()
```
