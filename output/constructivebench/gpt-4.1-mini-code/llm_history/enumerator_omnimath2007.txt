[write_program]
This problem involves finding triples (A,B,C) from {0,...,9} such that a 7-digit number N has a specific form and is divisible by 792. The number is:

N = 5*10^6 + A*10^5 + B*10^4 + 3*10^3 + 7*10^2 + C*10 + 2

We want to find all (A,B,C) for which N % 792 == 0.

Strategy:
- Iterate over all A, B, C in 0..9.
- Construct N.
- Check N mod 792.
- Print all triples satisfying the divisibility.
- At the end print a summary of solutions found.

```python
# Enumerate all triples A,B,C in [0..9] to find when
# N = 5*10^6 + A*10^5 + B*10^4 + 3000 + 700 + C*10 + 2
# is divisible by 792

def main():
    divisor = 792
    base = 5_000_000 + 3_000 + 700 + 2  # fixed digits part
    solutions = []
    for A in range(10):
        A_part = A * 100_000
        for B in range(10):
            B_part = B * 10_000
            for C in range(10):
                N = base + A_part + B_part + C*10
                if N % divisor == 0:
                    print(f"A={A}, B={B}, C={C}, N={N} divisible by {divisor}")
                    solutions.append((A,B,C))
    print(f"Total solutions: {len(solutions)}")
    if solutions:
        print("Solutions:", solutions)

if __name__ == "__main__":
    main()
```
