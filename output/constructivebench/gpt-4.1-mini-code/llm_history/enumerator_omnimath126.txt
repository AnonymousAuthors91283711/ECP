[write_program]
The problem asks to find all integers \( s \geq 4 \) such that there exist positive integers \( a,b,c,d \) satisfying:
\[ s = a+b+c+d \quad \text{and} \quad s \mid abc + abd + acd + bcd. \]

We will enumerate \( s \) and quadruples \((a,b,c,d)\) with a small cutoff, and print all \( s \) for which such quadruples exist. This will help us conjecture the solution set.

```python
# Enumerate s >=4 up to a limit, and positive a,b,c,d <= s (reasonable upper bound)
# Check if s divides the given combination
# Print s when found, and print (a,b,c,d)

MAX_S = 30  # search s from 4 to MAX_S
MAX_A = 20  # upper bound for a,b,c,d searching

found_s = set()

for s in range(4, MAX_S+1):
    found = False
    # a,b,c,d positive integers with sum s
    # to reduce search space, a,b,c at least 1, d = s - (a+b+c)
    for a in range(1, min(MAX_A, s-2)+1):
        for b in range(1, min(MAX_A, s - a -1)+1):
            for c in range(1, min(MAX_A, s - a - b)+1):
                d = s - (a + b + c)
                if d < 1 or d > MAX_A:
                    continue
                # Calculate sum of triple products:
                val = a*b*c + a*b*d + a*c*d + b*c*d
                if val % s == 0:
                    print(f"s={s}, a={a}, b={b}, c={c}, d={d} -> divisible")
                    found_s.add(s)
                    found = True
                    break
            if found:
                break
        if found:
            break

print("\nCandidate values of s with such quadruples:")
for s in sorted(found_s):
    print(s)
```

