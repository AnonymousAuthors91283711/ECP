[write_program]
The problem involves finding digits \( W, E, Y, S, C, N \) each in \(\{0,\ldots,9\}\), with given constraints including \(W=3\), injectivity (all distinct digits), nonzero digits except possibly some, and an equation linking these digits. We want to enumerate all 6-tuples satisfying the equation:

\[
(10W + E) \times (100E + 10Y + E) = 10000S + 1000C + 100E + 10N + E
\]

Given \(W=3\), no zero digits except possibly allowed by hNoZero (the problem states E, W, S, Y, C, N â‰  0), so all digits nonzero. Moreover, all digits are distinct.

We will enumerate all possible \(E, Y, S, C, N\) in 1..9 except 3 (since W=3 and digits must be distinct), check the equation, and print the tuples.

```python
# Enumerate all digits E,Y,S,C,N in 1..9 except 3 (since W=3)
# Check injectivity (distinctness)
# Check relation: (10*W+E)*(100*E+10*Y+E) == 10000*S + 1000*C + 100*E + 10*N + E

W = 3
digits = set(range(1,10))
digits_no_w = digits - {W}

for E in digits_no_w:
    for Y in digits_no_w - {E}:
        for S in digits_no_w - {E, Y}:
            for C in digits_no_w - {E, Y, S}:
                for N in digits_no_w - {E, Y, S, C}:
                    # Left side
                    left = (10*W + E)*(100*E + 10*Y + E)
                    # Right side
                    right = 10000*S + 1000*C + 100*E + 10*N + E
                    if left == right:
                        print(f"W={W}, E={E}, Y={Y}, S={S}, C={C}, N={N}, check: {left} == {right}")
```

