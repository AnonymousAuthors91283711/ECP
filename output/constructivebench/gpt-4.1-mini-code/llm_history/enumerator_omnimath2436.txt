[write_program]
This problem looks for the least value of a sum of quadratic expressions evaluated at the vertices of a unit square translated by (x,y). To help conjecture the minimal sum and corresponding (x,y), we enumerate values of (x,y) on a small grid and print the corresponding sums.

```python
# Enumerate sums of the given expression over (x,y) on a small grid
# The sum is over four points: (x,y), (x+1,y), (x+1,y+1), (x,y+1)
# Each sum term: p_i.1^2 + 2*p_i.1 + p_i.2^2 + 4*p_i.2
# We vary x,y from -2 to 2 with step 0.5

def f(x, y):
    pts = [(x,y), (x+1,y), (x+1,y+1), (x,y+1)]
    return sum(px**2 + 2*px + py**2 + 4*py for (px,py) in pts)

min_val = None
min_pts = []
step = 0.5
print("Enumerating sums for x,y in [-2,2] with step 0.5")
for i in range(-4,5):    # x in [-2,2]
    for j in range(-4,5):  # y in [-2,2]
        x = i*step
        y = j*step
        val = f(x,y)
        print(f"x={x:.1f}, y={y:.1f}, sum={val:.4f}")
        if (min_val is None) or (val < min_val):
            min_val = val
            min_pts = [(x,y)]
        elif val == min_val:
            min_pts.append((x,y))
print(f"Minimal sum found: {min_val:.4f} at points {min_pts}")
```
