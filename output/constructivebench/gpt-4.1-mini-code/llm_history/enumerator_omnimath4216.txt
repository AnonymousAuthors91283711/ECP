[write_program]
The problem looks for natural numbers \( n > 0 \) such that all digits of \( n^2 \) in base 10 are odd. We will enumerate \( n \) in a small range (e.g., [1..1000]) and check whether every digit of \( n^2 \) is odd. We print each valid \( n \) found along with \( n^2 \) for inspection.

```python
def digits(n):
    # Return list of digits of n in base 10
    return [int(d) for d in str(n)]

def all_odd_digits(n):
    # Check if all digits in n are odd
    return all(d % 2 == 1 for d in digits(n))

print("n and n^2 where all digits of n^2 are odd:")
for n in range(1, 1001):
    sq = n * n
    if all_odd_digits(sq):
        print(f"n={n}, n^2={sq}")
```
