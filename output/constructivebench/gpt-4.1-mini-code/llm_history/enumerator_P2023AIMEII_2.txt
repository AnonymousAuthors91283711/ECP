[write_program]
This problem asks to find the greatest natural number less than 1000 that is a palindrome in both base 10 and base 8. We enumerate numbers under 1000, test palindrome properties in decimal and octal, print every such number found, and finally output the greatest one.

```python
def is_palindrome(lst):
    return lst == lst[::-1]

def digits_base(n, base):
    if n == 0:
        return [0]
    digs = []
    while n > 0:
        digs.append(n % base)
        n //=base
    return digs[::-1]

max_palindrome = None

for n in range(999, 0, -1):
    dec_digits = digits_base(n, 10)
    if not is_palindrome(dec_digits):
        continue
    oct_digits = digits_base(n, 8)
    if is_palindrome(oct_digits):
        print(n)
        if max_palindrome is None or n > max_palindrome:
            max_palindrome = n

print("Greatest palindrome <1000 in base 10 and base 8:", max_palindrome)
```
