[write_program]
The problem is to count permutations \( p \) of \(\{0,1,2,3,4\}\) such that \(p(0)! + p(1)! < p(3)! + p(4)!\). We'll compute factorials once, iterate over all 120 permutations, and print each permutation and whether it satisfies the inequality. Finally, print the count.

```python
from math import factorial
from itertools import permutations

# Precompute factorials for 0..4 to avoid recomputation
fact = [factorial(i) for i in range(5)]

count = 0
for p in permutations(range(5)):
    lhs = fact[p[0]] + fact[p[1]]
    rhs = fact[p[3]] + fact[p[4]]
    if lhs < rhs:
        count += 1
        print(f"Perm: {p}, lhs: {lhs}, rhs: {rhs}")
print("Total satisfying permutations:", count)
```
