[write_program]
The problem involves checking when the expression \(2^n + 12^n + 2011^n\) is a perfect square for positive integers \(n\). We'll enumerate values of \(n\) and test if the sum is a perfect square. Since the numbers grow fast, we'll check small \(n\) to conjecture which \(n\) satisfy the condition.

```python
import math

def is_square(x):
    r = math.isqrt(x)
    return r*r == x

print("Checking n from 1 to 20 for perfect squares of 2^n + 12^n + 2011^n:")
for n in range(1, 21):
    val = 2**n + 12**n + 2011**n
    if is_square(val):
        print(f"n={n}: {val} is a perfect square")
```

