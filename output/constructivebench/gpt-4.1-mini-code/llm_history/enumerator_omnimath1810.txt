[write_program]
The problem is to find all real pairs \((x,y)\) satisfying the system:
\[
\begin{cases}
x^2 + y = 12 \\
y^2 + x = 12
\end{cases}
\]

To aid conjecture, I will enumerate pairs \((x,y)\) with \(x, y \in \{-5, -4.9, \ldots, 5\}\) approximately, check which pairs satisfy both equations closely, and print exact pairs when possible.

```python
# Enumerate approximate solutions to the system:
# x^2 + y = 12 and y^2 + x = 12

import math

# We test x, y over a grid; small step for better accuracy
step = 0.1
tol = 1e-6

xs = [round(-5 + i*step, 6) for i in range(int(10/step)+1)]

# Due to the symmetry of the system, we can first try the resultant approach:
# From x^2 + y = 12 => y = 12 - x^2
# Substitute into second: (12 - x^2)^2 + x = 12
# So check for roots of (12 - x^2)^2 + x - 12 = 0

def check_solution(x):
    y = 12 - x*x
    lhs2 = y*y + x
    if abs(lhs2 - 12) < tol:
        # Print exact if possible, else approximate:
        # Check if x, y close to integer or known simple number
        def nice_val(v):
            if abs(v - round(v)) < tol:
                return str(round(v))
            return f"{v:.6f}"
        print(f"(x, y) = ({nice_val(x)}, {nice_val(y)})")

print("Enumerating candidate solutions by solving (12 - x^2)^2 + x = 12:")
for x in xs:
    check_solution(x)
```

