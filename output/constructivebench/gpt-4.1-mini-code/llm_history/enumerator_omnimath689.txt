[write_program]
The problem is to count the number of positive integer solutions \((a,b,c,d)\) to the linear Diophantine equation:
\[
12a + 21b + 28c + 84d = 2024,
\]
with \(a,b,c,d > 0\).

The program tries positive \(d\) (limited by \(84d \leq 2024\)), then for each fixed \(d\), tries positive \(c\), and for each \((c,d)\) pair, tries positive \(b\), then derives \(a\) if integer and positive.

To keep output manageable per instructions, we'll print each solution immediately, and ultimately print the total count as the answer.

```python
# Enumerate positive integer solutions (a,b,c,d) to 12a + 21b + 28c + 84d = 2024.

def main():
    target = 2024
    count = 0
    print("Enumerating solutions for 12a+21b+28c+84d=2024 with a,b,c,d>0")
    max_d = target // 84
    for d in range(1, max_d +1):
        rem_d = target - 84*d
        max_c = rem_d // 28
        for c in range(1, max_c +1):
            rem_c = rem_d - 28*c
            max_b = rem_c // 21
            for b in range(1, max_b +1):
                rem_b = rem_c - 21*b
                # a must be positive integer: 12a = rem_b, so rem_b %12==0 and a=rem_b/12>0
                if rem_b >0 and rem_b %12 ==0:
                    a = rem_b // 12
                    if a >0:
                        count +=1
                        print(f"Solution {count}: a={a}, b={b}, c={c}, d={d}")
    print(f"Total number of positive integer solutions = {count}")

if __name__ == "__main__":
    main()
```
