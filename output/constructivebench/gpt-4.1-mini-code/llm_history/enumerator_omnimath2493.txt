[write_program]
The problem is about counting the number of weakly increasing functions from a 10-element domain (`Fin 10`) to a 9-element codomain (`Fin 9`), where the image (range) size is at most 3. We want to enumerate these functions and count them.

Key points:
- The domain size n = 10.
- Codomain size k = 9.
- Function s: Fin 10 → Fin 9, weakly increasing (s(i) ≤ s(j) for i ≤ j).
- The image of s has size ≤ 3.

Approach:
- Weakly increasing functions from {0,...,9} to {0,...,8} can be seen as nondecreasing sequences of length 10 with values in [0..8].
- Restrict to sequences whose distinct values form at most 3 distinct elements.
- Enumerate all nondecreasing sequences limited to ≤3 distinct values.
- For example, pick 1, 2, or 3 distinct elements from 0..8, then generate all nondecreasing sequences with those values.

We:
- Enumerate all subsets T of {0,...,8} with size 1, 2, or 3.
- For each subset T (size m), enumerate all nondecreasing sequences of length 10 from T.
- Count the number of such sequences.
- Sum over all subsets T.
- Print each function as found could be huge, so we print the counts and intermediate outputs to have streamable partial results.

Using combinations with repetitions and combinatorial arguments, number of nondecreasing sequences of length n from an m-element set is C(n+m-1, n).

We will:
- Calculate and print counts for each subset size.
- Then sum all.

Code enumerates the counts per unique combination of T and prints partial sums.

```python
from math import comb
from itertools import combinations

# Enumerate number of weakly increasing functions from 10-element domain to 9-element codomain
# with image size ≤ 3.

n = 10  # domain size
k = 9   # codomain size
max_image_size = 3

total_count = 0
print(f'Parameters: domain size={n}, codomain size={k}, max image size={max_image_size}\n')

for m in range(1, max_image_size+1):
    count_m = 0
    subsets = list(combinations(range(k), m))
    print(f'Image size = {m}, number of subsets = {len(subsets)}')
    for T in subsets:
        # Number of weakly increasing sequences of length n from T is comb(n + m - 1, n)
        seq_count = comb(n + m - 1, n)
        count_m += seq_count
    total_count += count_m
    print(f'  Total functions with image size = {m}: {count_m}')

print(f'\nTotal number of weakly increasing functions with image size ≤ {max_image_size}: {total_count}')
```
