[write_program]
The problem defines a sequence \( a_n \) with:
- \( a_1 = 1 \)
- \( a_n = (a_{n-1})! + 1 \) for \( n > 1 \)

We want to find the smallest \( n \) such that \( a_n > 10^{10} \).

Because of the factorial growth, the sequence explodes quickly. The program will compute \( a_n \) for \( n=1,2,3,\ldots \) until \( a_n > 10^{10} \), printing each \( a_n \) exactly, then print the minimal \( n \) satisfying this.

```python
import math

def main():
    threshold = 10**10
    a = 1
    print("a(1) =", a)
    n = 1
    while a <= threshold:
        a = math.factorial(a) + 1  # Compute a(n) = (a(n-1))! + 1
        n += 1
        print(f"a({n}) =", a)
    print("Smallest n with a(n) > 10^10:", n)

if __name__ == "__main__":
    main()
```
