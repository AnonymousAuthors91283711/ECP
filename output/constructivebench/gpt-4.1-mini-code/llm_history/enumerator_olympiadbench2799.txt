[write_program]
The problem looks for the smallest natural number \( n > 0 \) such that:

\[
\binom{n+2}{2} = \binom{n}{2} + T
\]

where \( T = 75 \) by default, and \(\binom{n}{2} = \frac{n(n-1)}{2}\).

We'll enumerate values of \( n \) starting from 1 to find those satisfying the equation exactly, then print the minimal solution.

```python
from math import comb

T = 75
print(f"T = {T}")

# Equation: C(n+2,2) = C(n,2) + T
# We check n from 1 upwards to find all n satisfying it

found = []
for n in range(1, 100):  # 100 is arbitrary large enough
    left = comb(n+2, 2)
    right = comb(n, 2) + T
    if left == right:
        print(f"n = {n}, C(n+2,2) = {left}, C(n,2)+T = {right}")
        found.append(n)

if found:
    print(f"Minimal n is {min(found)}")
else:
    print("No solutions found up to n=99")
```
