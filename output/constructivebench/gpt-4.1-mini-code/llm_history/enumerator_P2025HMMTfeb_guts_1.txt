[write_program]
The problem asks to count nine-digit prime numbers with digits from 1 to 9, each digit appearing exactly once (i.e., permutations of digits 1 to 9 that are prime). We will enumerate permutations of digits 1 through 9, check primality for each, and print all primes found. Then, print the total count.

```python
from math import isqrt
from itertools import permutations

def is_prime(n):
    if n < 2: return False
    if n % 2 == 0 and n != 2: return False
    limit = isqrt(n)
    for i in range(3, limit+1,2):
        if n % i == 0:
            return False
    return True

digits = '123456789'
count = 0
print("Checking 9-digit pandigital primes with digits 1-9:")
for p in permutations(digits):
    num = int(''.join(p))
    # Skip even last digit or 5 to speed up
    if num % 2 == 0 or num % 5 == 0:
        continue
    if is_prime(num):
        print(num)
        count += 1
print("Total count:", count)
```
