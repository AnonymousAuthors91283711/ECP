[write_program]
The problem seems to be about counting triples \((a,b,c)\) of positive integers with \(a+b+c = n\), \(a \leq b \leq c\), and \(a+b > c\) (triangle inequalities), for \(n = 10, 11, 12\). We want to enumerate these counts \(T(n)\).

Below is a Python program that:
- Enumerates all triples \((a,b,c)\) with the conditions for small \(n\).
- Prints each valid triple immediately.
- Prints the total count \(T(n)\) for each \(n\).

This supports conjecturing the correct formula for olympiadbench2382_answer(n).

```python
def triangle_triples(n):
    count = 0
    for a in range(1, n+1):
        for b in range(a, n+1):
            c = n - a - b
            if c < b:
                continue
            if c < b: # Ensures a ≤ b ≤ c
                continue
            if c < b:
                continue
            if c < b:
                continue
            if c < b:
                continue
            # Now a ≤ b ≤ c and a+b+c=n
            if c >= b and a + b > c:
                print(f"n={n}: triple=({a},{b},{c})")
                count += 1
    return count


if __name__ == "__main__":
    for n in [10, 11, 12]:
        print(f"Enumerating triples for n={n}:")
        total = triangle_triples(n)
        print(f"T({n}) = {total}")
```

