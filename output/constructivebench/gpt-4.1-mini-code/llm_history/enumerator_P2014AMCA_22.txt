[write_program]
This problem counts integer pairs (p, q) with 1 ≤ p ≤ 2012 and q ≥ 0 such that \(2^p \leq 5^q < 2^{p+1}\).

Rewrite as:

\[
2^p \le 5^q < 2^{p+1} \implies p \log 2 \le q \log 5 < (p+1) \log 2
\]

For each \(p\), \(q\) lies in the interval:

\[
\left[ \frac{p \log 2}{\log 5}, \frac{(p+1) \log 2}{\log 5} \right)
\]

We want integers \(q\) in this interval.

The count for each \(p\) is:

\[
\#\{ q \in \mathbb{N} : \lceil \frac{p \log 2}{\log 5} \rceil \le q < \frac{(p+1) \log 2}{\log 5} \}
\]

equal to:

\[
\max(0, \lfloor \frac{(p+1) \log 2}{\log 5} \rfloor - \lceil \frac{p \log 2}{\log 5} \rceil + 1)
\]

We enumerate for p=1..2012 to collect all answers and total count.

```python
import math

def main():
    log2 = math.log(2)
    log5 = math.log(5)
    total = 0
    for p in range(1, 2013):
        left = p * log2 / log5
        right = (p + 1) * log2 / log5
        q_low = math.ceil(left)
        q_high = math.floor(right) - 1  # Since 5^q < upper bound, q < floor(right)
        count = max(0, q_high - q_low + 1)
        if count > 0:
            for q in range(q_low, q_high + 1):
                print(f"(p={p}, q={q}) satisfies 2^{p} ≤ 5^{q} < 2^{p+1}")
        total += count
    print(f"Total number of pairs (p, q): {total}")

if __name__ == "__main__":
    main()
```
