[write_program]
The problem asks to find the greatest lower bound (infimum) of the set of real numbers \( x \) for which there exists a positive \( y \) such that

\[
x > 0 \quad \text{and} \quad x + y^2 = x y.
\]

Rearranging:

\[
x + y^2 = x y \implies x y - x = y^2 \implies x (y - 1) = y^2,
\]
so
\[
x = \frac{y^2}{y - 1} \quad \text{for } y > 0, \, y \neq 1.
\]

We must find the infimum of all positive \( x \) of this form, where \( y > 0 \).

To analyze this with code, we can enumerate values of \( y \) in (0, 1) and (1, some upper bound), compute \( x \), collect those \( x > 0 \), and print them.

Because \( y = 1 \) is excluded (denominator zero), the domain splits into two intervals.

We can search \( y \in \{0.1, 0.2, ..., 0.9\} \) and \( y \in \{1.1, 1.2, ..., 5\} \) and print corresponding \( x \).

From analysis:

- For \( y \to 1^+ \), denominator small positive, \( x \to +\infty \).
- For \( y \to 1^- \), denominator small negative, but \( y^2 > 0 \) over negative sums to negative \( x \).
- Check \( y > 1 \): denominator positive, \( x > 0 \).
- Check \( 0 < y < 1 \): denominator negative, so \( x < 0 \), not in the set.

Therefore, the valid \( y \) are \( y > 1 \).

We print \( y, x \) for such samples and consider smallest \( x \).

```python
# Enumerate y > 1 and compute x = y^2/(y-1) > 0
# Print each candidate x immediately. Then print the minimal observed x.

import math

print("Enumerating values y>1")
ys = [1 + i*0.1 for i in range(1, 41)]  # y from 1.1 to 5.0 step 0.1
xmin = math.inf

for y in ys:
    x = y*y/(y - 1)
    if x > 0:
        print(f"y={y:.2f}, x={x:.6f}")
        if x < xmin:
            xmin = x

print(f"Minimum x found: {xmin:.6f}")
```

