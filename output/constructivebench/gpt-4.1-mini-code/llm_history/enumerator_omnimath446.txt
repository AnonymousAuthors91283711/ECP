[write_program]
The problem is to find the smallest positive integer n such that the sum of squares from 1^2 to n^2 is divisible by 100.

We know the sum of squares up to n is n(n+1)(2n+1)/6. We want this sum modulo 100 == 0.

The program will enumerate n from 1 up to some reasonable limit (like 200) and print all n where the sum of squares mod 100 is zero. It will print each qualifying n immediately, then the smallest such n as the answer.

```python
# Enumerate n where sum_{i=1}^n i^2 is divisible by 100.
# sum_i^2 = n(n+1)(2n+1)/6 mod 100 == 0
# We test n from 1 to 200.

def sum_squares_mod(n):
    # Compute sum of i^2, i=1..n modulo 100 efficiently.
    return (n * (n + 1) * (2 * n + 1) // 6) % 100

def main():
    print("Enumerating n with sum of squares mod 100 == 0")
    candidates = []
    for n in range(1, 201):
        if sum_squares_mod(n) == 0:
            print(f"n = {n}, sum_squares mod 100 = 0")
            candidates.append(n)
    if candidates:
        print(f"Minimal such n = {candidates[0]}")
    else:
        print("No such n found up to 200")

if __name__ == "__main__":
    main()
```
