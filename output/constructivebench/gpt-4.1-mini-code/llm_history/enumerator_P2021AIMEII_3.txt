[write_program]
The problem involves counting permutations \( \pi \) of the set \(\{1,2,3,4,5\}\) such that the sum \(\sum_{i=1}^5 \pi(i) \cdot i\) is divisible by 3. To explore this, the program enumerates all permutations of \(\{1,2,3,4,5\}\), calculates the sum, and checks divisibility by 3, printing qualifying permutations and counting them.

```python
import itertools

def main():
    n = 5
    count = 0
    elements = list(range(1, n + 1))
    for p in itertools.permutations(elements):
        s = sum((i+1)*p[i] for i in range(n))
        if s % 3 == 0:
            print(p, "sum =", s)
            count += 1
    print("Total permutations with sum divisible by 3:", count)

if __name__ == "__main__":
    main()
```
