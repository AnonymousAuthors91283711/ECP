[write_program]
The problem is to find the least natural number K' > 9 such that (2010 - 10) is divisible by (K' - 9), and for all K'' > 9 with the same divisibility condition, the absolute difference |K' - (2010 - 10)/(K'-9)| is minimal.

We reformulate as: Let N = 2000.
For K > 9, if (K - 9) divides 2000, then compute D(K) = |K - (2000 / (K - 9))|.
We want the minimum D(K) over all such K > 9.

We'll enumerate all divisors d of 2000, set K = d + 9, compute D(K), print candidates, and finally print the minimal D(K) and corresponding K.

2000 factors: 2^4 * 5^3, so divisors are relatively small.

We implement the enumeration and print candidates as found.

```python
# Enumerate all K > 9 such that (K-9) divides 2000
# Compute |K - 2000/(K-9)| and print each candidate
# At the end, print minimal difference and corresponding K.

def divisors(n):
    # Efficient divisor enumeration
    divs = []
    i = 1
    while i*i <= n:
        if n % i == 0:
            divs.append(i)
            if i != n//i:
                divs.append(n//i)
        i += 1
    return sorted(divs)

N = 2000
candidates = []
for d in divisors(N):
    K = d + 9
    diff = abs(K - N//d)
    # Since N/d = 2000/d is exact division
    print(f"K={K}, diff={diff}")
    candidates.append((diff, K))

candidates.sort()
min_diff = candidates[0][0]
min_Ks = [k for diff, k in candidates if diff == min_diff]
print(f"Minimum difference: {min_diff}")
print(f"Minimum K values: {min_Ks}")
```
