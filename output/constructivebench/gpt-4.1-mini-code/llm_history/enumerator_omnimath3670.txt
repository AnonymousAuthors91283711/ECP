[write_program]
The problem suggests finding all functions \( f:\mathbb{R} \to \mathbb{R} \) positive on positive inputs satisfying 
\[ f(xy + f(x)) = x f(y) + 2 \]
for all positive \( x, y \).

To explore possible explicit forms, consider restricting to small positive inputs and try functional forms \(f(x) = a x + b\), or \(f(x) = c\), etc. We enumerate candidates by choosing parameters \(a,b\).

Below, the program tests linear functions \(f(x) = a x + b\) for rational \(a,b\) in a small range and checks the defining equation on a few positive values \(x,y\).

```python
# Enumerate candidate functions f(x) = a*x + b on small parameter grid
# and check if they satisfy f(x*y + f(x)) = x*f(y) + 2 for sampled positive x,y.

def f_candidate(a, b):
    return lambda x: a * x + b

def check_condition(f, samples):
    # For each (x,y), verify LHS == RHS within tolerance
    for x, y in samples:
        lhs = f(x * y + f(x))
        rhs = x * f(y) + 2
        if abs(lhs - rhs) > 1e-10:
            return False
    return True

def main():
    # Small positive samples for x,y
    samples = [(1,1), (2,1), (1,2), (0.5,0.5), (3,2)]
    
    a_values = [0, 1, 2]
    b_values = [0, 1, 2]

    print("Testing functions f(x) = a*x + b for a,b in {0,1,2}:")

    for a in a_values:
        for b in b_values:
            f = f_candidate(a,b)
            if check_condition(f,samples):
                print(f"f(x) = {a}*x + {b} satisfies the condition")

if __name__=="__main__":
    main()
```
