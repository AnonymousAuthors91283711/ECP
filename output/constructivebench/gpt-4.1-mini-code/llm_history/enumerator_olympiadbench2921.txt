[write_program]
The problem requires finding all numbers less than 10,000 whose first 4 digits in base 2 equal their first 4 digits in base 5. We will enumerate all such `n` below 10,000, print them as found, sum them, and then output the sum mod 10,000.

```python
def digits_in_base(n, base):
    digits = []
    while n > 0:
        digits.append(n % base)
        n //= base
    digits.reverse()
    return digits if digits else [0]

def first4_digits_equal(n):
    b2 = digits_in_base(n, 2)
    b5 = digits_in_base(n, 5)
    if len(b2) < 4 or len(b5) < 4:
        return False
    return b2[:4] == b5[:4]

total = 0
print("Numbers under 10000 whose first 4 base2 digits equal first 4 base5 digits:")
for n in range(10000):
    if first4_digits_equal(n):
        print(n)
        total += n

print("Sum mod 10000:", total % 10000)
```
