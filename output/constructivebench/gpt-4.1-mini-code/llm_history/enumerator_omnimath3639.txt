[write_program]
The problem asks for the smallest positive integer \( n \) such that for every integer \( k \) from 0 up to 72, the fraction \(\frac{k+19}{n+k+21}\) is irreducible (i.e., the numerator and denominator are coprime).

To explore this, we can:
- Iterate over small \( n \) values,
- For each \( n \), check all \( k \in \{0, \ldots, 72\} \),
- Compute numerator \(k+19\), denominator \(n+k+21\),
- Check if gcd of numerator and denominator is 1,
- If gcd = 1 for all \(k\), print this candidate \( n \).

We can enumerate values starting from 1 upwards and stop after a certain upper limit since the problem is combinatorial in nature.

```python
import math

def is_irreducible_for_all_k(n, k_max=72):
    for k in range(k_max+1):
        numerator = k + 19
        denominator = n + k + 21
        # Check gcd to see if irreducible
        if math.gcd(numerator, denominator) != 1:
            return False
    return True

def main():
    k_max = 72
    # Try small n starting from 1 up to a reasonable upper bound
    for n in range(1, 300):
        if is_irreducible_for_all_k(n, k_max):
            print(f"Candidate n = {n} works (all fractions irreducible)")
            # Since problem requires the least such n, we can break after first found
            break

if __name__ == "__main__":
    main()
```
