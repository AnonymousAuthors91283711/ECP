[write_program]
The problem involves integers \(a, b\) such that \(a\) and \(b\) are coprime and relate to the counts of total triangles and isosceles triangles formed from 2020 points, with certain gcd conditions. We want to enumerate \(a, b\) for given \(n\), print \(a,b\), check coprimality, and print the combined answer \(100a+b\).

We will try a few values of \(n\) (like 10, 20, 2020), compute total triangles and isosceles triangles counts, compute gcd, calculate \(a,b\), print all triples \((a,b,100a+b)\) for coprime pairs to conjecture the pattern.

```python
from math import gcd

def enumerate_answers():
    for n in [10, 20, 50, 100, 2020]:  # sample n values including 2020
        total = n*(n-1)*(n-2)//6
        isosceles = n*(n-1)
        g = gcd(isosceles, total)
        a = isosceles // g
        b = total // g
        # Check coprimality
        if gcd(a, b) == 1:
            answer = 100 * a + b
            print(f"n={n}: a={a}, b={b}, 100*a+b={answer}")

if __name__ == "__main__":
    enumerate_answers()
```
