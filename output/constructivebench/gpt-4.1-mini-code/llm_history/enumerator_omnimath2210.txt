[write_program]
The problem asks to count integer lattice points \( (p_1, p_2) \) such that \( p_1^2 + p_2^2 < 2019 \) and satisfy the equation \( p_1^2 + \min(p_1, p_2) = p_2^2 + \max(p_1, p_2) \).

We'll enumerate all integer pairs \( (p_1, p_2) \) with \( p_1^2 + p_2^2 < 2019 \), check the equation, and print all solutions. The range for \( p_1, p_2 \) will be roughly the integer values with \(|p_i| < \sqrt{2019} \approx 44.9\), thus from \(-44\) to 44.

```python
import math

def main():
    limit = 2019
    max_coord = int(math.isqrt(limit - 1))  # max absolute value for coordinates
    count = 0
    # Enumerate integer points in the disk
    for x in range(-max_coord, max_coord + 1):
        x2 = x*x
        for y in range(-max_coord, max_coord + 1):
            y2 = y*y
            if x2 + y2 < limit:
                mn = min(x, y)
                mx = max(x, y)
                # Check equation: x^2 + min(x,y) == y^2 + max(x,y)
                if x2 + mn == y2 + mx:
                    print(f"Solution: (p1={x}, p2={y})")
                    count += 1
    print(f"Total number of solutions: {count}")

if __name__ == "__main__":
    main()
```
