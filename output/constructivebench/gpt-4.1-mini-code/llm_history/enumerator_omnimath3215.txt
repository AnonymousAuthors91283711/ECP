[write_program]
The problem defines a predicate \( P(m,n) \) which holds if and only if \( m > 0 \), \( n > 0 \), and \(\frac{m+n}{2} = 5\). The task is to find the greatest \( n \) such that there exists \( m \) with \( P(m,n) \).

Since \(m, n\) are natural numbers greater than zero, and \(\frac{m+n}{2} = 5\), it follows that \(m+n = 10\). We want to enumerate all pairs \((m,n)\) with \(m,n > 0\) and \(m+n=10\), then print out all possible \(n\), and identify the maximum \(n\) such that such \(m\) exists.

```python
# Enumerate all positive integer pairs (m,n) with (m + n)/2 = 5
# i.e. m + n = 10, m > 0, n > 0
# Output all n for which there exists m satisfying this.

def main():
    target_sum = 10
    candidates = []
    print(f"Looking for pairs (m,n) with m > 0, n > 0 and (m + n)/2 = 5, i.e. m + n = {target_sum}")
    for m in range(1, target_sum):  # m in 1..9
        n = target_sum - m
        if n > 0:
            print(f"Found pair: m={m}, n={n}")
            candidates.append(n)
    max_n = max(candidates) if candidates else None
    print(f"All n found: {candidates}")
    print(f"Maximum n with such m: {max_n}")

if __name__ == "__main__":
    main()
```
