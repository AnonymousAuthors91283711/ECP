[write_program]
The problem involves finding the least value \( m = 25p \) where \( a, p \in \mathbb{N} \), \( a > 0 \), \( p > 0 \) satisfy:
- \( 500 < 5a + 5p < 1000 \)
- \( 1000 < 2a + 12p < 2000 \).

We want to enumerate triples \((a,p,m)\) that satisfy these constraints and identify the smallest \( m = 25p \).

We'll try small values for \( p \) and \( a \), print all valid triples, and then print the minimum \( m \) found.

```python
# Enumerate (a,p,m=25p) with constraints:
# 0 < a, 0 < p
# 500 < 5a + 5p < 1000  =>  100 < a + p < 200
# 1000 < 2a + 12p < 2000
# Print all valid triplets immediately and finally the minimal m.

def main():
    min_m = None
    # We bound p and a by reasoning about inequalities:
    # From 5(a+p) < 1000 => a+p < 200
    # So a,p < 200 (fine for enumeration)
    for p in range(1, 200):
        for a in range(1, 200):
            s1 = 5*a + 5*p
            s2 = 2*a + 12*p
            if 500 < s1 < 1000 and 1000 < s2 < 2000:
                m = 25 * p
                print(f"a={a}, p={p}, m={m}")
                if min_m is None or m < min_m:
                    min_m = m
    if min_m is not None:
        print(f"Minimum m = {min_m}")
    else:
        print("No solution found")

if __name__ == "__main__":
    main()
```
