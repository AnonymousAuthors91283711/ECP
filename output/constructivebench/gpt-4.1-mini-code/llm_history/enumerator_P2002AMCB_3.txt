[write_program]
The problem counts natural numbers n > 0 for which n² - 3n + 2 is prime. We enumerate n from 1 to a reasonable limit, calculate n² - 3n + 2, and check its primality. We print each n and the value if prime, then print the total count.

```python
# Enumerate n > 0 to find primes of n^2 - 3n + 2
# Stop at n=50 for efficiency and output length constraints

def is_prime(x):
    if x < 2: return False
    if x in (2,3): return True
    if x % 2 == 0: return False
    r = int(x**0.5)
    for i in range(3, r+1, 2):
        if x % i == 0:
            return False
    return True

count = 0
for n in range(1, 51):
    val = n*n - 3*n + 2
    if val > 0 and is_prime(val):
        print(f"n={n}, prime={val}")
        count += 1
print(f"Total count: {count}")
```
