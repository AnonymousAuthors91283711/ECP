[write_program]
This problem counts 8-element subsets of pairs from an 8x8 grid with these conditions:
- Exactly one pair in each row (p.1) and column (p.2) â†’ like permutations.
- Exactly half of the pairs have even sum indices; half odd.

We can enumerate permutations of [0..7], check the parity count, and count those with 4 even and 4 odd sums.

```python
from itertools import permutations

n = 8
target_even = 4
count = 0

# Enumerate permutations p: row i -> column p[i]
for p in permutations(range(n)):
    even_count = sum(((i + p[i]) % 2 == 0) for i in range(n))
    if even_count == target_even:
        count += 1
        # Print exactly one such permutation as a set of pairs (row, col)
        print({(i, p[i]) for i in range(n)})

print("Count of such sets:", count)
```
This enumerates all candidates and prints each satisfying set immediately. Finally, prints the total count.
