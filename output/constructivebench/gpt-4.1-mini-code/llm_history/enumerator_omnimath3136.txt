[write_program]
The problem asks to count the number of natural numbers \( p \) satisfying: 
\[0 < p \quad \text{and} \quad -1 < \sqrt{p} - \sqrt{100} < 1.\]

Since \(\sqrt{100} = 10\), the inequality becomes:
\[
-1 < \sqrt{p} - 10 < 1 \implies 9 < \sqrt{p} < 11.
\]

Squaring all sides (and considering only positive values since \(p > 0\)):
\[
81 < p < 121.
\]

Since \(p\) is a natural number, we need to count integers strictly between 81 and 121, i.e., \(p \in \{82, 83, \dots, 120\}\).

This count is \(120 - 82 + 1 = 39\).

The program below enumerates these \(p\) values and prints them as it finds them, then prints the total count.

```python
# Enumerate natural numbers p where 0 < p and -1 < sqrt(p)-10 <1.
# Equivalently 9 < sqrt(p) <11 => 81 < p < 121.
import math

def main():
    lower_bound = 81
    upper_bound = 121
    count = 0
    print("Parameters: sqrt(100) = 10, interval for sqrt(p) is (9,11)")
    print("Enumerating p in (81,121):")
    for p in range(lower_bound + 1, upper_bound):
        sqrt_p = math.sqrt(p)
        diff = sqrt_p - 10
        if -1 < diff < 1:
            print(f"p={p}, sqrt(p)={sqrt_p:.6f}, diff={diff:.6f}")
            count +=1
    print(f"Total count = {count}")

if __name__ == "__main__":
    main()
```
