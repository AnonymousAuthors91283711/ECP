[write_program]
The problem is to analyze the function \( f(t) = \frac{(2^t - 3t) t}{4^t} \) over real \( t \) and find its maximum value. We enumerate values of \( t \) in a small range (including negative and positive) to approximate candidates for the maximum, printing each value, then highlight the largest found.

```python
import math

def f(t):
    # Compute f(t) = ((2^t - 3t) * t) / 4^t = t*(2^t - 3t)/(4^t)
    # Use math.exp and log to handle fractional powers safely for small t.
    # 2^t = exp(t*ln2), 4^t = exp(t*ln4)
    ln2 = math.log(2)
    ln4 = math.log(4)
    numerator = math.exp(t * ln2) - 3 * t
    denominator = math.exp(t * ln4)
    return (numerator * t) / denominator

# Enumerate t in range -5 to 5 in small steps to locate candidate maxima
step = 0.01
t = -5.0
max_val = None
max_t = None
while t <= 5:
    val = f(t)
    print(f"t={t:.2f}, f(t)={val:.6f}")
    if max_val is None or val > max_val:
        max_val = val
        max_t = t
    t += step

print(f"\nMaximum value found: f({max_t:.6f}) = {max_val:.6f}")
```
