[write_program]
The problem is to find the smallest positive integer \( m \) such that:
- \( m \) is divisible by 17,
- the sum of the digits of \( m \) is 17.

We write a Python program to enumerate multiples of 17 and check their digit sum, printing every \( m \) that satisfies the conditions, until we find the smallest one. We then print the least such \( m \).

```python
# Enumerate multiples of 17 with digit sum 17, print them, and finally print the minimum found.

def digit_sum(n):
    return sum(int(d) for d in str(n))

def main():
    results = []
    limit = 50000  # Limit the search for efficiency and output length.
    for m in range(17, limit + 1, 17):
        s = digit_sum(m)
        if s == 17:
            print(m)  # print each satisfying number immediately
            results.append(m)

    if results:
        print("Minimum:", min(results))
    else:
        print("No solution found up to", limit)

if __name__ == "__main__":
    main()
```
