[write_program]
The problem is to minimize \(a^2 + b^2 + c^2\) subject to the constraint
\[a b c + a + b + c = a b + b c + c a + 5.\]

We will enumerate triples \((a,b,c)\) using small integer values and check if they satisfy the equation exactly. When they do, we print \(a^2+b^2+c^2\). We also print the triple found. We try symmetric triples first, then small integers in \([-5,5]\). This will give insight into the minimum.

```python
# Enumerate rational triples where the equation abc + a + b + c = ab + bc + ca + 5 holds,
# and print the corresponding sum of squares a²+b²+c².

range_vals = range(-5, 6)
found_values = set()

def check_eq(a,b,c):
    # Check if the equation holds exactly
    return a*b*c + a + b + c == a*b + b*c + c*a + 5

print("Searching triples (a,b,c) in -5..5 satisfying abc + a + b + c = ab + bc + ca + 5")

for a in range_vals:
    for b in range_vals:
        for c in range_vals:
            if check_eq(a,b,c):
                s = a*a + b*b + c*c
                # Print new sums only (avoid duplicates)
                if (a,b,c) not in found_values:
                    found_values.add((a,b,c))
                    print(f"Found triple (a,b,c)=({a},{b},{c}), sum of squares={s}")

# Find minimal sum of squares among found solutions
if found_values:
    min_s = min(a*a + b*b + c*c for (a,b,c) in found_values)
    print(f"\nMinimum sum of squares found: {min_s}")
else:
    print("No integer triples satisfying the equation found in range.")
```

