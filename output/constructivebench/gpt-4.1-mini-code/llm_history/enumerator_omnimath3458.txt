[write_program]
The problem involves a function \( p: \{0,1,2,3\} \to \mathbb{R} \) with the conditions:

- \( p \) is injective on \(\{0,1,2,3\}\),
- For \( i \in \{0,1,2\} \), \( p_i > 0 \) and \( p_{i+1} = 2p_i \).

We want to explore possible values of \(\frac{p(3)}{p(3)+p(2)+p(1)+p(0)}\).

Given the conditions, \(p_1 = 2p_0\), \(p_2 = 2p_1 = 4p_0\), \(p_3 = 2p_2 = 8p_0\). All are positive and distinct, fulfilling the injectivity.

The ratio simplifies algebraically, but the program will enumerate with sample \(p_0\) values (rational numbers) to check the ratio as a rational.

```python
from fractions import Fraction

# Enumerate for some positive rational p0 and calculate the ratio.
# p1=2*p0, p2=4*p0, p3=8*p0
# ratio = p3 / (p0+p1+p2+p3) = 8p0 / (p0 + 2p0 + 4p0 + 8p0) = 8 / 15

print("Enumerating for different p0 (positive rationals):")
for numerator in range(1, 5):
    for denominator in range(1, 5):
        p0 = Fraction(numerator, denominator)
        p1 = 2 * p0
        p2 = 2 * p1
        p3 = 2 * p2
        numerator_ratio = p3
        denominator_ratio = p0 + p1 + p2 + p3
        ratio = numerator_ratio / denominator_ratio
        print(f"p0 = {p0}: ratio = {ratio} = {float(ratio):.6f}")

print("\nAll ratios match 8/15 exactly.\nExtremal ratio (only choice) = 8/15")
```
