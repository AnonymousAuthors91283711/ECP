[write_program]
The problem involves finding numbers \( n \) below 200 such that \(\phi(n) + 4 \cdot d(n) = n\), where \(\phi\) is Euler's totient function and \(d(n)\) is the number of divisors of \( n \). The task is to find all such \( n \), print them, and sum these values.

We'll:
- Implement totient and divisor count functions efficiently.
- Loop \( n \) from 1 to 199.
- Check condition and print \( n \) immediately if it satisfies.
- Finally, print their sum.

```python
# Enumerate n < 200 with Ï†(n) + 4*d(n) = n
from math import gcd, sqrt

def totient(n):
    result = n
    p = 2
    while p * p <= n:
        if n % p == 0:
            while n % p == 0:
                n //= p
            result -= result // p
        p += 1 if p == 2 else 2
    if n > 1:
        result -= result // n
    return result

def divisor_count(n):
    cnt = 0
    root = int(sqrt(n))
    for i in range(1, root + 1):
        if n % i == 0:
            cnt += 2 if i * i != n else 1
    return cnt

total = 0
for n in range(1, 200):
    phi = totient(n)
    d = divisor_count(n)
    if phi + 4 * d == n:
        print(n)
        total += n
print("Sum:", total)
```
