[write_program]
The problem provides two equations with real variables p and q:

1. q = (2/5) * p
2. p * q = 90

We want to find p satisfying these conditions.

We can write q in terms of p and substitute:

p * q = p * (2/5) * p = (2/5) p² = 90

Solve for p²:

p² = 90 * (5/2) = 225

Then p = ±15.

Our Python program will enumerate these p values from these constraints.

```python
# Enumerate possible p values from p * q = 90 and q = (2/5)*p
# Solve (2/5)*p^2 = 90 => p^2 = 225 => p = ±15

def enumerate_pq():
    from fractions import Fraction

    # Coefficients
    coeff = Fraction(2,5)

    # Compute p^2
    p_squared = 90 / float(coeff)

    # Check if p_squared is a perfect square with integer roots
    import math

    # Efficiently check if p_squared is integer
    if abs(p_squared - round(p_squared)) < 1e-12:
        p_sq_int = round(p_squared)
        root = int(math.isqrt(p_sq_int))
        if root * root == p_sq_int:
            print(f"p = {root}")
            print(f"p = {-root}")
        else:
            # p^2 is not perfect square, print approximate roots
            root_approx = p_squared**0.5
            print(f"p ≈ {root_approx}")
            print(f"p ≈ {-root_approx}")
    else:
        # p_squared is not integer, print approximate roots
        root_approx = p_squared**0.5
        print(f"p ≈ {root_approx}")
        print(f"p ≈ {-root_approx}")

enumerate_pq()
```
