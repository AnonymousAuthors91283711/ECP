[write_program]
The problem is about characterizing those natural numbers \( N \) for which every remainder modulo \( N \) is representable as a sum of squares \( \sum_{i=0}^{n-1} i^2 \) modulo \( N \) for some \( n \). The task is to enumerate such \( N \) for small values and check the condition.

We will:
- Iterate over small \( N \).
- Precompute partial sums of squares modulo \( N \).
- Check if all residues mod \( N \) appear.
- Print each \( N \) along with the residues set.

This enumeration helps conjecture the true answer.

```python
# Enumerate N up to a small limit, checking if all residues mod N appear in sums of squares partial sums mod N

def sums_squares_mod(n, N):
    # Compute sums of squares partial sums mod N, up to n
    total = 0
    residues = set()
    for i in range(n):
        total = (total + i*i) % N
        residues.add(total)
    return residues

def check_all_residues(N):
    # Check if for each k in 0..N-1 there is n with partial sum == k mod N
    max_n = N*2  # heuristic upper bound
    residues = set()
    total = 0
    for i in range(max_n):
        total = (total + i*i) % N
        residues.add(total)
        if len(residues) == N:
            return True
    return False

def main():
    print("N where all residues mod N are sums-of-squares partial sums:")
    for N in range(1, 51):
        if check_all_residues(N):
            print(f"N = {N} : all residues representable")

if __name__ == "__main__":
    main()
```
