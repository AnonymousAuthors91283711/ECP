[write_program]
The problem describes a finite set \( S \subset \mathbb{R} \) with cardinality \( n \), and it gives two average-based equations involving new elements inserted into the set. We want to find the average of \( S \).

From the problem:
\[
\frac{\sum_{x \in S \cup \{1\}} x}{n+1} = \frac{\sum_{x \in S} x}{n} - 13
\]

\[
\frac{\sum_{x \in S \cup \{2001\}} x}{n+1} = \frac{\sum_{x \in S} x}{n} + 27
\]

Denote \( A = \frac{\sum_{x \in S} x}{n} \).

We will enumerate small integer values of \( n \) and check the consistency of these equations by solving for \( A \).

```python
# Enumerate possible n and compute A = average of S
# Using the two equations:
# (Sum_S + 1)/(n+1) = A - 13 => (n*A + 1)/(n+1) = A - 13
# (Sum_S + 2001)/(n+1) = A + 27 => (n*A + 2001)/(n+1) = A + 27
# These give two equations, solve for A for each n.

def find_average_candidates(max_n=20):
    print("n, Average A")
    for n in range(1, max_n + 1):
        # From first equation:
        # (n*A + 1)/(n+1) = A - 13
        # n*A + 1 = (n+1)*A - 13*(n+1)
        # n*A + 1 = n*A + A - 13n -13
        # 1 = A - 13n - 13
        # A = 13n + 14
        A1 = 13*n + 14

        # From second equation:
        # (n*A + 2001)/(n+1) = A + 27
        # n*A + 2001 = (n+1)*A + 27*(n+1)
        # n*A + 2001 = n*A + A + 27n + 27
        # 2001 = A + 27n + 27
        # A = 2001 - 27n - 27 = 1974 - 27n
        A2 = 1974 - 27*n

        # Check if two values equal (or close)
        if abs(A1 - A2) < 1e-10:
            print(f"{n}, {A1}")

find_average_candidates()
```
This program prints values of \( n \) and \( A \) where the two equations agree, conjecturing the average of the set.
