[write_program]
This problem involves enumerating pairs \((m, n)\) for \(1 \leq m, n \leq 30\) such that \(\gcd(2^m + 1, 2^n - 1) > 1\). We must find all such pairs and print them immediately, then count them and output the count.

```python
# Enumerate pairs (m,n) with 1 ≤ m,n ≤ 30 where gcd(2^m+1, 2^n-1) > 1
# Print each pair immediately and output the total count at the end.

from math import gcd

def main():
    limit = 30
    count = 0
    for m in range(1, limit+1):
        val_m = 2**m + 1
        for n in range(1, limit+1):
            val_n = 2**n - 1
            g = gcd(val_m, val_n)
            if g > 1:
                print(f"Pair (m={m}, n={n}), gcd={g}")
                count += 1
    print(f"Total pairs with gcd > 1: {count}")

if __name__ == "__main__":
    main()
```
