[write_program]
The problem asks for the greatest prime divisor of factorial(15) - factorial(13). Let's enumerate prime divisors of this number to find all primes dividing factorial(15) - factorial(13), then print them as we find, finally output the greatest.

```python
import math

def factorial(n):
    return math.factorial(n)

def primes_up_to(n):
    sieve = [True]*(n+1)
    sieve[0], sieve[1] = False, False
    for i in range(2, int(n**0.5)+1):
        if sieve[i]:
            for j in range(i*i, n+1, i):
                sieve[j] = False
    return [p for p in range(2, n+1) if sieve[p]]

def main():
    f15 = factorial(15)
    f13 = factorial(13)
    diff = f15 - f13
    limit = 10000  # somewhat larger than sqrt(diff) for prime check
    primes = primes_up_to(limit)
    prime_factors = []

    for p in primes:
        if diff % p == 0:
            print(p)  # print each prime divisor immediately
            prime_factors.append(p)

    if prime_factors:
        greatest = max(prime_factors)
        print(f"Greatest prime divisor: {greatest}")

if __name__ == "__main__":
    main()
```
