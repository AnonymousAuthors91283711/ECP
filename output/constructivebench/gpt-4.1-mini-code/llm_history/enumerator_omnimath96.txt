[write_program]
The problem seeks to determine all integer-valued functions \( f: \mathbb{Z} \to \mathbb{Z} \) satisfying a functional equation for all integers \(a,b,c\):

\[
2 f(a^2 + b^2 + c^2) - 2 f(ab + bc + ca) = f(a-b)^2 + f(b-c)^2 + f(c - a)^2.
\]

We want to enumerate possible \( f \)'s by testing small values and observing patterns. The simplest candidates are linear or quadratic polynomials, especially since the equation involves quadratic forms in \(a,b,c\).

The Python program will:

- Represent \( f \) as \( f(n) = A n^2 + B n + C \) with integer coefficients \(A, B, C\).
- Test all triples \( (a,b,c) \) in a small range \( \{-1,0,1\} \).
- Verify which triples \( (A,B,C) \) satisfy the equation exactly.
- Print all such quadratic candidates with small parameters \(A,B,C\).
- Also try linear or constant functions similarly.

This enumeration will guide the conjecture about possible solutions.

```python
# Enumerate integer quadratic functions f(n)=A n^2 + B n + C satisfying
# 2 f(a^2+b^2+c^2) - 2 f(ab+bc+ca) = f(a-b)^2 + f(b-c)^2 + f(c-a)^2
# for all a,b,c in range -1..1.

def f(A,B,C,n): return A*n*n + B*n + C

range_abc = range(-1,2)
solutions = []

# Check candidate (A,B,C) in range -2..2 to keep outputs small
for A in range(-2,3):
    for B in range(-2,3):
        for C in range(-2,3):
            ok = True
            for a in range_abc:
                for b in range_abc:
                    for c in range_abc:
                        left = 2*f(A,B,C,a*a + b*b + c*c) - 2*f(A,B,C,a*b + b*c + c*a)
                        da, db, dc = a - b, b - c, c - a
                        right = (f(A,B,C,da))**2 + (f(A,B,C,db))**2 + (f(A,B,C,dc))**2
                        if left != right:
                            ok = False
                            break
                    if not ok:
                        break
                if not ok:
                    break
            if ok:
                print(f"Candidate f(n)={A}*n^2 + {B}*n + {C}")
                solutions.append((A,B,C))

print("Enumerated candidates count:", len(solutions))
```
