[write_program]
The problem appears to relate to counting arrangements of some multiset objects, possibly involving symmetry or parity constraints, and expressing a ratio as a reduced fraction m/n. To assist in conjecturing the answer, let's enumerate arrangements and counts for smaller analogous cases — e.g., fewer items — then print fractions as reduced fractions. We'll then check the pattern to conjecture the simplified fraction for the original problem.

Since the original numerator is 5 * (2^5 * 6!) and denominator is 12!/(2^6), testing smaller factorials and powers of two can guide us.

```python
from math import factorial, gcd

def reduced_fraction(num, den):
    g = gcd(num, den)
    return num // g, den // g

# Function to compute total arrangements and even arrangements for smaller n
def test_case(n):
    # Mimic total_arrangements = n! / (2^(n/2)) for even n
    if n % 2 != 0:
        return
    total = factorial(n) // (2 ** (n // 2))
    # Mimic even_arrangements = 5 * (2^(n//2 -1) * (n//2)!)
    even = 5 * ((2 ** (n // 2 -1)) * factorial(n // 2))
    m, d = reduced_fraction(even, total)
    print(f"n={n}: even={even}, total={total}, fraction={m}/{d}")

# Enumerate sample values for n=4,6,8,10,12
for n in [4,6,8,10,12]:
    test_case(n)
```

