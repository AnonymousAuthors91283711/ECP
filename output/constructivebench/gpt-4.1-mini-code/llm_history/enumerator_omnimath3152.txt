[write_program]
The problem appears to revolve around solving for a natural number \( n \) satisfying \( 12 = \frac{1}{2} n \). We want to enumerate possible natural numbers \( n \) such that this equality holds exactly.

Since \( n = 2 \times 12 = 24 \), the answer should be 24. We'll write a Python program enumerating natural numbers \( n \) up to a threshold (say 30), check the condition exactly, and print all candidates before printing the final confirmed answer.

```python
# Enumerate natural numbers n and check if (1/2)*n == 12 exactly
# Print all candidates where equality holds exactly, then print the extremal answer

def main():
    threshold = 30
    candidates = []
    for n in range(threshold + 1):
        if (1/2)*n == 12:
            print(f"n = {n} satisfies (1/2)*n = 12 exactly.")
            candidates.append(n)
    if candidates:
        min_candidate = min(candidates)
        max_candidate = max(candidates)
        print(f"Minimum candidate: {min_candidate}")
        print(f"Maximum candidate: {max_candidate}")

if __name__ == "__main__":
    main()
```
