[write_program]
This problem involves searching for triplets \((a,b,c)\) with distinct integers between 1 and 11 and comparing the difference in the infima of two quadratic functions \(f\) and \(g\). We want to find values \(d = \inf f - \inf g\) and determine their maximum (greatest).

The program below enumerates all triples \((a,b,c)\) with \(1 \leq a,b,c \leq 11\) distinct, computes the exact minimum values of \(f\) and \(g\), calculates \(d\), and prints each \(d\). It keeps track of the maximum \(d\) found and prints it at the end. We use exact formulas for the minima by finding the vertex of each parabola.

```python
from math import inf

# Enumerate distinct triples (a,b,c), 1<=a,b,c<=11
max_d = None
print("Enumerating values of d = inf f - inf g for triples (a,b,c) in [1..11] distinct:")

for a in range(1,12):
    for b in range(1,12):
        for c in range(1,12):
            if len({a,b,c}) < 3:
                continue

            # f(x) = a*(x-b)*(x-c) = a*(x^2 - (b+c)x + bc)
            # Vertex at x = (b+c)/2, minimum or maximum depends on leading coefficient a>0 (always min since a>0)
            fx_vertex = (b + c) / 2
            fmin = a * (fx_vertex - b) * (fx_vertex - c)

            # g(x) = a*(x-b)*(x+c) = a*(x^2 + (c - b)x - bc)
            # Vertex at x = (b - c)/2
            gx_vertex = (b - c) / 2
            gmin = a * (gx_vertex - b) * (gx_vertex + c)

            d = fmin - gmin

            print(f"a={a}, b={b}, c={c}, d={d}")
            if (max_d is None) or (d > max_d):
                max_d = d

print(f"Maximum d found: {max_d}")
```
