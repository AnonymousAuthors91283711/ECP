[write_program]
The problem involves summing over integers a, b, c in certain ranges involving factorial expressions resembling multinomial coefficients: a! / (b! c! (a-b-c)!). We want to compute

\[
\sum_{a=6}^{12} \sum_{b=0}^{12 - a} \sum_{c=0}^{12 - a - b} \frac{a!}{b! c! (a - b - c)!}
\]

This is the sum over all triples (a,b,c) with \(a \in [6,12]\) and nonnegative b,c with \(b+c \le 12 - a\).

The multinomial coefficient \(\frac{a!}{b! c! (a - b - c)!}\) counts the number of ways to partition a elements into 3 groups of sizes b, c, and \(a - b - c\).

We can enumerate the sums directly using Python's math.factorial and itertools.

To keep outputs concise, we'll print the partial sums for each fixed a, then print the grand total as the answer estimate.

```python
# enumerator.py

import math

def multinomial(a,b,c):
    return math.factorial(a)//(math.factorial(b)*math.factorial(c)*math.factorial(a - b - c))

def main():
    total = 0
    for a in range(6,13):
        a_sum = 0
        max_bc = 12 - a
        for b in range(max_bc + 1):
            for c in range(max_bc - b + 1):
                val = multinomial(a,b,c)
                a_sum += val
                print(f"a={a}, b={b}, c={c}, val={val}")
        total += a_sum
        print(f"Sum for a={a}: {a_sum}")
    print(f"Total sum: {total}")

if __name__=="__main__":
    main()
```
