[write_program]
The problem involves two types of basketball shot attempts: three-point attempts and two-point attempts, totaling 30 attempts. Made shots must satisfy specific fractional relations, and the total points from made shots is a constant value we want to characterize.

We want to:
- Enumerate all possible pairs `(three_pt_attempts, two_pt_attempts)` summing to 30.
- For each pair, if `(three_pt_attempts / 5)` and `(3 * two_pt_attempts / 10)` are integers, compute total points.
- Print all total points encountered to assist conjecture.
- Then identify the unique or extremal total point value(s).

```python
# Enumerate all (3pt_attempts, 2pt_attempts) with sum=30
# Check if 3pt_made = three_pt_attempts/5 is integer
# Check if 2pt_made = 3*two_pt_attempts/10 is integer
# Calculate total points = 3*3pt_made + 2*2pt_made

def main():
    total_attempts = 30
    results = []
    print("three_pt_attempts two_pt_attempts three_pt_made two_pt_made total_points")
    for three_pt_attempts in range(total_attempts + 1):
        two_pt_attempts = total_attempts - three_pt_attempts
        
        # Check divisibility for exact made shots
        if three_pt_attempts % 5 != 0:
            continue
        if (3 * two_pt_attempts) % 10 != 0:
            continue
        
        three_pt_made = three_pt_attempts // 5
        two_pt_made = (3 * two_pt_attempts) // 10
        
        total_points = 3 * three_pt_made + 2 * two_pt_made
        
        print(three_pt_attempts, two_pt_attempts, three_pt_made, two_pt_made, total_points)
        results.append(total_points)
    
    # After enumeration, print the distinct total points in sorted order
    unique_points = sorted(set(results))
    print("\nDistinct total points observed:")
    for pts in unique_points:
        print(pts)
    # If extremal values required:
    print(f"\nMinimum total points: {min(unique_points)}")
    print(f"Maximum total points: {max(unique_points)}")

if __name__ == "__main__":
    main()
```
