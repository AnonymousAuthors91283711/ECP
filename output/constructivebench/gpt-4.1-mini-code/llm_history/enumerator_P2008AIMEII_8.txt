[write_program]
This problem is about finding the smallest positive integer \( n \) such that \( \sin\left(n(n+1)\frac{\pi}{2008}\right) \) is an integer (i.e., equals 0, 1, or -1). Since sine values are integers only at \(\sin(0) = 0\), \(\sin(\pi/2) = 1\), \(\sin(\pi) = 0\), \(\sin(3\pi/2) = -1\), etc., the argument must be an integer multiple of \(\pi/2\), but since the expression is multiplied by \(\pi/2008\), \(n(n+1)\frac{\pi}{2008}\) must be equal to \(k\pi\) for some integer \(k\) (to get sine equal zero) or some half-integer multiples for sine to be plus or minus 1.

Thus, the problem reduces to finding \(n\) such that \(n(n+1) \frac{\pi}{2008} = m \pi\), or equivalently, \(n(n+1) = 2008 m\) for some integer \(m\). We want \(sin(\theta)\) = 0, so \(\theta\) is integral multiple of \(\pi\), i.e., \(n(n+1)\) divisible by 2008.

Check for \(n > 0\), \(n(n+1)\) multiple of 2008.

Since 2008 = 8 * 251, and 251 is prime.

We want to find minimal positive \(n\) such that 2008 divides \(n(n+1)\).

We can enumerate values of \(n\) to find the minimal such \(n\).

We can also check the other possibilities for sine being \(\pm 1\), i.e., \(n(n+1) \frac{\pi}{2008} = \frac{\pi}{2} + k\pi\).

Let's write code to enumerate \( n \) from 1 to a reasonable upper bound and print those \( n \) such that sine is 0 or Â±1.

```python
import math

# Since sin(x) integer only when sin(x) = 0, 1 or -1,
# sin(theta) = 0 when theta = k * pi
# sin(theta) = 1 when theta = pi/2 + 2k*pi
# sin(theta) = -1 when theta = 3pi/2 + 2k*pi

# Given theta = n(n+1) * (pi/2008)

# So check for integer k:
# For sin = 0: n(n+1)/2008 = k (k in Z)
# For sin = 1: n(n+1)/2008 = 1/2 + k (k in Z)
# For sin = -1: n(n+1)/2008 = 3/2 + k (k in Z)

max_n = 5000  # enough range for search

def is_int(x):
    return abs(x - round(x)) < 1e-12

print("Enumerating n such that sin(n(n+1)*pi/2008) is integer (0, 1, or -1):")
for n in range(1, max_n+1):
    val = n*(n+1)/2008
    # Check sin=0
    if is_int(val):
        print(f"n={n}, sin=0 (exact)")
    # Check sin=1
    v1 = val - 0.5
    if is_int(v1):
        print(f"n={n}, sin=1 (exact)")
    # Check sin=-1
    v2 = val - 1.5
    if is_int(v2):
        print(f"n={n}, sin=-1 (exact)")

# Finally, minimum n found for each case can be extracted by reading printed values.
```

This code enumerates values to find the minimal \( n \) such that sine is integer for the problem condition.
