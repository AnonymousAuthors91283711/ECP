[write_program]
The problem is to find odd integers \(a < b\) with \(b = 3a\), and the sum \(a+b\) is constant for all such pairs under these constraints. We enumerate odd \(a\), compute \(b = 3a\), and find \(a+b\) to identify possible sums.

```python
# Enumerate odd integers a and compute b=3a if b is odd and a<b
# Print all sums a+b for small odd a satisfying conditions

def is_odd(n):
    return n % 2 != 0

found_sums = set()

print("Enumerating odd integers a (positive and negative) with b=3a,...")
for a in range(-15, 16, 2):  # odd integers from -15 to 15
    if a == 0:
        continue
    b = 3 * a
    if is_odd(b) and a < b:
        s = a + b
        if s not in found_sums:
            found_sums.add(s)
            print(f"a={a}, b={b}, sum={s}")

if len(found_sums) == 1:
    print(f"All such sums are equal to {found_sums.pop()}")
else:
    print(f"Different sums found: {sorted(found_sums)}")
```
