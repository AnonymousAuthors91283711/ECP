[write_program]
The problem is to find all positive integers \( n \) such that there exists an integer \( m \) with 
\[ m^2 = \frac{n^3 - 1989}{n} = n^2 - \frac{1989}{n}. \]
This implies \( n \mid 1989 \) and \( m^2 = n^2 - \frac{1989}{n} \) is a perfect square.

We must enumerate positive divisors of 1989, check if \( n^2 - \frac{1989}{n} \) is a perfect square, and print each such \( n \) immediately.

```python
# Enumerate n > 0 dividing 1989 and check if n^2 - 1989/n is a perfect square

def divisors(x):
    divs = []
    for i in range(1, int(x**0.5)+1):
        if x % i == 0:
            divs.append(i)
            if i*i != x:
                divs.append(x//i)
    return sorted(divs)

def is_square(k):
    if k < 0:
        return False
    r = int(k**0.5)
    return r*r == k

N = 1989
print(f"Divisors of {N}:")
for n in divisors(N):
    val = n*n - N//n
    if is_square(val):
        print(f"n={n}, m^2={val} (m={int(val**0.5)})")
```
This will print all candidates \( n \) with corresponding \( m \) values.
