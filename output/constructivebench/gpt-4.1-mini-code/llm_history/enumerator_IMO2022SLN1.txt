[write_program]
The problem is to find the smallest natural number \( n \) such that \( n \) has three distinct divisors \( a < b < c \) with \( a + b + c = 2022 \).

We want to enumerate triples \((a, b, c)\) with \(a < b < c\), \(a + b + c = 2022\), and find common multiples \(n\) divisible by \(a, b, c\). Then the minimal such \(n\) is the least common multiple \(\mathrm{lcm}(a, b, c)\) among all such triples.

We will:
- Loop over \(a, b\) with \(a < b\), compute \(c = 2022 - a - b\).
- Check \(a < b < c\).
- Compute \(n = \mathrm{lcm}(a, b, c)\).
- Keep track of minimal \(n\) and print candidates as we find them.

To reduce enumeration, \(a, b, c\) all positive, and obviously \(a, b, c \leq 2020\) (upper bound).

We'll print all candidates found with \(n\) up to a threshold, then print the minimal \(n\).

```python
from math import gcd

def lcm(x, y):
    return x * y // gcd(x, y)

def lcm3(a, b, c):
    return lcm(a, lcm(b, c))

min_n = None
candidates = []

# We try a from 1 upwards, b from a+1 upwards, c = 2022 - a - b
# c must be > b, so c > b => 2022 - a - b > b => 2022 - a > 2b => b < (2022 - a)/2
for a in range(1, 2022):
    b_max = (2022 - a - 1) // 2  # c > b => b < (2022 - a)/2
    for b in range(a+1, b_max + 1):
        c = 2022 - a - b
        if c > b > a > 0:
            n = lcm3(a, b, c)
            print(f"Triple (a,b,c) = ({a},{b},{c}) with lcm = {n}")
            if (min_n is None) or (n < min_n):
                min_n = n
                print(f"New minimal lcm found: {min_n}")

print(f"Minimal n with divisors a<b<c and a+b+c=2022 is {min_n}")
```

