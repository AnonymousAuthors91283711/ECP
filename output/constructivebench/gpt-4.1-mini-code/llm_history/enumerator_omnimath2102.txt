[write_program]
The problem is to find the number of positive integers \( a \) such that the quadratic equation
\[
x^2 - a x + a = 0
\]
has an integer solution \( x \).

Rearranged as:
\[
x^2 - a x + a = 0,
\]
let's denote integers \(a > 0\) and look for integer \(x\) satisfying it.

By Vieta's formulas, the roots satisfy:
\[
x_1 + x_2 = a, \quad x_1 x_2 = a.
\]
If there is an integer root \( x \), say \( x = k \), then the other root is \( a - k \). The product is \( k (a-k) = a \), so
\[
k(a-k) = a \implies k a - k^2 = a \implies k a - a = k^2 \implies a(k - 1) = k^2.
\]
So
\[
a = \frac{k^2}{k -1}.
\]
For integer \( a > 0 \), \( k-1 \) divides \( k^2 \) and the fraction is positive integer.

We can enumerate integer values \( k \neq 1 \) and compute \( a \). If \( a \) is a positive integer, then \( a \) is a candidate solution.

We must count the number of distinct such \( a \) values.

---

We will enumerate values of \( k \) with \( k \neq 1 \), taking some range (say from -100 to 100, excluding 1), compute \( a \), and collect all positive integer \( a \).

Then print each distinct \( a \) found. Finally print the total count.

```python
# Enumerate positive integers a such that x^2 - a x + a = 0 has an integer root

def main():
    found = set()
    # We scan k from -100 to 100, excluding k=1
    for k in range(-100, 101):
        if k == 1:
            continue
        denom = k - 1
        if denom == 0:
            continue
        # Check if denom divides k^2
        if (k*k) % denom == 0:
            a = (k*k) // denom
            if a > 0:
                if a not in found:
                    print(a)
                    found.add(a)
    print("Total count:", len(found))

if __name__ == "__main__":
    main()
```
