[write_program]
The problem is to find the sum of the series: \(\sum_{n=0}^{\infty} \frac{1}{n^2 + 2n}\).

We rewrite the term as \(\frac{1}{n(n+2)}\) for \(n \geq 1\) (starting with \(n=1\) since \(n=0\) term is undefined). Using partial fraction decomposition, \(\frac{1}{n(n+2)} = \frac{A}{n} + \frac{B}{n+2}\). Solving for \(A\) and \(B\), then summing terms, and testing numeric partial sums will help conjecture the sum.

The program enumerates partial sums for the first few terms and prints the sums exactly using SymPy's rational simplification where possible.

```python
from sympy import Rational, simplify

# Enumerate partial sums of the series 1/(n^2 + 2n) = 1/(n(n+2)), for n=1 to N
# n=0 term is undefined (division by zero).
print("n terms partial sums of sum_{n=1}^N 1/(n(n+2)):")

partial_sum = Rational(0)
for N in range(1, 21):  # first 20 terms 
    term = Rational(1, N*(N+2))
    partial_sum += term
    print(f"N={N}, partial sum = {simplify(partial_sum)} â‰ˆ {float(partial_sum):.6f}")
```
