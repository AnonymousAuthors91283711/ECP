[write_program]
This problem asks for the smallest positive integer \( k \) such that \( \binom{2k}{k} \) is divisible by 49. We will enumerate values of \( k \) starting from 1, compute the central binomial coefficient \( \binom{2k}{k} \), and check divisibility by 49. We'll print each dividend \( k \) found and stop after some reasonable range.

```python
from math import comb

def main():
    print("Searching for k with 49 | C(2k,k)...")
    threshold = 200  # upper bound for search to keep output short
    candidates = []
    for k in range(1, threshold + 1):
        val = comb(2*k, k)
        if val % 49 == 0:
            print(f"k={k}, C(2k,k) divisible by 49: {val}")
            candidates.append(k)
    if candidates:
        answer = min(candidates)
        print(f"\nSmallest k with 49 | C(2k,k) is {answer}")
    else:
        print("No such k found up to threshold.")

if __name__ == "__main__":
    main()
```
