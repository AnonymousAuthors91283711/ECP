[write_program]
The problem is to find the number of integers \(n\) between 1 and 2017 inclusive such that the product \((n-2)(n)(n-1)(n-7)\) is divisible by 1001. Since 1001 factors as \(7 \times 11 \times 13\), the product must be divisible by each prime. We enumerate \(n\) in the range and check divisibility directly. The program prints each valid \(n\) and finally prints the count.

```python
# Enumerate integers n in [1..2017] for which (n-2)*n*(n-1)*(n-7) divisible by 1001=7*11*13

def is_divisible_by_1001(n):
    val = (n-2)*(n)*(n-1)*(n-7)
    return val % 1001 == 0

count = 0
for n in range(1, 2018):
    if is_divisible_by_1001(n):
        print(n)
        count += 1
print("Total count:", count)
```
