[write_program]
This problem involves solving a linear system to find parameters a and b in T(L, G) = a*L + b*G using given points, then computing T at a specified (L3, G3). We'll enumerate candidate (a, b) from the linear constraints and then compute T(L3, G3). Since the values are exact reals, we will print exact floating or rational approximations.

```python
# Solve system a*L1 + b*G1 = 69 and a*L2 + b*G2 = 69 for given L, G.
# Then compute a*L3 + b*G3.

def try_solve(L1, G1, L2, G2, T_val):
    det = L1*G2 - L2*G1
    if det == 0:
        print(f"No unique solution for a,b with inputs: L1={L1},G1={G1},L2={L2},G2={G2}")
        return
    a = T_val * (G2 - G1) / det
    b = T_val * (L1 - L2) / det
    print(f"Computed parameters: a={a}, b={b}")
    return a,b

def compute_T(a, b, L, G):
    return a*L + b*G

def main():
    # Given values
    L1, G1, T1 = 1.5, 800, 69
    L2, G2, T2 = 1.2, 1100, 69
    L3, G3 = 4.2, 4000

    a,b = try_solve(L1,G1,L2,G2,69)
    if a is not None:
        T3 = compute_T(a,b,L3,G3)
        print(f"T({L3}, {G3}) = {T3}")

if __name__ == "__main__":
    main()
```
