[write_program]
The problem involves four positive integers A, R, M, L satisfying:
- \( A^2 + R^2 = 20 \)
- \( M^2 + L^2 = 10 \)

We want to find the value(s) of \( A \times R \times M \times L \).

Since these are positive integers, I'll enumerate all pairs \((A,R)\) with squares summing to 20, and similarly for \((M,L)\) with squares summing to 10, then compute the products.

```python
# Enumerate positive integer solutions for A,R with A^2 + R^2 = 20
# and M,L with M^2 + L^2 = 10, then compute A*R*M*L.

max_sq20 = 20
max_sq10 = 10

def squares_upto(n):
    # Returns list of squares up to n for positive integers
    return [x*x for x in range(1, int(n**0.5)+1)]

sq20 = squares_upto(max_sq20)
sq10 = squares_upto(max_sq10)

# Find pairs for sum 20:
pairs_20 = []
for a in range(1, int(max_sq20**0.5)+1):
    for r in range(a, int(max_sq20**0.5)+1):  # a â‰¤ r to avoid duplicates
        if a*a + r*r == max_sq20:
            pairs_20.append( (a, r) )

print("A,R pairs with A^2+R^2=20:")
for (a,r) in pairs_20:
    print(f"A={a}, R={r}")

# Find pairs for sum 10:
pairs_10 = []
for m in range(1, int(max_sq10**0.5)+1):
    for l in range(m, int(max_sq10**0.5)+1):
        if m*m + l*l == max_sq10:
            pairs_10.append( (m,l) )

print("M,L pairs with M^2+L^2=10:")
for (m,l) in pairs_10:
    print(f"M={m}, L={l}")

# Compute and print products:
print("Possible values of A*R*M*L:")
for (a,r) in pairs_20:
    for (m,l) in pairs_10:
        product = a * r * m * l
        print(product)
```
This will enumerate all quadruples and print the products.
