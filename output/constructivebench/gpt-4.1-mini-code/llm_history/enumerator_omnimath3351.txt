[write_program]
The problem is to find a unique natural number \( n < 10 \) such that 91 divides the number:

\[
12345 \times 10^4 + n \times 10^3 + 789
\]

We enumerate \( n = 0, 1, \ldots, 9 \) and check divisibility by 91. We print each \( n \) that makes the number divisible, then output the unique such number.

```python
# Enumerate n < 10 such that 91 divides:
# 12345*10^4 + n*10^3 + 789

def main():
    base = 12345 * 10**4 + 789
    divisor = 91
    candidates = []
    for n in range(10):
        val = base + n * 10**3
        if val % divisor == 0:
            print(f"n={n} => divisible by 91")
            candidates.append(n)
    if len(candidates) == 1:
        print(f"Unique solution n = {candidates[0]}")
    else:
        print(f"Solutions found: {candidates}")

if __name__ == "__main__":
    main()
```
