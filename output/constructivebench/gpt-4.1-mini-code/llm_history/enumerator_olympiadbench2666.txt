[write_program]
The problem asks for the greatest 4-digit number \( n = ABCD \), with \( A \geq 1 \), such that \( n = \text{factorial}(B) + \text{factorial}(C) + \text{factorial}(D) \).

We can:
- Iterate \( n \) from 1000 to 9999.
- Extract digits \( A, B, C, D \).
- Test if \( n = factorial(B) + factorial(C) + factorial(D) \).

We print all such \( n \) and then the maximum.

```python
from math import factorial

# We iterate over the 4-digit numbers
results = []
for n in range(1000, 10000):
    A = n // 1000
    B = (n % 1000) // 100
    C = (n % 100) // 10
    D = n % 10
    if A == 0:
        continue
    if n == factorial(B) + factorial(C) + factorial(D):
        print(n)
        results.append(n)

if results:
    print("Maximum:", max(results))
else:
    print("No solutions found")
```
