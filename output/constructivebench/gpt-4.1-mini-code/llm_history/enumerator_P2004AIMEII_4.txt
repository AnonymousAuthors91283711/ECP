[write_program]
The problem is: count 4-digit numbers (from 1 to 9999) whose digits are from at most two distinct digits (two possibly equal digits). I.e., numbers with digits all in {d1, d2} for some digits d1,d2.

We can enumerate all numbers 1 to 9999, check the digits, and count those with ≤ 2 distinct digits exactly. But the problem states digits equal to d1 or d2 (two digits), so the set of digits used is size 1 or 2.

We print each such number found immediately (streaming). Then count total. This will help conjecture the answer.

```python
# Enumerate numbers 1..9999 with digits from ≤ 2 distinct digits, print each number when found,
# then print the total count.

def digits_set(n):
    return set(str(n))

def main():
    count = 0
    for n in range(1, 10000):
        ds = digits_set(n)
        if len(ds) <= 2:
            print(n)
            count += 1
    print("Total count:", count)

if __name__ == "__main__":
    main()
```
