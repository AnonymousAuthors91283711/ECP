[write_program]
The problem is to evaluate the sum:

\[
\sum_{k=1}^{2009} k \cdot \left(\lfloor \frac{2009}{k} \rfloor - \lfloor \frac{2008}{k} \rfloor\right).
\]

Notice that the term inside the sum is nonzero only when \(\lfloor \frac{2009}{k} \rfloor \neq \lfloor \frac{2008}{k} \rfloor\), which happens when \(k\) divides 2009 but not 2008, or more precisely when \(2009/k\) is an integer but \(2008/k\) is not.

Since \(\lfloor 2009/k \rfloor - \lfloor 2008/k \rfloor\) can only be 0 or 1 (because floor decreases by at most 1 when the numerator decreases by 1), it filters the divisors of 2009.

So the sum essentially is the sum of those \(k\) dividing 2009 but not dividing 2008.

We can enumerate all \(k\) from 1 to 2009, test the difference, and sum accordingly.

I'll write a Python program to enumerate all such \(k\), print each contributing \(k\), and at the end, print the total sum.

```python
# Python program to enumerate terms of the sum:
# sum_{k=1}^{2009} k * (floor(2009/k) - floor(2008/k))

def main():
    upper = 2009
    total = 0
    for k in range(1, upper + 1):
        fk_2009 = 2009 // k
        fk_2008 = 2008 // k
        diff = fk_2009 - fk_2008
        if diff != 0:
            val = k * diff
            print(f"k={k}, term={val}")
            total += val
    print(f"Total sum = {total}")

if __name__ == "__main__":
    main()
```
