[write_program]
The problem involves finding two disjoint subsets of sizes \( k \) and \( m \) from a set of size \( n \), where the expression \(\frac{m(m-1)}{2} + mk\) is fixed. To assist in conjecturing and proving the true answer, we can iterate over possible subsets (or directly use the expression since the problem reduces to combinatorial counts) and print the value for given \( n=30 \), \( k=20 \), \( m=10 \).

We will enumerate all such pairs just by computing the given value (since the question seems to relate it to handshakes in sets, and the expression uses only \(k\) and \(m\)). Weâ€™ll verify the formula and output the computed value.

```python
# Enumerate the value (m*(m-1))//2 + m*k for sample values,
# mainly focusing on the given problem parameters.
def main():
    n = 30
    k = 20
    m = 10
    # Expression from the problem:
    answer = (m * (m - 1)) // 2 + m * k
    print(f"Parameters: n={n}, k={k}, m={m}")
    print(f"Value (m*(m-1))/2 + m*k = {answer}")

if __name__ == "__main__":
    main()
```
