[write_program]
This problem counts four-digit numbers in [1000..9999] with all digits even and divisible by 5. Since a number divisible by 5 ends with 0 or 5, and digits are even, the last digit must be 0. Thus, the number ends with 0. The other digits are even digits from {0, 2, 4, 6, 8}, but the first digit cannot be zero (to ensure 4-digit number).

We enumerate all 4-digit numbers with digits D1 D2 D3 D4 where D1 in {2,4,6,8}, D2 and D3 in {0,2,4,6,8}, D4=0, and print them as they come. Then count how many such numbers there are.

```python
def digits_even_all_div5():
    even_digits = [0,2,4,6,8]
    count = 0
    # First digit can't be zero to make four-digit number
    for d1 in [2,4,6,8]:
        for d2 in even_digits:
            for d3 in even_digits:
                d4 = 0  # last digit must be 0 to be divisible by 5 and even
                num = d1*1000 + d2*100 + d3*10 + d4
                print(num)
                count += 1
    print("Total count:", count)
    
if __name__ == "__main__":
    digits_even_all_div5()
```
