[conjecture_answer] Formal Problem Statement: import Mathlib
import Mathlib.Data.Finset.Basic

open Nat

abbrev omnimath603_answer : ℕ := sorry
theorem omnimath603 : 
  Finset.card (Finset.filter (fun k => k^k % 10 = 1) (Finset.Icc 1 2013)) = omnimath603_answer := by sorry. Enumerated answers: 1
11
21
31
41
51
61
71
81
91
101
111
121
131
141
151
161
171
181
191
201
211
221
231
241
251
261
271
281
291
301
311
321
331
341
351
361
371
381
391
401
411
421
431
441
451
461
471
481
491
501
511
521
531
541
551
561
571
581
591
601
611
621
631
641
651
661
671
681
691
701
711
721
731
741
751
761
771
781
791
801
811
821
831
841
851
861
871
881
891
901
911
921
931
941
951
961
971
981
991
1001
1011
1021
1031
1041
1051
1061
1071
1081
1091
1101
1111
1121
1131
1141
1151
1161
1171
1181
1191
1201
1211
1221
1231
1241
1251
1261
1271
1281
1291
1301
1311
1321
1331
1341
1351
1361
1371
1381
1391
1401
1411
1421
1431
1441
1451
1461
1471
1481
1491
1501
1511
1521
1531
1541
1551
1561
1571
1581
1591
1601
1611
1621
1631
1641
1651
1661
1671
1681
1691
1701
1711
1721
1731
1741
1751
1761
1771
1781
1791
1801
1811
1821
1831
1841
1851
1861
1871
1881
1891
1901
1911
1921
1931
1941
1951
1961
1971
1981
1991
2001
2011
Count: 202. Expected Answer Type: ℕ
The last digit of k^k equals 1 only if the last digit of k is 1, because for numbers ending in 1, 1^k = 1 mod 10, and for others it cycles differently. Thus, these are numbers congruent to 1 mod 10 between 1 and 2013. Counting these: from 1 to 2011 inclusive, step 10, yields 201 terms.

<<<201>>>