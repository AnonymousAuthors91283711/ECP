[write_program]
The problem inquiry is about finding real numbers \(r\) and \(s\) satisfying a condition involving the quadratic equation \(x^2 = 14 + m(x-20)\), such that for \(m\), no real solution \(x\) to the equation exists exactly when \(r < m < s\). We want to find \(r+s\).

We'll investigate values of \(m\) for which the quadratic has no real root and extract intervals \((r,s)\) from these values. The quadratic is:

\[
x^2 - m x + 20 m - 14 = 0
\]

This has discriminant:

\[
\Delta = m^2 - 4(20 m -14) = m^2 - 80 m + 56
\]

No real roots means \(\Delta < 0\). Let's enumerate values of \(m\) in some range, compute the discriminant, and check when it's negative. Find the interval where this holds, then sum endpoints for the answer.

```python
# Enumerate values of m near the roots of the quadratic in m^2 - 80 m + 56 = 0
# The roots are the boundaries where discriminant changes sign.

def discriminant(m):
    return m*m - 80*m + 56

from math import sqrt

# Compute exact roots of discriminant=0 quadratic
D_root1 = (80 - sqrt(80*80 - 4*56)) / 2
D_root2 = (80 + sqrt(80*80 - 4*56)) / 2

print(f"Discriminant roots (bounds for m where no roots exist): {D_root1:.5f}, {D_root2:.5f}")

# We'll enumerate m around these roots and identify where discriminant < 0
step = 0.1
m_values = [D_root1 + i*step for i in range(int((D_root2 - D_root1)/step) + 1)]

print("Values of m with negative discriminant:")

for m in m_values:
    d = discriminant(m)
    if d < 0:
        print(f"m = {m:.2f}, discriminant = {d:.4f}")

print(f"\nr = {D_root1}")
print(f"s = {D_root2}")
print(f"r + s = {D_root1 + D_root2}")
```
This program identifies numerically the values of \(m\) where the quadratic has no real solution by the sign of the discriminant, finds \((r,s)\), and sums them.
