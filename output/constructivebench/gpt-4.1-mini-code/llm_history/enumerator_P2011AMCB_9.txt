[write_program]
The problem involves a 2D measure-theoretic ratio of areas in a square region with coordinates in [-20,10].  
Set A consists of points (x,y) in the square where x*y > 0 (both positive or both negative).  
We want to compute the ratio: area(A) / area(I×I).

This reduces to finding the proportion of the square where the product is positive.  
Points where x and y are both positive or both negative.  
I = [-20, 10], so x and y run in this interval.

Key insight:  
- x*y>0 means (x>0 and y>0) or (x<0 and y<0).  
- I splits into negative part [-20,0) and positive part (0,10].  
- Area(A) = area(negative quadrant in I×I) + area(positive quadrant in I×I) = (length of negative part)^2 + (length of positive part)^2.

We will enumerate this exactly.

```python
# Enumerate area proportions of set A in square [-20, 10]^2 where product of coords > 0.
def main():
    a, b = -20, 10
    length = b - a
    neg_len = 0 - a  # length of negative part [-20,0)
    pos_len = b - 0  # length of positive part (0,10]
    
    area_total = length * length
    area_neg = neg_len * neg_len
    area_pos = pos_len * pos_len
    area_A = area_neg + area_pos
    ratio = area_A / area_total
    
    print(f"Interval I = [{a}, {b}], length = {length}")
    print(f"Negative segment length = {neg_len}")
    print(f"Positive segment length = {pos_len}")
    print(f"Area(I×I) = {area_total}")
    print(f"Area where product > 0, A = area_neg + area_pos = {area_neg} + {area_pos} = {area_A}")
    print(f"Ratio area(A)/area(I×I) = {ratio}")

if __name__ == "__main__":
    main()
```
