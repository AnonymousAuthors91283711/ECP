[write_program]
This problem involves roots \(a, b, c\) of the cubic polynomial \(x^3 - 20x^2 + 19x + T = 0\) for some rational parameter \(T\). We want to enumerate some values of \(T\) and compute \(a^2 + b^2 + c^2\).

Using Viète's formulas:
- \(a + b + c = 20\)
- \(ab + bc + ca = 19\)
- \(abc = -T\)

The value to find is \(a^2 + b^2 + c^2 = (a + b + c)^2 - 2(ab + bc + ca) = 20^2 - 2 \times 19 = 400 - 38 = 362\) for any \(T\).

To illustrate and verify, we'll generate roots numerically for small integer \(T\) values and print the corresponding \(a^2+b^2+c^2\). We print exact \(362\) from Viète's formula first, then roots for different \(T\).

```python
import numpy as np

print("By Viète's formulas, for any T:")
print("a^2 + b^2 + c^2 = (a+b+c)^2 - 2(ab+bc+ca) = 20^2 - 2*19 = 362\n")

# Enumerate sample integer T values, compute roots and verify sums of squares
for T in range(-5, 6):
    # Polynomial coefficients: x^3 - 20 x^2 + 19 x + T
    coeffs = [1, -20, 19, T]
    roots = np.roots(coeffs)

    # Compute sum of squares of roots using numeric roots
    sum_squares_num = sum(r.real**2 + r.imag**2 for r in roots)

    print(f"T = {T}:")
    print(f" Roots (approx): {roots}")
    print(f" Sum of squares (|root|^2): {sum_squares_num:.6f}")
    print(" Sum of squares (real roots squared sum): ", sum(r.real**2 for r in roots))
    print()    
```
This enumerates \(T\) from -5 to 5, prints roots and verifies \(a^2+b^2+c^2\) from numeric roots (real part squared + imag part squared). The exact sum in rational closed form is 362 regardless of \(T\).
