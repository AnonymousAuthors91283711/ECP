[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev olympiadbench2382_answer : ℕ → ℕ := sorry
def T (n : ℕ) : ℕ :=
  Finset.card (Finset.filter (fun (a, b, c) => 
    a + b + c = n ∧ 
    a ≤ b ∧ b ≤ c ∧ 
    a + b > c) (Finset.Icc 1 n ×ˢ Finset.Icc 1 n ×ˢ Finset.Icc 1 n))

theorem olympiadbench2382 (n : ℕ) (h : n = 10 ∨ n = 11 ∨ n = 12) :
    T n = olympiadbench2382_answer n := by sorry. Enumerated answers: Enumerating triples for n=10:
n=10: triple=(2,4,4)
n=10: triple=(3,3,4)
T(10) = 2
Enumerating triples for n=11:
n=11: triple=(1,5,5)
n=11: triple=(2,4,5)
n=11: triple=(3,3,5)
n=11: triple=(3,4,4)
T(11) = 4
Enumerating triples for n=12:
n=12: triple=(2,5,5)
n=12: triple=(3,4,5)
n=12: triple=(4,4,4)
T(12) = 3. Expected Answer Type: ℕ → ℕ
<<<fun n => n/3 - 1>>>