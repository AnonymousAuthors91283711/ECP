[write_program]
The problem considers pairs of positive integers (a, b) satisfying the system:

1. \( a + b + \gcd(a,b)^2 = \operatorname{lcm}(a,b) \)
2. \( \operatorname{lcm}(a,b) = 2 \times \operatorname{lcm}(a-1,b) \)

We enumerate candidate pairs up to a small bound for b (to avoid excessive computations), printing each pair that satisfies the first condition and then checking the second condition. Finally, we print all such pairs found.

```python
from math import gcd

def lcm(x, y):
    return x * y // gcd(x, y)

def main():
    max_a = 50  # reasonable bound for a
    max_b = 20  # reasonable bound for b
    candidates = []
    for b in range(1, max_b + 1):
        for a in range(1, max_a + 1):
            g = gcd(a, b)
            lhs = a + b + g * g
            l = lcm(a, b)
            if lhs == l:
                # Check second condition: lcm(a,b) = 2 * lcm(a-1,b)
                if a > 1:
                    l_prev = lcm(a - 1, b)
                    if l == 2 * l_prev:
                        print(f"a={a}, b={b}, gcd={g}, lcm={l}, lcm_prev={l_prev}")
                        candidates.append((a, b))
                # No else because a > 0 needed but a -1 must be >=1 for lcm(a-1,b)
    print("Candidate pairs:", candidates)

if __name__ == "__main__":
    main()
```
