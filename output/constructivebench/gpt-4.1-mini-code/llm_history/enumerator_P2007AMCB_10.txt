[write_program]
The problem involves finding a total number of students satisfying certain conditions related to the count of girls initially and after some changes. We want to find all natural numbers `total` such that:

1. 0 < total
2. 2 * total % 5 == 0 (so total must be divisible by 5/2, implying total is divisible by 5)
3. Initially, 2/5 of total are girls (40%)
4. After removing 2 girls and adding 2 boys, the percentage of girls is 30%
5. The initial number of girls is the variable we've to output (2*total/5)

We'll enumerate multiples of 5, compute initial girls = 2*total/5, then check the equality:

(girls - 2) * 10 = 3 * (total - 2 + 2)

Simplify total - 2 + 2 = total, so:

(girls - 2)*10 = 3 * total

We'll print every total satisfying all conditions, along with the number of girls.

```python
# Enumerate natural numbers total where:
# total > 0
# 2*total is divisible by 5 => total divisible by 5
# girls = 2*total/5
# After removing 2 girls and adding 2 boys, girls are 30%
# This reduces to (girls - 2)*10 = 3*total

def main():
    print("Enumerating total values and corresponding girls satisfying conditions:")
    # Set a reasonable upper bound to avoid long runs
    for total in range(5, 1001, 5):  # total multiples of 5
        girls = 2 * total // 5
        # Check (girls - 2)*10 == 3*total
        if (girls - 2)*10 == 3*total and girls - 2 >= 0:
            print(f"total: {total}, girls: {girls}")

    print("Minimum total:", 5)
    print("Minimum girls (2*total/5):", 2*5 // 5)

if __name__ == "__main__":
    main()
```
