[write_program]
The problem asks us to find two-digit numbers \( n = 10a + b \) where swapping the digits results in a number equal to \(\frac{7}{4}\) times the original number:  
\[10b + a = \frac{7}{4} (10a + b)\]  
where \( a, b \) are digits, \( a \in [1..9] \), \( b \in [0..9] \).

We'll enumerate all two-digit numbers and check this relation exactly using integer arithmetic to avoid floating point inaccuracies.

```python
# Enumerate two-digit numbers n = 10a + b such that:
# 10b + a = (7/4) * (10a + b)
# a: tens digit (1..9), b: units digit (0..9)

for a in range(1, 10):
    for b in range(0, 10):
        n = 10 * a + b
        swapped = 10 * b + a
        # Check if 4 * swapped == 7 * n exactly (to avoid float issues)
        if 4 * swapped == 7 * n:
            print(f"n={n}, a={a}, b={b}, swapped={swapped}, 7/4 * n={7/4 * n}")

# Check if any answers printed, otherwise print none found.
```

