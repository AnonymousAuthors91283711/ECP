[write_program]
The problem involves counting 4-digit numbers \( n \) (from 1000 to 9999) such that for each pair of adjacent digits \(d_1, d_2\):

- If \(d_1\) is odd, then \(d_1 < d_2\).
- If \(d_1\) is even, then \(d_1 > d_2\).

This applies to the first three digits stepping through the number.

We will enumerate all such 4-digit numbers, print each, and finally print the count.

```python
def is_valid(n):
    digits = [int(d) for d in str(n)]
    # Check adjacent pairs: for i in 0..2, digits[i] and digits[i+1]
    for i in range(3):
        d1, d2 = digits[i], digits[i+1]
        if d1 % 2 == 1:  # odd
            if not (d1 < d2):
                return False
        else:  # even
            if not (d1 > d2):
                return False
    return True

def main():
    count = 0
    for n in range(1000, 10000):
        if is_valid(n):
            print(n)
            count += 1
    print("Count:", count)

if __name__ == "__main__":
    main()
```
