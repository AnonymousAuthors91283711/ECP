[write_program]
The problem is to find the greatest natural number \( k = m^2 + n^2 \) with \( m, n \in [1,1981] \) such that \((n^2 - m n - m^2)^2 = 1\), i.e., 
\[
(n^2 - m n - m^2) = \pm 1.
\]

We will enumerate all \( (m,n) \) in the given range and check this condition, printing all \( k = m^2 + n^2 \) solutions found. At the end, we print the maximum such \( k \).

```python
# Enumerate all m,n in [1..1981]
# Check if (n^2 - m*n - m^2)^2 == 1
# Print all k = m^2 + n^2 found
# Finally print the maximum k found.

def main():
    limit = 1981
    max_k = 0
    for m in range(1, limit+1):
        for n in range(1, limit+1):
            val = n*n - m*n - m*m
            if val*val == 1:
                k = m*m + n*n
                print(f"k = {k} with (m,n)=({m},{n}), val={val}")
                if k > max_k:
                    max_k = k
    print(f"Maximum k found: {max_k}")

if __name__ == "__main__":
    main()
```
This program prints each candidate k as soon as found including the pair and value. It then prints the maximum final answer.
