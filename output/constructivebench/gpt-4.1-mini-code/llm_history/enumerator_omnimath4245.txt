[write_program]
The problem suggests studying pairs of two-digit numbers \(a,b\) where each digit of \(a\) and \(b\) are reversed, and a certain equation holds:

- \(a = 10c + d\), \(b = 10d + c\), with digits \(c,d < 10\)
- \(a \times (10d + c) = b \times (10c + d)\)

Goal: enumerate pairs \((a,b)\) satisfying \(10 \leq a,b \leq 99\) and the above property. We will print all such pairs immediately when found and then state them as the answer set.

```python
# Enumerate all pairs (a,b) where a and b are two-digit numbers,
# b is the digit-reverse of a, and a*(10d + c) = b*(10c + d) for digits c,d.

def main():
    # c, d are digits, c,d in [1..9] since a,b two-digit numbers (leading digit nonzero)
    for c in range(1,10):
        for d in range(0,10):
            a = 10*c + d
            b = 10*d + c
            # Only consider a,b both two-digit numbers:
            if b < 10:
                continue
            # Check the condition: a*(10*d + c) == b*(10*c + d)
            lhs = a * (10*d + c)
            rhs = b * (10*c + d)
            if lhs == rhs:
                print(f"a={a}, b={b}, digits: c={c}, d={d}")

if __name__ == "__main__":
    main()
```
