[write_program]
The problem is IMO 2017 Shortlist N5, involving primes p > q and an expression combining powers of (p+q) and (p-q). We want to find integer k such that

k = [ (p+q)^{p+q} * (p-q)^{p-q} - 1 ] / [ (p+q)^{p-q} * (p-q)^{p+q} - 1 ]

We want to analyze for which primes p > q this ratio is integer, and what values k can take.

I will enumerate small primes p > q, compute numerator and denominator exactly using integers, check if denominator divides numerator, and if yes, print p,q,k. This may reveal the structure or the candidate pairs.

```python
from sympy import primerange, Integer

# List small primes to test
primes = list(primerange(2, 50))

# Enumerate pairs (p,q) with p,q primes, p > q
for i in range(len(primes)):
    p = primes[i]
    for j in range(i):
        q = primes[j]
        if p <= q:
            continue  # must have p > q

        # Compute terms exactly with Integer for big int ops
        A = Integer(p+q)
        B = Integer(p-q)

        # numerator = A^{p+q} * B^{p-q} - 1
        num = A**(p+q) * B**(p-q) - 1

        # denominator = A^{p-q} * B^{p+q} - 1
        den = A**(p-q) * B**(p+q) - 1

        if den == 0:
            continue

        if num % den == 0:
            k = num // den
            print(f"p={p}, q={q}, k={k}")

```
