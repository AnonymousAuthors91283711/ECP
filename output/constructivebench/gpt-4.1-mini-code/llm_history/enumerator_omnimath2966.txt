[write_program]
The problem is to count integers \( n \) between 100 and 300 inclusive such that:
- \( 5 \mid n \) (n divisible by 5)
- \( 7 \mid n \) (n divisible by 7)
- \( 10 \nmid n \) (n NOT divisible by 10)

Since \(5 \mid n\) and \(7 \mid n\), \(n\) must be divisible by 35. The additional condition is that \(10 \nmid n\), i.e., \(n\) is not divisible by 2 and 5 simultaneously, so effectively \(n\) must not be divisible by 2 (since it is divisible by 5 already).

So the numbers must be multiples of 35 but NOT multiples of 70 (since 70 = 2*35). We will enumerate multiples of 35 in [100, 300], filter those not divisible by 10, and print each found number.

```python
# Enumerate numbers n in [100,300] divisible by 5 and 7 (i.e. 35)
# but not divisible by 10. Print all such n and final count.

def main():
    count = 0
    print("Parameters: range=100..300, divisible by 5 and 7, not by 10")
    for n in range(100, 301):
        if n % 35 == 0 and n % 10 != 0:
            print(n)
            count += 1
    print("Count:", count)

if __name__ == "__main__":
    main()
```
