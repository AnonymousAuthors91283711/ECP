[write_program]
The equation to explore is 3 * 8^x + 5 * 8^x = 2^61. Simplifying, since 3*8^x + 5*8^x = 8*8^x = 8^{x+1}, we get 8^{x+1} = 2^{61}. Because 8 = 2^3, this reduces to 2^{3(x+1)} = 2^{61}, hence 3(x+1) = 61, and x = 61/3 - 1 = 58/3. The code will enumerate x values and check for equality by comparing powers directly for confirmation and display this exact rational value.

```python
# Enumerate x values verifying 3*8^x + 5*8^x = 2^61 by checking 8^{x+1} = 2^{61}
# Since 8=2^3, so 8^{x+1} = 2^{3(x+1)} = 2^{61} => 3(x+1) = 61 => x = 58/3 exactly
from fractions import Fraction
from math import log2

target_exp = 61
base = 2
eight = 8

print(f"Target equation: 3*8^x + 5*8^x = 2^{target_exp}")

# Since 3*8^x + 5*8^x = 8*8^x = 8^{x+1}, we want 8^{x+1} = 2^{61}
# Equivalently: 2^{3(x+1)} = 2^{61} => 3(x+1) = 61 => x = 58/3

x_exact = Fraction(58,3)
print(f"Exact solution: x = {x_exact} (as a fraction)")

# Enumerate some sample x near x_exact to confirm equality approximately
print("Checking values near the exact x:")

for numerator in range(57, 60):
    x_test = Fraction(numerator,3)
    lhs = 3 * (8**x_test) + 5 * (8**x_test)  # This simplifies but keep for demonstration
    # Compute 8^{x+1} directly
    lhs_val = 8 ** (float(x_test)+1)
    rhs_val = 2 ** target_exp
    approx_equal = abs(lhs_val - rhs_val) < 1e-6
    print(f"x = {x_test} â‰ˆ {float(x_test):.4f}, 8^(x+1) = {lhs_val:.5e}, 2^{target_exp} = {rhs_val:.5e}, approx equal: {approx_equal}")
```
