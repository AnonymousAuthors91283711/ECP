[write_program]
The problem asks to find all pairs of positive integers (m, n) such that (m*n - 1) divides (m² + n²). To assist, I'll enumerate pairs (m,n) for small values (e.g., 1 to 50), print each pair where (m*n - 1) divides (m² + n²), and explicitly print the pairs found. This will help conjecture about the solution set.

```python
# Enumerate pairs (m,n) with 1 <= m,n <= 50
# Check if (m*n - 1) divides (m^2 + n^2)
# Print pairs immediately when found for streaming output

def main():
    max_val = 50
    found_pairs = []
    for m in range(1, max_val + 1):
        for n in range(1, max_val + 1):
            divisor = m * n - 1
            if divisor == 0:
                continue
            numerator = m * m + n * n
            if numerator % divisor == 0:
                print(f"(m={m}, n={n}), divisor={divisor}, quotient={numerator // divisor}")
                found_pairs.append((m, n))
    print("\nAll found pairs (m, n):")
    for pair in found_pairs:
        print(pair)

if __name__ == "__main__":
    main()
```
