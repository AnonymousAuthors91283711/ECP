[write_program]
The problem asks for the number of integers \( k \) such that the quadratic polynomial \( X^2 + kX + 36 \) factors over the integers into two distinct linear factors with integer roots.

This is equivalent to finding integer pairs \( (r_1, r_2) \), \( r_1 \neq r_2 \), such that:
\[
(r_1)(r_2) = 36,
\]
and
\[
r_1 + r_2 = -k.
\]

Our goal: enumerate all such \( k \) arising from distinct integer pairs whose product is 36, print them as soon as found, and in the end, give the count of distinct such \( k \).

We will print each distinct \( k \) found immediately, then print the total count.

```python
# Enumerate distinct integer pairs (r1, r2) with product = 36, r1 != r2,
# then print each k = -(r1 + r2) immediately, store in a set for uniqueness.

def main():
    n = 36
    ks = set()
    # To avoid duplicates from swapped pairs, only consider r1 <= r2
    # Factors can be positive or negative integers
    for r1 in range(-abs(n), abs(n)+1):
        if r1 == 0:
            continue  # product can't be 36 if one factor is zero
        if n % r1 == 0:
            r2 = n // r1
            if r1 != r2:
                k = -(r1 + r2)
                if k not in ks:
                    ks.add(k)
                    print(f'Found k = {k} from roots ({r1}, {r2})')
    print(f'Total distinct k found: {len(ks)}')

if __name__ == "__main__":
    main()
```
