[write_program]
The problem concerns pairs \((m, n)\) with \(m, n \geq 3\) such that the set of positive integers \(a\) for which \(a^m + a - 1\) is divisible by \(a^n + a^2 - 1\) infinitely often is infinite. The task is to find such \((m,n)\) pairs.

We'll enumerate small \((m,n)\) pairs with \(3 \le m,n \le 7\), then for each pair, test divisibility for increasing values of \(a\) up to some cutoff to look for patterns or infinite occurrences. We'll print pairs \((m,n)\) along with some values of \(a\) that satisfy the divisibility, to conjecture which pairs produce infinitely many such \(a\).

```python
# Enumerate pairs (m,n) with 3 <= m,n <=7.
# For each pair, check for 1 < a <= 100 if (a^m + a -1) divisible by (a^n + a^2 -1).
# Print each (m,n,a) triple where divisibility holds.
# This will help conjecture which pairs produce infinitely many solutions.
def divides(x, y):
    return y != 0 and x % y == 0

def main():
    max_a = 100
    print("Checking pairs (m,n) with 3 <= m,n <=7 and a upto", max_a)
    for m in range(3, 8):
        for n in range(3, 8):
            count = 0
            found_as = []
            for a in range(2, max_a+1):
                numerator = pow(a,m) + a - 1
                denominator = pow(a,n) + a*a - 1
                if denominator != 0 and divides(numerator, denominator):
                    print(f"m={m}, n={n}, a={a} | {numerator} divisible by {denominator}")
                    count += 1
                    found_as.append(a)
                # Heuristics: if we find >=5 values of a that work, print summary
                if count >= 5:
                    print(f"Many solutions for (m,n)=({m},{n}), example a's: {found_as[:5]}")
                    break

if __name__ == "__main__":
    main()
```
