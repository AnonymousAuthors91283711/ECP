[write_program]
The problem asks to find the least positive integer \( n \) such that \( n^3 \equiv 888 \pmod{1000} \). We'll enumerate all \( n \) from 1 to 999 to find those with \( n^3 \mod 1000 = 888 \). We print any such matches immediately and finally output the smallest one found.

```python
# Enumerate all n from 1 to 999 to find n^3 % 1000 == 888
def main():
    candidates = []
    for n in range(1, 1000):
        if (n ** 3) % 1000 == 888:
            print(f"Found n={n} with n^3 mod 1000 = 888")
            candidates.append(n)
    if candidates:
        ans = min(candidates)
        print(f"Minimal n satisfying n^3 ≡ 888 mod 1000 is {ans}")
    else:
        print("No n in 1..999 satisfies n^3 ≡ 888 mod 1000")

if __name__ == "__main__":
    main()
```
