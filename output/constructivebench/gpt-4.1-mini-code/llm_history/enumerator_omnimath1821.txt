[write_program]
The problem asks to count how many numbers \( n \) from 1 to 10,000 satisfy the condition:
\[
\text{digitSum}(11 \times n) = 2 \times \text{digitSum}(n).
\]
We will write a Python program to enumerate such \( n \), print each qualifying \( n \) immediately, and finally print the count of all such numbers. This enumeration helps in conjecturing the value of omnimath1821_answer.

```python
def digit_sum(n):
    return sum(int(d) for d in str(n))

count = 0
for n in range(1, 10_001):
    ds_n = digit_sum(n)
    ds_11n = digit_sum(11 * n)
    if ds_11n == 2 * ds_n:
        print(n)  # print the number satisfying the relation immediately
        count += 1

print("Count:", count)
```
