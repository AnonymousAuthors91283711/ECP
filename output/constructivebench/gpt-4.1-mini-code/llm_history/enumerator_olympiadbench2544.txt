[write_program]
The problem asks to find all pairs of natural numbers \( (a,b) \) with \( 0 < a < b \) such that \(\sqrt{a} + \sqrt{b} = \sqrt{50}\).

Enumerating pairs \( (a,b) \) with small values and checking the exact equality or close approximations to \(\sqrt{50}\) should yield candidates. We want to prioritize exact matches in floating point.

```python
import math

target = math.sqrt(50)
max_a = 50  # since a < b, and sqrt(a)+sqrt(b)=sqrt(50), a,b won't exceed 50

print(f"Target sqrt(50) = {target}")
for a in range(1, max_a):
    for b in range(a+1, max_a+1):
        s = math.sqrt(a) + math.sqrt(b)
        if abs(s - target) < 1e-12:
            print(f"Exact match found: a={a}, b={b}, sum={s}")
        elif abs(s - target) < 1e-6:  # Approximate close matches
            print(f"Close match: a={a}, b={b}, sum={s}")
```

