[write_program]
The problem is asking for the least positive integer \(n\) such that \(1000 \mid (2^n + 5^n - n)\). We can write a Python program to enumerate positive integers \(n\), compute \(2^n + 5^n - n \mod 1000\), and print those \(n\) for which this equals 0. This will help us conjecture the minimal such \(n\).

```python
# Search for the least positive integer n such that 1000 divides 2^n + 5^n - n

MOD = 1000
max_search = 100000  # Limit search to avoid infinite loops; adjust if needed

pow2 = 1
pow5 = 1

print("n values where 1000 divides 2^n + 5^n - n:")

for n in range(1, max_search + 1):
    pow2 = (pow2 * 2) % MOD
    pow5 = (pow5 * 5) % MOD
    val = (pow2 + pow5 - n) % MOD
    if val == 0:
        print(n)
        # The first printed n should be the minimal such integer
        break
```
