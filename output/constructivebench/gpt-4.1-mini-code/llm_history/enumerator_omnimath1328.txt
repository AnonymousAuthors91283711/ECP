[write_program]
The problem asks to find real numbers \(a, b\) such that there exists a complex \(z\) with \(z^3 = 343\), \(z\) not real, satisfying the quadratic polynomial \(z^2 + a z + b = 0\).

We enumerate the complex cube roots of 343, filter out the real root, then find the quadratic with roots \(z\) and \(\overline{z}\) (the complex conjugate), where \(a = -(z + \overline{z})\) and \(b = z \overline{z}\) are real. We print these \(a,b\) pairs for the three cube roots of 343.

```python
import cmath

def cube_roots(n):
    # Returns the three cube roots of n (assumed real positive)
    r = n ** (1/3)
    roots = []
    for k in range(3):
        angle = (2 * cmath.pi * k) / 3
        root = r * cmath.rect(1, angle)
        roots.append(root)
    return roots

def approx_eq(a, b, eps=1e-12):
    return abs(a - b) < eps

def main():
    n = 343  # 7^3
    roots = cube_roots(n)
    print(f"Cube roots of {n}:")
    for z in roots:
        # Check if z is real
        if not approx_eq(z.imag, 0):
            # Quadratic with roots z and its conjugate: x^2 - (z+z̅)x + z*z̅ = 0
            a = -(z + z.conjugate()).real  # sum of roots with sign
            b = (z * z.conjugate()).real   # product of roots
            print(f"a = {a}, b = {b} (from root z = {z})")

if __name__ == "__main__":
    main()
```
