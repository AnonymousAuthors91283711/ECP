[write_program]
The problem is to find the proportion of integers \( k \) in the range \([1, 2016]\) such that \(\gcd(k, 2015) = 1\).

This is equivalent to counting the number of integers coprime to 2015 in that range and dividing by 2016.

Since 2015 factors as \(5 \times 13 \times 31\), the count of coprime numbers can be found using Euler's totient function or by inclusion-exclusion.

We will enumerate and count all such \(k\) using Python, then compute and print the ratio.

```python
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

N = 2016
M = 2015
count = 0
for k in range(1, N + 1):
    if gcd(k, M) == 1:
        count += 1
        # print each coprime number found
        print(f"Coprime number: {k}")

print(f"Total coprime count: {count}")
print(f"Ratio = {count}/{N} = {count/N}")
```
