[write_program]
The problem asks to find all positive integer triples (a, b, c) satisfying a³ + b³ + c³ = (abc)². We enumerate small positive integers, print solutions immediately. We limit a,b,c ≤ 20 for feasibility.

```python
# Enumerate positive triples (a,b,c) with a,b,c<=20 satisfying a^3 + b^3 + c^3 = (a*b*c)^2

def main():
    bound = 20
    solutions = []
    for a in range(1, bound+1):
        a3 = a**3
        for b in range(1, bound+1):
            b3 = b**3
            for c in range(1, bound+1):
                c3 = c**3
                lhs = a3 + b3 + c3
                rhs = (a*b*c)**2
                if lhs == rhs:
                    print(f"Solution: a={a}, b={b}, c={c} => {a}^3 + {b}^3 + {c}^3 = {lhs} = ({a}*{b}*{c})^2")
                    solutions.append((a,b,c))
    if solutions:
        print(f"Total solutions found (a,b,c ≤ {bound}): {len(solutions)}")
    else:
        print(f"No solutions with a,b,c ≤ {bound}")

if __name__ == "__main__":
    main()
```
