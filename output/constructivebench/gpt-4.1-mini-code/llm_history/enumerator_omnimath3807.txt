[write_program]
The problem is to find all positive integer quadruples \((x,y,z,t)\) satisfying
\[2^x \cdot 3^y + 5^z = 7^t.\]

We'll enumerate over small positive integers for each variable (e.g., up to 10 or 12), print any exact solutions found immediately, then finally output the set of all solutions found.

```python
# Enumerate quadruples (x,y,z,t) with each in 1..12 satisfying 2^x * 3^y + 5^z = 7^t
# Print each found quadruple immediately

MAX = 12
solutions = []

print("Searching for positive integers x,y,z,t â‰¤ 12 with 2^x * 3^y + 5^z = 7^t")

# Pre-compute powers to speed up
pow2 = [2**i for i in range(MAX+1)]
pow3 = [3**i for i in range(MAX+1)]
pow5 = [5**i for i in range(MAX+1)]
pow7 = [7**i for i in range(MAX+1)]

for x in range(1, MAX+1):
    for y in range(1, MAX+1):
        lhs_part = pow2[x] * pow3[y]
        for z in range(1, MAX+1):
            lhs = lhs_part + pow5[z]

            # Since RHS = 7^t, check if lhs is a power of 7 within range
            # Binary search for t with pow7[t] == lhs
            low, high = 1, MAX
            while low <= high:
                mid = (low + high) // 2
                if pow7[mid] == lhs:
                    t = mid
                    sol = (x, y, z, t)
                    print(f"Found solution: x={x}, y={y}, z={z}, t={t}")
                    solutions.append(sol)
                    break
                elif pow7[mid] < lhs:
                    low = mid + 1
                else:
                    high = mid - 1

print(f"Total solutions found: {len(solutions)}")
```

