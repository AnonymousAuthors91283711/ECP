[write_program]
The problem appears to involve a parameter \( n \) (number of girls and boys), counting matches among girls, boys, and between girls and boys. The key equation is:

\[
\text{boys\_matches} = \frac{7}{5} \times \text{girls\_matches}
\]

where
\[
\text{total\_matches} = \frac{3n(3n-1)}{2}
\]
\[
\text{girls\_matches} = \frac{n(n-1)}{2} + 2n^2
\]
\[
\text{boys\_matches} = \text{total\_matches} - \text{girls\_matches}
\]

We want to find integers \( n > 0 \) satisfying this relation.

We will enumerate \( n \) from 1 to a small upper bound (e.g., 50), perform exact arithmetic (using fractions when appropriate), and print all values satisfying the condition exactly. This can help us conjecture the solution set.

```python
from fractions import Fraction

def count_matches(n):
    # Calculate total matches between 3n players
    total_matches = (3 * n * (3 * n - 1)) // 2
    girls_matches = (n * (n - 1)) // 2 + 2 * (n ** 2)
    boys_matches = total_matches - girls_matches
    return girls_matches, boys_matches

print("n | girls_matches | boys_matches | boys_matches / girls_matches")
print("-" * 50)

for n in range(1, 51):
    girls, boys = count_matches(n)
    if girls == 0:
        continue  # Avoid division by zero
    ratio = Fraction(boys, girls)
    print(f"{n:2d} | {girls:13d} | {boys:12d} | {ratio}")
    if ratio == Fraction(7,5):
        print(f"--> n = {n} satisfies boys_matches = (7/5) * girls_matches")
```

This program enumerates possible \( n \) and prints ratios exactly, highlighting all cases where the relation holds.
