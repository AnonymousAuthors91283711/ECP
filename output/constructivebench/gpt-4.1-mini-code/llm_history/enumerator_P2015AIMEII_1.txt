[write_program]
The problem concerns finding the smallest positive integer \( N \) such that:
- \( N = \frac{78}{100}k \) for some positive integer \( k \) with \( 78k \) divisible by 100,
- \( N = \frac{116}{100}m \) for some positive integer \( m \) with \( 116m \) divisible by 100.

We want the least such \( N \).

This means:
- \( N = \frac{78k}{100} \) is an integer, so \( 100 \mid 78k \).
- \( N = \frac{116m}{100} \) is an integer, so \( 100 \mid 116m \).
- And \( \frac{78k}{100} = \frac{116m}{100} \Rightarrow 78k = 116m \).

Rewrite \( 78k = 116m \) as \( 39k = 58m \).

We want to find integers \( k, m > 0 \) satisfying this and \( 100 \mid 78k \), \( 100 \mid 116m \).

We can enumerate small multiples to find candidates for \( N = \frac{78k}{100} \).

Below is a Python program enumerating such \( N \) values for \( k, m \) up to a limit (like 2000) and printing any valid \( N \). It will help find the smallest \( N \).

```python
# Enumerate N = 78k/100 = 116m/100 = 39k/50 = 58m/50
# with 78k and 116m divisible by 100.
# We try small k,m up to 2000, print all N that satisfy conditions.

def gcd(a,b):
    while b:
        a,b = b, a%b
    return a

max_val = 2000
found = []

for k in range(1, max_val+1):
    if (78*k) % 100 != 0:
        continue
    N = (78*k)//100
    # We have N = 39k/50 integer; check if N = 116m/100 for some m integer with (116m)%100=0
    # So 116m = 100N => m = 100N/116 = (100*(78k/100))/116 = (78k)/116 = (39k)/58
    # m must be integer and (116m)%100=0
    # m = (39*k)//58 if divisible exact
    if (39*k) % 58 != 0:
        continue
    m = (39*k)//58
    if m == 0:
        continue
    if (116*m) % 100 != 0:
        continue
    # Valid N found
    print(f"N={N}, k={k}, m={m}")
    found.append(N)

# Print the minimal N found
if found:
    print("Minimal N found:", min(found))
else:
    print("No N found up to k,m =", max_val)
```
