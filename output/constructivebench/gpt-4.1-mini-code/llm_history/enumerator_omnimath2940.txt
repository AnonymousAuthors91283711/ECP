[write_program]
The problem asks for counting numbers less than 1000 that are the product of squares of two distinct primes. We'll enumerate pairs of distinct primes `p < q`, calculate \(p^2 \times q^2\), and count those less than 1000.

```python
# Enumerate numbers < 1000 that can be written as p^2 * q^2 for distinct primes p,q
def is_prime(n):
    if n < 2: return False
    if n in (2,3): return True
    if n%2 ==0: return False
    for i in range(3,int(n**0.5)+1,2):
        if n%i == 0: return False
    return True

def primes_up_to(n):
    return [x for x in range(2,n+1) if is_prime(x)]

def main():
    limit = 1000
    primes = primes_up_to(int(limit**0.5)+1)  # primes up to sqrt(1000)
    found = set()
    print("Enumerating p^2*q^2 < 1000 for distinct primes p,q:")
    for i, p in enumerate(primes):
        p2 = p*p
        for q in primes[i+1:]:
            q2 = q*q
            val = p2 * q2
            if val < limit:
                found.add(val)
                print(f"p={p}, q={q}, p^2*q^2={val}")
            else:
                # As q grows, product only grows; break inner loop early
                break
    print(f"Count of such numbers: {len(found)}")
    # Output the count explicitly as the answer
    print(f"Answer (omnimath2940_answer) = {len(found)}")

if __name__=="__main__":
    main()
```
