[write_program]
The problem asks to find the sum of squares of all numbers \( n \) between 1 and 10000 whose decimal digit sum equals 2. The program below enumerates these numbers, prints each found number and its square, and finally prints the total sum of squares.

```python
# Enumerate numbers n in [1..10000] where sum of digits = 2,
# print each n and n^2, then print sum of all n^2.

def digit_sum(n):
    return sum(int(d) for d in str(n))

def main():
    total = 0
    for n in range(1, 10001):
        if digit_sum(n) == 2:
            sq = n*n
            print(f"n={n}, n^2={sq}")
            total += sq
    print("Sum of squares:", total)

if __name__ == "__main__":
    main()
```
