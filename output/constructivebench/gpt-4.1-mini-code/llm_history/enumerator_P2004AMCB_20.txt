[write_program]
The problem involves enumerating all 2-colorings of the 6 faces of a cube and counting those colorings where all vertical faces have the same color. Here, the 6 faces are colored red or blue (True/False). The vertical faces correspond to some subset of 4 faces (indexed 0 to 3) after some orientation.

We want to:
- Enumerate all 2^6 colorings of the cube faces.
- For each coloring, check if there exists an orientation mapping the 6 faces to 4 positions so that the vertical faces (those mapping to 0..3) all have the same color.
- Count such colorings and compute their ratio over all colorings (64).

To simplify:
- Since orientations assign vertical faces, this translates to finding a set of 4 faces whose colors are all equal.
- Because the problem is symmetric and the exact orientation function is unknown, we can guess the vertical faces are always some 4-element subset of the 6 faces.
- So, for each coloring, if there exists a 4-face subset where all those 4 faces are the same color, then the coloring is valid.

The program will:
- Enumerate colorings as 6-length tuples of bool.
- For each coloring, check all 4-face subsets of the 6 faces.
- If any subset is uniform color, count it as valid immediately and print.
- After processing, print the total count and ratio.

```python
from itertools import product, combinations

faces = range(6)
all_colorings = product([False, True], repeat=6)
valid_count = 0
total = 2**6

# Enumerate all colorings
for coloring in all_colorings:
    # Check all 4-face subsets if they are uniform color
    for quad in combinations(faces, 4):
        # Get colors of the 4 faces
        quad_colors = [coloring[i] for i in quad]
        if all(c == quad_colors[0] for c in quad_colors):
            valid_count += 1
            print(f"Valid coloring: {coloring} with uniform faces {quad} color {quad_colors[0]}")
            break  # No need to check other subsets for this coloring

print(f"Total valid colorings: {valid_count}")
print(f"Ratio valid/all = {valid_count}/{total} = {valid_count/total}")
```
