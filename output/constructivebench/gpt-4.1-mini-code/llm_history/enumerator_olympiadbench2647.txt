[write_program]
The problem involves integer triples \((x,y,z)\) satisfying two equations:

\[
x y - z^2 = y^2 z - x = 14.
\]

We want to enumerate integer triples satisfying these equalities and check the sum of squares bound, then identify the correct triple \((x,y,z)\).

We will brute force \(x,y,z\) in a reasonable range around \(-300\) to \(300\), print solutions as soon as we find them, and finally print the minimal solution according to the sum of squares measure.

```python
# Enumerate integer triples (x,y,z) satisfying 
# x*y - z^2 = y^2*z - x = 14 and print them immediately.

def main():
    limit = 300  # Search range based on problem hint (-266, -3, -28)
    found = []
    for x in range(-limit, limit+1):
        for y in range(-limit, limit+1):
            # From equation x*y - z^2 = 14 => z^2 = x*y - 14 must be >=0
            val = x*y - 14
            if val < 0:
                continue
            # z^2 = val => z = Â±sqrt(val) if val is perfect square
            zsq = val
            z = int(zsq**0.5)
            candidates = []
            if z*z == zsq:
                candidates.append(z)
                if z != 0:
                    candidates.append(-z)
            for zc in candidates:
                # Check second equation y^2*z - x = 14
                if y*y*zc - x == 14:
                    # print solution immediately
                    print(f"Solution: x={x}, y={y}, z={zc}, sumsq={x*x + y*y + zc*zc}")
                    found.append((x,y,zc))
    if not found:
        print("No solutions found.")
        return
    # Find minimal sum of squares
    min_sumsq = min(x*x + y*y + z*z for (x,y,z) in found)
    print(f"Minimal sum of squares found: {min_sumsq}")
    for (x,y,z) in found:
        if x*x + y*y + z*z == min_sumsq:
            print(f"Minimal solution: x={x}, y={y}, z={z}")

if __name__ == "__main__":
    main()
```
