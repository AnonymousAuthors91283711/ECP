[write_program]
The problem states there exist real numbers \(x, a, c\) satisfying the system:
\[
\begin{cases}
20 + c = x \\
50 + c = a x \\
100 + c = a^2 x
\end{cases}
\]

We want to enumerate possible values of \(a\) meeting these equations.

Rewrite the system:
\[
\begin{aligned}
c &= x - 20 \\
50 + c &= a x \implies 50 + x - 20 = a x \implies 30 + x = a x \implies a = \frac{30 + x}{x} = 1 + \frac{30}{x} \\
100 + c &= a^2 x \implies 100 + x - 20 = a^2 x \implies 80 + x = a^2 x
\end{aligned}
\]

Using \(a = 1 + 30/x\), plug into the last equation:
\[
80 + x = \left(1 + \frac{30}{x}\right)^2 x = \left(1 + \frac{60}{x} + \frac{900}{x^2}\right) x = x + 60 + \frac{900}{x}
\]
Simplify:
\[
80 + x = x + 60 + \frac{900}{x} \implies 20 = \frac{900}{x} \implies x = \frac{900}{20} = 45
\]

Hence:
\[
a = 1 + \frac{30}{45} = 1 + \frac{2}{3} = \frac{5}{3}
\]

Letâ€™s enumerate \(x\) over integer divisors of 900 up to 100, compute candidate \(a\) values, and check if the equation holds exactly. This enumeration will help confirm the values and suggest a unique solution \(a = 5/3\).

```python
# Enumerate possible x candidates (divisors of 900), check constraints, print rational a exactly.
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5)+1):
        if n % i == 0:
            divs.append(i)
            if n // i != i:
                divs.append(n // i)
    return sorted(divs)

n = 900
print("Enumerating candidates for x dividing 900:")
for x in divisors(n):
    if x == 0:
        continue
    a = 1 + 30 / x
    left = 80 + x
    right = (a**2) * x
    # Check if left and right are very close
    if abs(left - right) < 1e-12:
        # Check if a is a rational with small denominator, print as fraction if possible
        from fractions import Fraction
        frac_a = Fraction(a).limit_denominator(1000)
        print(f"x={x}, a={frac_a} (approx {a:.6f})")

print("\nExtremal candidate for a (consistent solution): a = 5/3")
```
