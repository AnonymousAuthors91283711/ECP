[write_program]
The problem asks to find the infimum (greatest lower bound) of the expression 
\[
\sqrt{58 - 42 x} + \sqrt{149 - 140 \sqrt{1 - x^2}}
\]
for \( x \in [-1, 1] \).

To explore this and conjecture the minimum, we can enumerate values of \( x \) in \([-1, 1]\), compute the expression exactly if possible or at least numerically with high precision, and print out the values to guess the infimum.

```python
import math

# Enumerate x in [-1,1] with a small step, compute the expression and print values
# We'll recognize approximate minimal values and close to exact squares in expressions where possible
for i in range(-100, 101):
    x = i / 100
    t1 = 58 - 42 * x
    t2 = 1 - x*x
    # For numerical safety, ensure t2 nonnegative
    if t2 < 0:
        continue
    inner_sqrt = math.sqrt(t2)
    s1 = math.sqrt(t1)
    s2 = math.sqrt(149 - 140 * inner_sqrt)
    value = s1 + s2
    print(f"x={x:.2f}, value={value:.12f}")

# After enumerating, conjecture minimum based on printed results
# Could also print the minimal value found explicitly for convenience
min_val = None
min_x = None
for i in range(-100, 101):
    x = i / 100
    t1 = 58 - 42 * x
    t2 = 1 - x*x
    if t2 < 0:
        continue
    inner_sqrt = math.sqrt(t2)
    s1 = math.sqrt(t1)
    s2 = math.sqrt(149 - 140 * inner_sqrt)
    value = s1 + s2
    if (min_val is None) or (value < min_val):
        min_val = value
        min_x = x
print(f"Minimum value â‰ˆ {min_val:.12f} at x = {min_x:.2f}")
```
