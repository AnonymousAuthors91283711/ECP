[write_program]
The problem sets up a situation where 15 students have an initial average score of 80, and after one student's score changes, the new average becomes 81. We want to find the changed student's new score (an integer).

The equation is:
initial_avg * (students - 1) + new_score = final_avg * students

We can enumerate possible new_score values to see which satisfy this condition.

```python
# Given:
students = 15
initial_avg = 80
final_avg = 81

# The total score before change:
initial_total = initial_avg * students

# After one student's score changes, the new average is 81. Hence,
# new total = final_avg * students
new_total = final_avg * students

# Let x be the score of the changed student. Then:
# (initial_total - old_score) + x = new_total
# Since the old average is 80, assume the old_score was 80.
# So, replaced 80 with x raises average to 81.
# Therefore, total increases by (new_total - initial_total) = students*(81-80) = 15

# The new_score x satisfies:
# initial_total - old_score + x = new_total
# =>  initial_total - 80 + x = new_total
# =>  x = new_total - (initial_total - 80) = new_total - initial_total + 80 = 80 + 15 = 95

# But let's enumerate integer scores from 0 to 100 for the changed student to confirm.

for new_score in range(0, 101):
    computed_total = initial_total - initial_avg + new_score
    if computed_total == new_total:
        print(f"Possible new score: {new_score}")
```

