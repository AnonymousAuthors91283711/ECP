[write_program]
This problem involves permutations on the set {0,1,2,3,4} with some conditions, and asks to compute a fraction p = |T| / |S| in lowest terms and find a+b for that fraction a/b.

We will enumerate the permutations in S and T, count them, and then output the fraction and sum a+b.

```python
from math import gcd
from itertools import permutations

def main():
    elements = list(range(5))
    S = []
    T = []
    # S = permutations σ with σ(0) ≠ 0
    # T = permutations in S with σ(1) = 1

    for perm in permutations(elements):
        # σ(0) != 0
        if perm[0] != 0:
            S.append(perm)
            # σ(1) = 1
            if perm[1] == 1:
                T.append(perm)

    nS = len(S)
    nT = len(T)

    # calculate fraction p = nT / nS, reduce fraction
    a, b = nT, nS
    g = gcd(a, b)
    a //= g
    b //= g

    print(f"Parameters: n = 5")
    print(f"|S| = {nS}")
    print(f"|T| = {nT}")
    print(f"Fraction p = {a}/{b}")
    print(f"Sum a+b = {a+b}")

if __name__ == "__main__":
    main()
```
