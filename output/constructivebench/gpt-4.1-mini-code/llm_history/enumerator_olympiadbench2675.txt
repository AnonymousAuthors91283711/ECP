[write_program]
The problem defines a sequence \( a_n \) by \( a_1 = 1 \) and
\[
a_{n+1} = \lceil \sqrt{a_n^2 + 34} \rceil,
\]
with \( T=5 \), and asks for the least \( n \) such that \( a_n > 100 \times T = 500 \).

We'll enumerate \( a_n \) for \( n=1,2,\dots \) until \( a_n > 500 \), printing intermediate values. Then we print the least such \( n \).

```python
import math

def main():
    T = 5
    threshold = 100 * T
    a = [0, 1]  # 1-based indexing: a[1] = 1

    n = 1
    while a[-1] <= threshold:
        n += 1
        val = math.ceil(math.sqrt(a[-1]**2 + 34))
        a.append(val)
        print(f"a({n}) = {val}")
    print("Least n with a(n) >", threshold, "is", n)

if __name__ == "__main__":
    main()
```
