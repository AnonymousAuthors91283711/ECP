[write_program]
The problem defines a set \( S \) of integers \( n \) from 1 to 2024 such that \(\gcd(99+n, 99n+1) = 1\) and \(\gcd(101+n, 101n+1) = 1\). The task is to find the fraction of these integers that satisfy both gcd conditions.

We enumerate all \( n \) in \([1, 2024]\), compute the two gcds, and check the conditions. We print each \( n \) meeting the criteria immediately. Finally, we print the fraction \(\frac{|S|}{2024}\).

```python
from math import gcd

def main():
    count = 0
    total = 2024
    for n in range(1, total + 1):
        g1 = gcd(99 + n, 99 * n + 1)
        g2 = gcd(101 + n, 101 * n + 1)
        if g1 == 1 and g2 == 1:
            print(f"n = {n}: gcd(99+n, 99n+1) = {g1}, gcd(101+n, 101n+1) = {g2}")
            count += 1
    fraction = count / total
    print(f"Count = {count}, Fraction = {fraction:.6f}")

if __name__ == "__main__":
    main()
```
