[write_program]
The problem involves a functional inequality characterizing functions by comparing a weighted average of values versus midpoint values, potentially relating to convexity or concavity properties. To explore this, we enumerate sample functions and reals triplets (x, y, z) with x < y < z, checking the inequality condition and printing functions that satisfy it across sampled points.

```python
import math

# Check the inequality for given f and triples (x,y,z)
def check_inequality(f, points):
    for x, y, z in points:
        lhs = f(y) - ((z - y) / (z - x) * f(x) + (y - x) / (z - x) * f(z))
        rhs = f((x + z) / 2) - (f(x) + f(z)) / 2
        # We want lhs <= rhs for all triples
        if lhs > rhs + 1e-12:
            return False
    return True

# Generate test triples x < y < z in a small range
def generate_points():
    pts = []
    vals = [0, 0.5, 1, 1.5, 2]
    for i in range(len(vals)):
        for j in range(i+1, len(vals)):
            for k in range(j+1, len(vals)):
                pts.append((vals[i], vals[j], vals[k]))
    return pts

points = generate_points()

# Define candidate functions to test
functions = [
    ("constant 0", lambda x: 0),
    ("identity", lambda x: x),
    ("quadratic x^2", lambda x: x**2),
    ("negative quadratic -x^2", lambda x: -x**2),
    ("cubic x^3", lambda x: x**3),
    ("sqrt", lambda x: math.sqrt(x) if x >= 0 else float('nan')),
    ("sin", lambda x: math.sin(x)),
    ("exp", lambda x: math.exp(x)),
]

print("Testing functions for inequality (lhs <= rhs for all x<y<z):")
for name, f in functions:
    valid = check_inequality(f, points)
    if valid:
        print(f"Function '{name}' satisfies the inequality on sampled points")
```
This enumerates several common functions and evaluates the inequality on a fixed small set of points. The output highlights which functions pass the sampled test, supporting conjectures about the characterization of such functions (e.g., concave or convex).
