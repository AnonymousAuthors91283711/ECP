[write_program]
The problem is about finding the set of real numbers \( r \) such that there exists a complex number \( z \) which is not real and \( P(z) = r \), where \( P(z) = z^3 + z^2 - z + 2 \).

To investigate this computationally, we want to find real values taken by \( P \) at non-real complex numbers. We can parametrize \( z = x + yi \) with \( y \neq 0 \) and compute \( P(z) \), then check if the imaginary part is zero (making the value real). We will enumerate values over a grid of \( (x,y) \) and output all found real values.

We will sample a range of \( x \) and \( y \) (with \( y \neq 0 \)) and print values \( r = P(z) \) when real, i.e., imaginary part nearly zero.

```python
import math

def P(z):
    # z is complex number
    return z**3 + z**2 - z + 2

# We search for points z = x + yi with y != 0 and P(z) real
# We'll check a grid with x, y in [-2,2] sampling 0.1 steps, skip y=0
# Tolerance for imaginary part zero check: 1e-10

found = set()

print("Sampling P(z) for z = x + yi with y != 0 to find real values:")

for xi in range(-20, 21):
    x = xi * 0.1
    for yi in range(-20, 21):
        if yi == 0:
            continue
        y = yi * 0.1
        z = complex(x, y)
        val = P(z)
        if abs(val.imag) < 1e-10:
            r = val.real
            if r not in found:
                found.add(r)
                print(f"r = {r:.6f} from z = {x:.2f} + {y:.2f}i")

print("Enumerated real values achieved by P at non-real complex inputs.")
```
This program outputs approximate real values \( r \) and the corresponding \( z \) used. This helps conjecture the structure of the range of \( P \) on non-real inputs.
