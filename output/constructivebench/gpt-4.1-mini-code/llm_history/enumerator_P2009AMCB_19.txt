[write_program]
The problem involves prime values of the function 
\( f(n) = n^4 - 360 n^2 + 400 \) for positive integers \( n \).
We want to find all such \( n \) where \( f(n) \) is prime, and then sum those prime values.

The Python program below:
- Enumerates positive integers \( n \) up to a small limit (say 50) to test primality of \( f(n) \).
- Prints each prime value found immediately.
- Finally prints the sum of all prime values found.
- Uses a simple primality test optimized for the problem scale.

This will help conjecture the exact sum and the set of such primes for further proof.

```python
# Enumerate n for which f(n) = n^4 - 360*n^2 + 400 is prime, for 1 <= n <= 50
def is_prime(x):
    if x < 2: return False
    if x in (2,3): return True
    if x % 2 == 0: return False
    r = int(x**0.5)
    for i in range(3, r+1, 2):
        if x % i == 0:
            return False
    return True

primes = []
print("Checking f(n) = n^4 - 360*n^2 + 400 for n=1..50")
for n in range(1, 51):
    val = n**4 - 360*(n**2) + 400
    if val > 0 and is_prime(val):
        print(f"n = {n}, f(n) = {val} is prime")
        primes.append(val)

print("Sum of primes:", sum(primes))
```
