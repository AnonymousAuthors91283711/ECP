[write_program]
The problem is to find all triples \((x, y, z) \in \mathbb{R}^3\) satisfying:
\[
\begin{cases}
x y + z = 40 \\
x z + y = 51 \\
x + y + z = 19
\end{cases}
\]
We can try enumerating solutions by iterating over integer values of \( x \) and solving for \( y \) and \( z \). Since these are nonlinear equations, isolating variables and substitution is possible but might be complicated analytically, so enumeration can help conjecture the solutions.

We will:
- Iterate over integer \( x \) in a small range, e.g. \([-10, 30]\),
- For each \( x \), try integer \( y \) in an appropriate range,
- Compute \( z = 19 - x - y \),
- Check if the other two equations hold exactly or approximately,
- Print valid exact or near-exact solutions.

Let's implement this enumeration.

```python
# Enumerate integer solutions to the system:
# x*y + z = 40
# x*z + y = 51
# x + y + z = 19

def is_close(a,b,eps=1e-9):
    return abs(a-b) < eps

def main():
    # Rational or integer x,y
    # Using integers in range [-10,30] to find candidates quickly
    for x in range(-10,31):
        for y in range(-10,31):
            z = 19 - x - y
            # Check the two equations
            if x*y + z == 40 and x*z + y == 51:
                print(f"Exact solution: x={x}, y={y}, z={z}")
            else:
                # Check approximate equality for float computations
                lhs1 = x*y + z
                lhs2 = x*z + y
                if is_close(lhs1, 40) and is_close(lhs2, 51):
                    print(f"Approx solution: x={x}, y={y}, z={z}, lhs1={lhs1}, lhs2={lhs2}")

if __name__ == "__main__":
    main()
```
