[write_program]
The problem involves finding real numbers \(m, n\) satisfying one of two systems of equations:

1.
\[
\begin{cases}
3 n^2 + 1 = m^2 \\
m^2 + 1 = 2 (n + 1)^2
\end{cases}
\]

or

2.
\[
\begin{cases}
3 n^2 - 1 = m^2 \\
m^2 - 1 = 2 (n + 1)^2
\end{cases}
\]

The goal is to find \(m\) such that there exists \(n\) satisfying either system. I will enumerate candidate \(m, n\) in a reasonable bounded domain using rational or integer values scaled, then print solutions where the equalities hold exactly (or very close within floating precision, considering slight tolerance). Stream all found \(m\). This might help conjecture the form of the set of such \(m\).

Because \(m,n \in \mathbb{R}\), infinite values exist, so we try small integer or rational values for \(n\), compute \(m\) candidates and test conditions.

```python
# Enumerate candidates for n, compute m and test equations for both systems, print found m

import math

def close_eq(a, b, tol=1e-12):
    return abs(a - b) < tol

def test_systems():
    # We try n in a rational grid around small integers
    # n in [-10,10] step 0.5 (can be smaller for efficiency)
    for ni in range(-20, 21):
        n = ni / 2.0
        # System 1:
        lhs1 = 3 * n**2 + 1
        m_sq1 = lhs1
        if m_sq1 >= 0:
            m1 = math.sqrt(m_sq1)
            # check second equation: m^2 + 1 == 2*(n+1)^2
            rhs1 = 2 * (n + 1)**2
            if close_eq(m_sq1 + 1, rhs1):
                print(f"System1: n={n:.2f}, m={m1:.12f}")
            m1_neg = -m1
            if close_eq(m_sq1 +1, rhs1):
                print(f"System1: n={n:.2f}, m={m1_neg:.12f}")

        # System 2:
        lhs2 = 3 * n**2 - 1
        m_sq2 = lhs2
        if m_sq2 >= 0:
            m2 = math.sqrt(m_sq2)
            # check second equation: m^2 -1 == 2*(n+1)^2
            rhs2 = 2 * (n + 1)**2
            if close_eq(m_sq2 -1, rhs2):
                print(f"System2: n={n:.2f}, m={m2:.12f}")
            m2_neg = -m2
            if close_eq(m_sq2 -1, rhs2):
                print(f"System2: n={n:.2f}, m={m2_neg:.12f}")

if __name__ == "__main__":
    test_systems()
```

