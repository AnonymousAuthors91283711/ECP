[write_program]
The problem involves finding digits for the letters F,O,R,T,E,N,S,I,X,Y such that the word sums hold with unique digits (injective), with constraints F ≠ 0 and S ≠ 0, and the equation FORTY + TEN + TEN = SIXTY.

We will enumerate all digit assignments for these letters (0-9), ensure injectivity and the conditions, and check the sum. We'll print each SIXTY value found, and finally print the minimum and maximum solution found.

```python
# Enumerate digits for letters in FORTY + TEN + TEN = SIXTY with constraints:
# F,O,R,T,E,N,S,I,X,Y distinct digits, F≠0, S≠0
# FORTY + TEN + TEN = SIXTY
# Letter list: F,O,R,T,E,N,S,I,X,Y (10 letters)
from itertools import permutations

letters = 'FORTYESINX'  # missing Y, rearranged letters for clarity: 'F O R T Y E N S I X' 
# We need to find Y as well; add Y:
letters = 'FORTYESINX'
letters = list(letters)
letters.append('Y')
# remove duplicates
letters = list(dict.fromkeys(letters))  # should be all 10 letters

# permute digits 0-9 for these 10 letters
digits = range(10)

def get_num(mapping, word):
    return int(''.join(str(mapping[ch]) for ch in word))

min_sixteen = None
max_sixteen = None

for perm in permutations(digits, 10):
    mapping = dict(zip(letters, perm))
    # constraints
    if mapping['F'] == 0 or mapping['S'] == 0:
        continue
    # check injectivity given by permutations (already unique)

    F = mapping['F']
    O = mapping['O']
    R = mapping['R']
    T = mapping['T']
    Y = mapping['Y']
    E = mapping['E']
    N = mapping['N']
    S = mapping['S']
    I = mapping['I']
    X = mapping['X']

    FORTY = 10000 * F + 1000 * O + 100 * R + 10 * T + Y
    TEN = 100 * T + 10 * E + N
    SIXTY = 10000 * S + 1000 * I + 100 * X + 10 * T + Y

    if FORTY + TEN + TEN == SIXTY:
        print(f"SIXTY = {SIXTY}")
        if min_sixteen is None or SIXTY < min_sixteen:
            min_sixteen = SIXTY
        if max_sixteen is None or SIXTY > max_sixteen:
            max_sixteen = SIXTY

if min_sixteen is not None:
    print(f"Minimum SIXTY: {min_sixteen}")
    print(f"Maximum SIXTY: {max_sixteen}")
```
