[write_program]
The problem counts functions from Fin 10 â†’ Fin 2 (sequences of length 10 of 0/1) with no two consecutive zeros and no three consecutive ones. We'll enumerate all binary sequences of length 10 meeting these constraints and count them.

```python
# Enumerate all length-10 sequences of 0/1 with no two consecutive zeros and no three consecutive ones

def valid(seq):
    # Check no two consecutive zeros
    for i in range(len(seq)-1):
        if seq[i] == 0 and seq[i+1] == 0:
            return False
    # Check no three consecutive ones
    for i in range(len(seq)-2):
        if seq[i] == 1 and seq[i+1] == 1 and seq[i+2] == 1:
            return False
    return True

count = 0
n = 10
print("Enumerating sequences of length 10 without two consecutive zeros and three consecutive ones:")
for x in range(2**n):
    # Construct sequence from bits of x
    seq = [(x >> i) & 1 for i in reversed(range(n))]
    if valid(seq):
        count += 1
        print(f"Sequence #{count}: {''.join(map(str, seq))}")

print(f"Total valid sequences = {count}")
```
