[write_program]
The problem asks for the least positive real number α such that for all positive x,y,

(x+y)/2 ≥ α√(xy) + (1-α)√((x² + y²)/2).

We want to enumerate α values near 0 to 1 and test the inequality for some sample (x,y), looking for values of α that work for all positive x,y. Since we can't test all reals, we test a grid of (x,y) pairs.

We test some rational α values with a fine step and some sample (x,y), print each α that satisfies the inequality on all tested pairs, then print the smallest found.

```python
from math import sqrt

# Sample positive x,y values to test strict positivity and variation
samples = [
    (1e-3, 1e-3), (1,1), (1,2), (2,1), (10,10), (0.5,2), (2,0.5), (1e-2,1e2)
]

def check_alpha(a):
    for x,y in samples:
        lhs = (x + y)/2
        rhs = a*sqrt(x*y) + (1 - a)*sqrt((x**2 + y**2)/2)
        if lhs < rhs - 1e-15:  # allow tiny floating tolerance
            return False
    return True

found = []
step = 0.01
a = 0.0
while a <= 1.0:
    if check_alpha(a):
        found.append(a)
        print(f"α = {a:.2f} satisfies the inequality for all samples.")
    a += step

if found:
    min_a = min(found)
    print(f"\nLeast α found (approx): {min_a:.2f}")
else:
    print("No α found in [0,1] satisfies the inequality for all samples.")
```

