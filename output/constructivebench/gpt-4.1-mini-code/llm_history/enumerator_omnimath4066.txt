[write_program]
The problem relates to double factorials and divisibility conditions: for given n ≥ k, find pairs (n, k) such that k!! * (n-k)!! divides n!!. We enumerate pairs with small parameters, computing exact double factorials and checking divisibility, printing all such pairs to conjecture the structure.

```python
def double_factorial(m):
    # Compute m!! = product of m * (m-2) * (m-4) * ... down to 1 or 2
    if m <= 0:
        return 1
    result = 1
    while m > 0:
        result *= m
        m -= 2
    return result

max_n = 20  # limit for efficiency

print("Enumerating (n,k) with n >= k and k!!*(n-k)!! divides n!! for n,k ≤ 20:")

for n in range(0, max_n + 1):
    for k in range(0, n + 1):
        kk = double_factorial(k)
        n_k_k = double_factorial(n - k)
        n_f = double_factorial(n)
        prod = kk * n_k_k
        if prod != 0 and n_f % prod == 0:
            print(f"(n={n}, k={k}) : {k}!!={kk}, (n-k)!!={n_k_k}, n!!={n_f}, divisible")

# Among found pairs, output the smallest n with maximal k that works as example:
# (But here, no extremes requested explicitly.)
```
