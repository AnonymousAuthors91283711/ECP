[write_program]
The problem defines a set of numbers "forms" involving four types:
1. sums of consecutive integers from 1 to k,
2. prime powers p^k,
3. prime plus one (p+1),
4. product of two distinct primes p*q.

We want to find the smallest positive integer n that is NOT of any of these forms. The code will:
- Enumerate numbers from 1 upwards (say up to 100 for a start).
- For each number, check if it fits any of the four forms.
- Print numbers that do not satisfy any form.
- Finally print the smallest such number.

To maximize efficiency:
- Precompute all sums of consecutive integers (1 to k),
- For prime-related checks, generate primes up to a bound,
- Prefer exact checks over approximations.

```python
# Enumerate numbers up to 100 to find those NOT in any of the 4 forms:
# 1) n = sum of 1..k = k(k+1)/2
# 2) n = p^k, p prime, k>=1
# 3) n = p+1, p prime, p>1
# 4) n = p*q, p,q distinct primes >1

def is_prime(x):
    if x < 2:
        return False
    if x==2:
        return True
    if x%2==0:
        return False
    r=int(x**0.5)
    for i in range(3,r+1,2):
        if x%i==0:
            return False
    return True

def prime_list(limit):
    return [p for p in range(2,limit+1) if is_prime(p)]

def sums_upto(max_n):
    sums = set()
    k = 1
    while True:
        s = k*(k+1)//2
        if s > max_n:
            break
        sums.add(s)
        k += 1
    return sums

def prime_powers(primes, max_n):
    pp = set()
    for p in primes:
        val = p
        while val <= max_n:
            pp.add(val)
            val *= p
    return pp

def prime_plus_one(primes, max_n):
    return set(p+1 for p in primes if p+1 <= max_n)

def product_two_distinct_primes(primes, max_n):
    prods = set()
    n = len(primes)
    for i in range(n):
        for j in range(i+1,n):
            prod = primes[i]*primes[j]
            if prod <= max_n:
                prods.add(prod)
    return prods

def main():
    MAX_N = 100
    primes = prime_list(MAX_N)
    sums = sums_upto(MAX_N)
    pp = prime_powers(primes, MAX_N)
    p_plus1 = prime_plus_one(primes, MAX_N)
    prod2p = product_two_distinct_primes(primes, MAX_N)
    forms = sums | pp | p_plus1 | prod2p
    
    # Print all n>0 up to MAX_N not in forms
    candidates = []
    for n in range(1, MAX_N+1):
        if n not in forms:
            print(f"Candidate not in forms: {n}")
            candidates.append(n)
    
    if candidates:
        ans = min(candidates)
        print(f"Smallest n>0 not in forms: {ans}")

if __name__=="__main__":
    main()
```
