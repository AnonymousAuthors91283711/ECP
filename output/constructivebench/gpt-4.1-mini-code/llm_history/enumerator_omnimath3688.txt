[write_program]
The problem is to find all numbers \( n \) with \( 0 < n < 1000 \) such that \(\left(\text{sum_of_digits}(n)\right)^3 = n^2.\)  

We will write a Python program that:
- Iterates over \( n \in [1,999] \).
- Computes the sum of digits of \( n \).
- Checks if cube of this sum equals \( n^2 \).
- Prints each such \( n \) immediately upon discovery.
- Finally prints all discovered numbers as the answer set.

```python
def sum_of_digits(n):
    return sum(int(d) for d in str(n))

results = []
for n in range(1, 1000):
    s = sum_of_digits(n)
    if s**3 == n**2:
        print(n)
        results.append(n)

print("Answer set:", results)
```

