[write_program]
The problem is to find the smallest natural number \( n \) such that there exist \( a, b, c \) with \( a < b < c < n \) and \( a + b + c + n = 100 \).

We enumerate tuples \( (a, b, c, n) \) with \( a < b < c < n \), summing to 100, starting from small \( n \), and print all possible \( n \). Then we identify the minimum \( n \).

```python
# Find minimal n such that there exist a,b,c with a<b<c<n and a+b+c+n=100.

def main():
    target = 100
    # Start from n=4 because we need a < b < c < n, so n>c>...>0
    for n in range(4, target):
        found_for_n = False
        max_a = n - 3  # a < b < c < n => a ≤ n-4 at most (to leave room)
        # a < b < c < n, so a ≤ n-4, b ≤ n-3, c ≤ n-1 but c < n
        for a in range(max_a + 1):
            # b > a and b < n
            for b in range(a + 1, n):
                # c > b and c < n
                for c in range(b + 1, n):
                    if a + b + c + n == target:
                        print(f"Found n={n}, a={a}, b={b}, c={c}")
                        found_for_n = True
        if found_for_n:
            print(f"Candidates for n: {n}")

    # The minimal n is the smallest printed 'Candidates for n' during the loop.

if __name__ == "__main__":
    main()
```
