[write_program]
The problem is to find triples of positive real numbers \((a,b,c)\) satisfying three equations involving floors:
\[
\lfloor a \rfloor \cdot b \cdot c = 3, \quad a \cdot \lfloor b \rfloor \cdot c = 4, \quad a \cdot b \cdot \lfloor c \rfloor = 5.
\]

We want to enumerate candidate triples \((a,b,c)\) that satisfy these. To make this practical:
- Enumerate small integer values for \(\lfloor a \rfloor = A\), \(\lfloor b \rfloor = B\), \(\lfloor c \rfloor = C\).
- For each triple \((A,B,C)\), solve for \(a,b,c\) in terms of \(A,B,C\):
  \[
  \begin{cases}
  A \cdot b \cdot c = 3 \\
  a \cdot B \cdot c = 4 \\
  a \cdot b \cdot C = 5
  \end{cases}
  \]
- From first, \(b c = \frac{3}{A}\).
- From second, \(a c = \frac{4}{B}\).
- From third, \(a b = \frac{5}{C}\).

Multiplying all three equations:
\[
(a b) (b c) (a c) = \frac{5}{C} \cdot \frac{3}{A} \cdot \frac{4}{B} = a^2 b^2 c^2,
\]
so,
\[
(a b c)^2 = \frac{60}{A B C}.
\]
Thus,
\[
a b c = \sqrt{\frac{60}{A B C}}.
\]

Now,
\[
b c = \frac{3}{A}, \quad a c = \frac{4}{B}, \quad a b = \frac{5}{C}.
\]

Using \(a b c = \sqrt{\frac{60}{A B C}}\), we can solve each variable:
\[
a = \frac{a b c}{b c} = \frac{\sqrt{\frac{60}{A B C}}}{\frac{3}{A}} = \frac{A}{3} \sqrt{\frac{60}{A B C}}, 
\]
\[
b = \frac{a b c}{a c} = \frac{\sqrt{\frac{60}{A B C}}}{\frac{4}{B}} = \frac{B}{4} \sqrt{\frac{60}{A B C}},
\]
\[
c = \frac{a b c}{a b} = \frac{\sqrt{\frac{60}{A B C}}}{\frac{5}{C}} = \frac{C}{5} \sqrt{\frac{60}{A B C}}.
\]

We check if \( \lfloor a \rfloor = A, \lfloor b \rfloor = B, \lfloor c \rfloor = C\).

We enumerate integers \(A,B,C\) from 1 up to some threshold, compute \(a,b,c\), verify floors, and print candidates.

```python
import math

# Enumerate small positive integer floor values for A,B,C
max_floor = 10

for A in range(1, max_floor+1):
    for B in range(1, max_floor+1):
        for C in range(1, max_floor+1):
            denom = A * B * C
            if denom == 0:
                continue
            abc = math.sqrt(60 / denom)
            a = (A / 3) * abc
            b = (B / 4) * abc
            c = (C / 5) * abc

            # Check positivity and floor conditions
            if a <= 0 or b <= 0 or c <= 0:
                continue

            if math.floor(a) == A and math.floor(b) == B and math.floor(c) == C:
                print(f"A={A}, B={B}, C={C} => a={a:.6f}, b={b:.6f}, c={c:.6f}")
```

This code enumerates candidate triples \((a,b,c)\) and prints those whose floors match \((A,B,C)\), thus satisfying the problem's constraints.
