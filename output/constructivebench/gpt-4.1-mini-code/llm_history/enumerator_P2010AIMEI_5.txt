[write_program]
The problem is to find all quadruples of natural numbers \( (a,b,c,d) \) satisfying

\[
a > b > c > d, \quad a + b + c + d = 2010, \quad a^2 - b^2 + c^2 - d^2 = 2010.
\]

We want to enumerate all such quadruples. To assist in conjecturing the number of solutions, we print each quadruple found. Since the sum is large, to keep computations reasonable, we will use some optimizations and early breaks.

```python
# Enumerate quadruples (a,b,c,d) of natural numbers satisfying:
# a > b > c > d, a+b+c+d=2010 and a^2 - b^2 + c^2 - d^2 = 2010.
# Print all such quadruples immediately when found.
# Then print the total count.

def main():
    S = 2010
    count = 0
    # Since a > b > c > d >=1 and sum=2010, maximum a can be at most 2010-1-2-3=2004 approx.
    # We optimize inner loops by bounds from sum and inequalities.
    for a in range(S - 3, 3, -1):
        # b < a and b > c > d
        max_b = min(a - 1, S - a - 2)
        for b in range(max_b, 2, -1):
            # Now c > d and c < b, sum is a+b+c+d =2010
            # d >=1 and d < c < b < a
            min_c = 2  # c at least 2 to have c > d >=1
            max_c = min(b-1, S - a - b - 1)
            for c in range(max_c, min_c-1, -1):
                d = S - (a + b + c)
                if d < 1 or d >= c:
                    continue
                # Check difference of squares condition
                lhs = a*a - b*b + c*c - d*d
                if lhs == S:
                    print(f"a={a}, b={b}, c={c}, d={d}")
                    count += 1
    print("Total count:", count)

if __name__ == "__main__":
    main()
```
This will print all solutions as soon as they are found and then print the total number found. This helps conjecturing the true answer without hardcoding it.
