[write_program]
The problem asks for the least positive integer \( k \) such that the sum of squares \( \sum_{i=0}^k i^2 \) is divisible by 200. We will write a Python program to enumerate values of \( k \), compute the sum of squares modulo 200, and print all \( k \) where the sum is congruent to 0 modulo 200. Since the sum of squares formula is \( \frac{k(k+1)(2k+1)}{6} \), we will use modular arithmetic to efficiently check divisibility and output candidates as soon as they are found.

```python
# Enumerate least k>0 such that sum_{i=0}^k i^2 is divisible by 200
# sum_{i=0}^k i^2 = k(k+1)(2k+1)/6
# We check modulo 200, print each k where divisible, and track minimum.

def sum_squares_mod(k, mod):
    # Using formula: k(k+1)(2k+1)/6 modulo mod
    numerator = k * (k + 1) * (2 * k + 1)
    # Since 6 divides numerator for every integer k, check divisibility mod 200 carefully
    # We'll perform division mod 200 by multiplying by modular inverse of 6 mod 200 if exists.
    # 6 and 200 share gcd=2, no inverse mod 200. So divide numerator by 6 and then mod 200.
    # Because numerator is divisible by 6, let's do integer division first.
    val = numerator // 6
    return val % mod

def main():
    mod = 200
    limit = 10000  # limit search to avoid infinite loops; can increase if needed
    answers = []
    for k in range(1, limit + 1):
        s = sum_squares_mod(k, mod)
        if s == 0:
            print(k)
            answers.append(k)
            # To obey requirements, we keep printing all candidates
    if answers:
        print("Minimum k:", min(answers))
    else:
        print("No k found up to", limit)

if __name__ == "__main__":
    main()
```
