[write_program]
The problem involves sequences \(a : \{0,1,\ldots,6\} \to \{-1,0,1\}\) (since it requires \(-1 \leq a_i \leq 1\)) and counting how many sequences satisfy \(\sum_{i=0}^5 a_i a_{i+1} = 4.\)

The goal is to enumerate all such sequences and count them. We'll do a brute force search over all \(3^7 = 2187\) sequences, which is feasible, then print sequences meeting the sum condition, and finally count them.

```python
# Enumerate sequences a of length 7 with entries in {-1,0,1},
# count how many satisfy sum_{i=0}^5 a_i * a_{i+1} = 4.

def main():
    from itertools import product
    vals = [-1,0,1]
    count = 0
    for seq in product(vals, repeat=7):
        s = sum(seq[i]*seq[i+1] for i in range(6))
        if s == 4:
            print(f"Sequence: {seq}, Sum = {s}")
            count += 1
    print(f"Total sequences with sum = 4: {count}")

if __name__ == "__main__":
    main()
```
