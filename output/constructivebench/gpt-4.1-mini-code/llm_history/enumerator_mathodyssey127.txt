[write_program]
We want to explore values of \( p \in (0,1) \) such that 
\[
P_1 = \binom{5}{1} p^1 (1-p)^4 \quad \text{and} \quad P_2 = \binom{5}{2} p^2 (1-p)^3
\]
satisfy \( P_1 = P_2 \neq 0 \), and then find the corresponding \( P_3 = \binom{5}{3} p^3 (1-p)^2 \).

We enumerate sample values of \( p \) that satisfy \( P_1 = P_2 \) exactly or approximately and print \( P_3 \). Since this equation is polynomial, we can solve it exactly. Then we print all valid solutions and find \( P_3 \).

```python
from math import comb, isclose

# Binomial coefficients for n=5
C1 = comb(5, 1)  # 5
C2 = comb(5, 2)  # 10
C3 = comb(5, 3)  # 10

def P(k, p):
    return comb(5, k) * p**k * (1 - p)**(5 - k)

# Solve P1 = P2 means:
# 5 * p * (1-p)^4 = 10 * p^2 * (1-p)^3
# Simplify (divide both sides by p*(1-p)^3, p in (0,1) so no division by zero):
# 5 * (1-p) = 10 * p
# 5 - 5p = 10p
# 5 = 15p
# p = 1/3

p = 1/3  # exact solution for P1=P2 in (0,1)
P1 = P(1, p)
P2 = P(2, p)
P3 = P(3, p)

print(f"Found p={p:.6f} with P1={P1:.6f}, P2={P2:.6f}, P3={P3:.6f}")

# Check if P1 = P2 and P1 != 0
if isclose(P1, P2) and P1 != 0:
    print(f"P3 = {P3:.6f}")

# Also test a few other p values near 1/3 to confirm uniqueness
for test_p in [0.3, 0.333, 0.34]:
    P1t = P(1, test_p)
    P2t = P(2, test_p)
    if isclose(P1t, P2t, rel_tol=1e-5) and P1t != 0:
        P3t = P(3, test_p)
        print(f"p={test_p:.6f} -> P1={P1t:.6f}, P2={P2t:.6f}, P3={P3t:.6f}")
```
This finds the unique \( p \) (around 0.3333) satisfying \( P_1 = P_2 \neq 0 \), and outputs the corresponding \( P_3 \).
