[write_program]
The problem is to find all triples of integers (a, b, c) such that:

a^2 + b^2 + c^2 = a^2 * b^2.

We need to enumerate possible integer triples (a, b, c), check this equality, and print the triples that satisfy it, up to some reasonable bounds to keep the output short.

We'll pick small |a|,|b| ≤ 20 and |c| ≤ 50 to find meaningful triples.

```python
# Enumerate integer triples (a,b,c) with |a|,|b| ≤ 20 and |c| ≤ 50 satisfying:
# a^2 + b^2 + c^2 = a^2 * b^2.

max_ab = 20
max_c = 50

for a in range(-max_ab, max_ab+1):
    for b in range(-max_ab, max_ab+1):
        lhs = a*a + b*b
        if lhs == 0:  # a=b=0, LHS = 0 + c^2 = 0 * 0 = 0, so c^2=0 => c=0
            for c in range(-max_c, max_c+1):
                if c*c == 0:
                    print(f"(a,b,c)=({a},{b},{c}) satisfies a^2 + b^2 + c^2 = a^2 * b^2")
            continue
        rhs = (a*a)*(b*b)
        # c^2 = rhs - lhs, so c^2 must be ≥ 0 and a perfect square.
        diff = rhs - lhs
        if diff < 0:
            continue
        # Check if diff is a perfect square
        c_sq = diff
        c_int = int(c_sq**0.5)
        if c_int*c_int == c_sq:
            # Two solutions for c: ±c_int
            print(f"(a,b,c)=({a},{b},{c_int}) satisfies a^2 + b^2 + c^2 = a^2 * b^2")
            if c_int != 0:
                print(f"(a,b,c)=({a},{b},{-c_int}) satisfies a^2 + b^2 + c^2 = a^2 * b^2")
```

