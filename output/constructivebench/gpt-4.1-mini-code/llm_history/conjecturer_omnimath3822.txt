[conjecture_answer] Formal Problem Statement: import Mathlib

open Function

abbrev omnimath3822_answer : ℕ := sorry
def is_knight_move (a b : Fin 5 × Fin 5) : Prop :=
  let (x₁, y₁) := a
  let (x₂, y₂) := b
  (x₁ - x₂ = 1 ∧ y₁ - y₂ = 3) ∨ (x₁ - x₂ = 1 ∧ y₁ - y₂ = -3) ∨
  (x₁ - x₂ = 3 ∧ y₁ - y₂ = 1) ∨ (x₁ - x₂ = 3 ∧ y₁ - y₂ = -1) ∨
  (x₁ - x₂ = -1 ∧ y₁ - y₂ = 3) ∨ (x₁ - x₂ = -1 ∧ y₁ - y₂ = -3) ∨
  (x₁ - x₂ = -3 ∧ y₁ - y₂ = 1) ∨ (x₁ - x₂ = -3 ∧ y₁ - y₂ = -1)

theorem omnimath3822 :
  IsGreatest {n : ℕ | ∃ (l : List (Fin 5 × Fin 5)), 
    l.length = n ∧ 
    l.Nodup ∧ 
    ∀ i : Fin (l.length - 1), is_knight_move (l.get ⟨i.1, Nat.lt_of_lt_of_le i.2 (Nat.sub_le _ _)⟩) 
                               (l.get ⟨i.1 + 1, by omega⟩)} 
  omnimath3822_answer := by sorry. Enumerated answers: New max length 9: [(0, 0), (1, 3), (2, 0), (3, 3), (4, 0), (1, 1), (2, 4), (3, 1), (4, 4)]
Max length 9 also: [(0, 0), (1, 3), (2, 0), (3, 3), (4, 0), (1, 1), (2, 4), (3, 1), (0, 2)]
Max length 9 also: [(0, 0), (1, 3), (2, 0), (3, 3), (0, 4), (1, 1), (2, 4), (3, 1), (4, 4)]
Max length 9 also: [(0, 0), (1, 3), (2, 0), (3, 3), (0, 4), (1, 1), (2, 4), (3, 1), (0, 2)]
Max length 9 also: [(0, 0), (1, 3), (2, 0), (3, 3), (0, 2), (3, 1), (2, 4), (1, 1), (0, 4)]
Max length 9 also: [(0, 0), (1, 3), (2, 0), (3, 3), (0, 2), (3, 1), (2, 4), (1, 1), (4, 2)]
Max length 9 also: [(0, 0), (1, 3), (2, 0), (3, 3), (0, 2), (3, 1), (2, 4), (1, 1), (4, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (2, 4), (1, 1), (0, 4), (3, 3), (4, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (2, 4), (1, 1), (0, 4), (3, 3), (2, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (2, 4), (1, 1), (0, 4), (3, 3), (0, 2)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (2, 4), (1, 1), (4, 0), (3, 3), (2, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (2, 4), (1, 1), (4, 0), (3, 3), (0, 4)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (2, 4), (1, 1), (4, 0), (3, 3), (0, 2)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (0, 2), (3, 3), (4, 0), (1, 1), (2, 4)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (0, 2), (3, 3), (4, 0), (1, 1), (0, 4)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (0, 2), (3, 3), (4, 0), (1, 1), (4, 2)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (0, 2), (3, 3), (0, 4), (1, 1), (2, 4)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (0, 2), (3, 3), (0, 4), (1, 1), (4, 2)]
Max length 9 also: [(0, 0), (1, 3), (4, 4), (3, 1), (0, 2), (3, 3), (0, 4), (1, 1), (4, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 2), (1, 1), (2, 4), (3, 1), (0, 2), (3, 3), (4, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 2), (1, 1), (2, 4), (3, 1), (0, 2), (3, 3), (2, 0)]
Max length 9 also: [(0, 0), (1, 3), (4, 2), (1, 1), (2, 4), (3, 1), (
Output cuts off here.. Expected Answer Type: ℕ
<<<9>>>