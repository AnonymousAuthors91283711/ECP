[write_program]
The problem involves two curves defined by equations relating x and y, and the goal is to find all x-values for which there exists a y such that both equations hold simultaneously. Then, we want the sum of all such x-values.

To help conjecture the answer, we'll:
- Enumerate x-values in a reasonable integer range.
- For each x, solve each equation for y and check if any y satisfies both equations.
- Collect all such x-values and print them immediately.
- Finally, print their sum.

This approach assumes solutions have integer or simple rational x to keep enumeration feasible and output concise, given the complexity of implicit equations.

```python
# Enumerate possible x in a range and check if exists y satisfying both equations
# curve1: x^2 = x + y + 4  => y = x^2 - x -4
# curve2: y^2 = y -15x + 36

def curve1_y(x):
    # return y from curve1
    return x**2 - x -4

def check_curve2(y, x):
    # check if y satisfies curve2: y^2 = y -15x +36
    return abs(y**2 - (y - 15*x + 36)) < 1e-12

def main():
    solutions_x = []
    # Search over integer x from -10 to 10 (adjust as needed)
    for x in range(-10, 11):
        y = curve1_y(x)
        if check_curve2(y, x):
            print(f"Found x = {x} with y = {y:.6f}")
            solutions_x.append(x)
    if solutions_x:
        total = sum(solutions_x)
        print(f"Sum of all such x: {total}")

if __name__ == "__main__":
    main()
```
