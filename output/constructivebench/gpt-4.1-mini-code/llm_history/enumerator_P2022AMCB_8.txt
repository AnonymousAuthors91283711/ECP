[write_program]
Given the equation \( y^4 + 1 = x^4 + 2 y^2 \), we want to find all real pairs \((x, y)\) satisfying it. Re-arranging:

\[
y^4 - 2y^2 + 1 = x^4 \quad \Rightarrow \quad (y^2 - 1)^2 = x^4.
\]

Since \(x^4 \geq 0\), this implies:

\[
x^4 = (y^2 - 1)^2.
\]

Taking square roots,

\[
x^2 = \pm (y^2 - 1).
\]

Since \(x^2 \geq 0\), only the positive sign is possible:

\[
x^2 = (y^2 - 1)^2 \geq 0,
\]

and thus,

\[
x = \pm |y^2 - 1|.
\]

We will enumerate pairs \((x, y)\) for various integer and rational values of \(y\) to illustrate solutions, printing exact values when possible.

```python
# Enumerate pairs (x,y) solving y^4 + 1 = x^4 + 2 y^2
# Equivalently (y^2 - 1)^2 = x^4, so x^2 = |y^2 - 1|
# For each y, x = ± |y^2 - 1|^{1/2} = ± |y^2 - 1|^{1/2}.

import math

def is_perfect_square(n):
    # Check if n is perfect square integer
    if n < 0:
        return False
    r = int(math.isqrt(n))
    return r*r == n

print("Enumerating solutions (x,y) with y integer in [-5,5]:")
for y_int in range(-5,6):
    y2 = y_int**2
    val = abs(y2 -1)
    # Check if val is perfect square for exact x values
    if is_perfect_square(val):
        x_val = int(math.isqrt(val))
        print(f"y={y_int}: x = ±{x_val}, solutions: ({x_val},{y_int}), ({-x_val},{y_int})")
    else:
        # Print approximate float sqrt with 3 decimals
        x_val_f = math.sqrt(val)
        print(f"y={y_int}: x = ±{x_val_f:.3f}, approx solutions: (±{x_val_f:.3f},{y_int})")

# Enumerate some rational y = n/d with small denominators to find more exact square values
print("\nEnumerating solutions with y = n/d for small n,d in [-3,3], d>0:")
for d in range(1,4):
    for n in range(-3,4):
        y = n/d
        y2 = y*y
        val = abs(y2 - 1)
        # val is a fraction, check if val numerator and denominator make a perfect square fraction
        # val = (num/den) where num = abs(n^2*d^2 - d^4), den = d^4
        num = abs(n*n*d*d - d*d*d*d)
        den = d*d*d*d
        if den == 0:
            continue
        # Check if num and den are perfect squares
        if is_perfect_square(num) and is_perfect_square(den):
            x_num = int(math.isqrt(num))
            x_den = int(math.isqrt(den))
            # Reduced fraction possibly, but just print as is
            print(f"y={n}/{d}: x = ±{x_num}/{x_den}, solutions: (±{x_num}/{x_den},{n}/{d})")
        else:
            x_val_f = math.sqrt(val)
            print(f"y={n}/{d}: x = ±{x_val_f:.3f}, approx solutions: (±{x_val_f:.3f},{n}/{d})")
```

