[write_program]
The problem seems to be about finding the least natural number \( n \) such that 2004 belongs to the set \( S(n) = \{ m \mid m \geq 1 \text{ and } \exists k \geq 1 \text{ with } m = k \cdot (n+1) \} \). In other words, 2004 is a multiple of \( n+1 \).

So the question reduces to: For which \( n \), \( n+1 \) divides 2004? We want the smallest such \( n \).

I will write a Python program to enumerate all \( n \) with \( 1 \leq n \leq 2004 \), check if \( n+1 \) divides 2004, and print all \( n \) that satisfy this. Finally, print the smallest one.

```python
# Enumerate n where n+1 divides 2004 and print them, then print the minimum n

def divisors(n):
    # Get all divisors of n
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            if i != n // i:
                divs.append(n // i)
    return sorted(divs)

def main():
    number = 2004
    divs = divisors(number)
    print(f"Divisors of {number}: {divs}")
    candidates = [d - 1 for d in divs if d -1 >= 0]
    print("Candidates n such that n+1 divides 2004:")
    for c in sorted(candidates):
        print(c)
    print(f"Minimum n: {min(candidates)}")

if __name__ == "__main__":
    main()
```
