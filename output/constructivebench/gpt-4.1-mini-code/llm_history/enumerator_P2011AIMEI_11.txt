[write_program]
The problem involves powers of 2 modulo 1000 and summing the distinct residues that appear. We want to find all distinct values of 2^n mod 1000 for n â‰¥ 0, then sum those values, and determine the sum modulo 1000.

The program will:
- Enumerate powers of 2 modulo 1000.
- Detect when the cycle begins to repeat.
- Collect distinct residues.
- Sum them up and output the sum modulo 1000.

This will help conjecture the exact sum modulo 1000, which probably corresponds to the given P2011AIMEI_11_answer.

```python
# Enumerate powers of 2 modulo 1000, find distinct residues,
# sum them and output the sum modulo 1000.

def main():
    mod = 1000
    seen = set()
    powers = []
    val = 1
    idx = 0
    while val not in seen:
        seen.add(val)
        powers.append(val)
        val = (val * 2) % mod
        idx += 1
    print("Distinct residues (2^n mod 1000) found:")
    for x in powers:
        print(x)
    total = sum(powers)
    print("Sum of distinct residues:", total)
    print("Sum modulo 1000:", total % 1000)

if __name__ == "__main__":
    main()
```
