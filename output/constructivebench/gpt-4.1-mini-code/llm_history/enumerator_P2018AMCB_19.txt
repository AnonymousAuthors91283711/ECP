[write_program]
This problem asks to find the least number \( d \) such that there exists a 4-digit even number \( n \) divisible by 323, and 323 and \( d \) are consecutive divisors of \( n \) when sorted in ascending order.

To assist in conjecturing the answer:
- We will enumerate 4-digit even multiples of 323.
- For each such \( n \), we find all divisors, sort them, locate 323 and output the next divisor \( d \).
- We print all candidate \( d \) values and finally print the least candidate found.

```python
def divisors(x):
    divs = []
    i = 1
    while i*i <= x:
        if x % i == 0:
            divs.append(i)
            if i != x // i:
                divs.append(x // i)
        i += 1
    return sorted(divs)

multiples = []
candidates = set()

# 4-digit even numbers divisible by 323: n = 323*m, 1000 <= n < 10000, n even
# Since 323 is odd, for n to be even, m must be even.
m_start = (1000 + 322) // 323  # ceil(1000/323)
m_end = (9999) // 323
for m in range(m_start, m_end + 1):
    if m % 2 == 0:  # ensure n even
        n = 323 * m
        if n < 1000 or n >= 10000:
            continue
        divs = divisors(n)
        # find index of 323 in divs
        try:
            k = divs.index(323)
            if k + 1 < len(divs):
                d = divs[k+1]
                print(f"n={n}, neighbors: 323 and {d}")
                candidates.add(d)
        except ValueError:
            pass

if candidates:
    least = min(candidates)
    print("Least d found:", least)
else:
    print("No candidates found")
```
