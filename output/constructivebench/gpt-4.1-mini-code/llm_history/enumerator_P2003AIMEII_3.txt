[write_program]
The problem counts functions \(w: \{0,\ldots,6\} \to \{0,1,2\}\) such that no adjacent pair \((w(i), w(i+1))\) is in the set \{(0,1), (1,2), (2,0)\}. We want to enumerate all such 7-length sequences over \{0,1,2\} that avoid these forbidden transitions.

We will do a backtracking search over sequences of length 7 with values in \{0,1,2\}, skipping sequences with any forbidden adjacent pairs. We print each acceptable sequence immediately. Since printing all is too large, we will just count them and print each partial solution as we enumerate. Finally, print the total count.

```python
def main():
    from sys import stdout
    forbidden = {(0,1), (1,2), (2,0)}
    results = []
    count = 0

    def backtrack(seq):
        nonlocal count
        if len(seq) == 7:
            # Found a valid sequence
            count += 1
            stdout.write(f"{seq}\n")
            return
        for nxt in range(3):
            if len(seq)==0 or (seq[-1], nxt) not in forbidden:
                backtrack(seq + [nxt])

    backtrack([])

    print(f"Total valid sequences: {count}")

if __name__ == "__main__":
    main()
```
