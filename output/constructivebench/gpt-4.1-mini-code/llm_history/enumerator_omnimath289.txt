[write_program]
The problem is to find all triples of primes (p, q, r) such that:

p/q - 4/(r+1) = 1

where p, q, r are primes and p, q, r are natural numbers.

Rearranged:

p/q = 1 + 4/(r+1) = (r+1 + 4) / (r+1) = (r + 5) / (r + 1)

Hence:

p/q = (r + 5) / (r + 1)

Cross-multiplied:

p * (r + 1) = q * (r + 5)

Given p,q,r primes, we want to find all such integer triples satisfying this equality. Since p,q,r primes are positive integers, and (r + 1) and (r + 5) are positive integers (with r prime), we attempt to find small prime r, then search for p and q primes to satisfy the equation.

We can attempt all small prime r up to some limit, say 50, then for each r, try small primes p and q up to some limit and check the equality.

I will enumerate p,q,r as primes up to 100, check the equality, and print each triple immediately when found.

```python
# Enumerate triples (p, q, r) of primes with p/q - 4/(r+1) = 1
# i.e. p/q = (r+5)/(r+1), and all of p,q,r prime
# To keep output manageable, check r up to 50, p,q up to 100

def is_prime(n):
    if n < 2:
        return False
    if n in (2, 3):
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(n**0.5)+1, 2):
        if n % i == 0:
            return False
    return True

def primes_up_to(n):
    return [x for x in range(2, n+1) if is_prime(x)]

def main():
    max_r = 50
    max_pq = 100
    r_primes = [r for r in primes_up_to(max_r)]
    p_primes = primes_up_to(max_pq)
    q_primes = primes_up_to(max_pq)
    print("Enumerating triples (p,q,r) with p/q - 4/(r+1) = 1 and p,q,r prime:")
    for r in r_primes:
        numerator = r + 5
        denominator = r + 1
        target_frac = numerator / denominator
        # p/q = target_frac => p * denominator = q * numerator
        # For primes p,q trying:
        # p*denominator = q*numerator 
        # => q = (p*denominator)/numerator must be prime integer
        for p in p_primes:
            lhs = p * denominator
            if lhs % numerator != 0:
                continue
            q = lhs // numerator
            if q in q_primes:
                print(f"Found solution: p={p}, q={q}, r={r}")
                
if __name__ == "__main__":
    main()
```

