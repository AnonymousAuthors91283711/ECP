[write_program]
The problem is to find all positive integers \(g\) such that there exist positive integers \(a,b,c,d,e,f,h,i\) satisfying:

\[
a b c = d e f = g h i,
\]
\[
a d g = b e h = c f i,
\]
\[
a e i = c e g.
\]

We want to enumerate possible \(g\) values with some sample small ranges for other variables. To maximize efficiency, try small values for \(a,b,c,d,e,f,h,i\) under positive integer constraints, check the equalities, and print any \(g\) found. Due to the involved equations, try \(1 \leq a,b,c,d,e,f,h,i \leq 5\) for enumeration.

```python
# Enumerate positive integers (a,b,c,d,e,f,g,h,i) <= 5, check given equalities,
# print each g immediately when found.

def main():
    max_val = 5
    # To avoid repeats, store found g-values in a set.
    found_g = set()
    for a in range(1, max_val + 1):
        for b in range(1, max_val + 1):
            for c in range(1, max_val + 1):
                abc = a * b * c
                for d in range(1, max_val + 1):
                    for e in range(1, max_val + 1):
                        for f in range(1, max_val + 1):
                            def_ = d * e * f
                            if abc != def_:
                                continue
                            for g in range(1, max_val + 1):
                                for h in range(1, max_val + 1):
                                    for i_ in range(1, max_val + 1):
                                        ghi = g * h * i_
                                        if def_ != ghi:
                                            continue
                                        # Check second equalities:
                                        a_d_g = a * d * g
                                        b_e_h = b * e * h
                                        c_f_i = c * f * i_
                                        if a_d_g != b_e_h or b_e_h != c_f_i:
                                            continue
                                        # Check third equality:
                                        # a * e * i = c * e * g
                                        # Since e > 0, divide both sides by e:
                                        if a * i_ != c * g:
                                            continue
                                        if g not in found_g:
                                            print(f'g={g} with (a,b,c,d,e,f,h,i)=({a},{b},{c},{d},{e},{f},{h},{i_})')
                                            found_g.add(g)

if __name__ == '__main__':
    main()
```
