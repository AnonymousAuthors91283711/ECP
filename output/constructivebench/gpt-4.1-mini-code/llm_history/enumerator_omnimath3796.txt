[write_program]
This problem concerns primes \( p \) for which the polynomial \( x^3 - 3x + 1 = 0 \) has a unique solution modulo \( p \). To assist in exploring this, we enumerate small primes \( p \) and for each prime, count the number of distinct roots of the polynomial modulo \( p \). We print each prime and the count; primes with exactly one root provide candidates for the set in question.

```python
from sympy import isprime, mod_inverse

def poly_roots_count(p):
    # Count distinct roots of x^3 - 3x + 1 mod p
    roots = set()
    for x in range(p):
        val = (x*x*x - 3*x + 1) % p
        if val == 0:
            roots.add(x)
            if len(roots) > 1:  # early stop if more than one root
                break
    return len(roots)

def main():
    print("Primes p with count of roots of x^3-3x+1 mod p:")
    limit = 100
    for p in range(2, limit+1):
        if isprime(p):
            count = poly_roots_count(p)
            print(f"p={p}, roots={count}")
    print("Primes with exactly one root modulo p:")
    for p in range(2, limit+1):
        if isprime(p):
            if poly_roots_count(p) == 1:
                print(p)

if __name__ == "__main__":
    main()
```
