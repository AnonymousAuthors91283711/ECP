[check_equivalence] Problem: import Mathlib

open Nat

abbrev omnimath4288_answer : ℕ → ℕ := sorry
def McDuckReachable (start target : (ℕ → ℕ) × ℕ) : Prop :=
  Relation.TransGen McDuckStep start target

theorem omnimath4288 (k n : ℕ) (hk : k > 0) :
    McDuckReachable (fun i => if i = 1 then 1 else 0, k - 1) (fun i => if i = n then 1 else 0, 0) ↔
    n = omnimath4288_answer k := by sorry
Ground Truth Answer: fun k => 2^(k-1)

inductive McDuckStep : (ℕ → ℕ) × ℕ → (ℕ → ℕ) × ℕ → Prop
| remove_coin (coins table i) :
    coins i = 1 → coins (i+1) = 1 →
    McDuckStep (coins, table) (Function.update (Function.update coins i 1) (i+1) 0, table + 1)
| add_coin (coins table i) :
    coins i = 1 → coins (i+1) = 0 → table > 0 →
    McDuckStep (coins, table) (Function.update coins (i+1) 1, table - 1)
Proposed Answer: fun k => Nat.factorial k
<<<False>>>