[write_program]
The problem involves values related to \( n=2021 \), and the expression \( p = \frac{2(n-2)}{n(n-1)} \). Then we want to evaluate \( \lfloor n \cdot p \rfloor \).

To explore related values and understand the behavior, I'll write a program that tries small values of \( n \) (from 3 up to 20) and prints \(\lfloor n \cdot p \rfloor\) and the exact value \( n \cdot p \). This will help conjecture the pattern for large \( n \) like 2021.

```python
# Enumerate values of floor(n * p) for p = 2(n-2)/(n(n-1)) and n from 3 to 20
# Print n, n*p (exact fraction), and floor(n*p)

from fractions import Fraction

print("n  n*p (exact)    floor(n*p)")
for n in range(3, 21):
    p = Fraction(2*(n-2), n*(n-1))
    val = n * p  # simplify
    floored = val.numerator // val.denominator
    print(f"{n:<2} {val}    {floored}")

# Finally, print the value for n=2021
n = 2021
p = Fraction(2*(n-2), n*(n-1))
val = n * p
floored = val.numerator // val.denominator
print("\nFor n=2021:")
print(f"n*p = {val} (approximately {float(val):.6f})")
print(f"floor(n*p) = {floored}")
```
