[write_program]
The problem is to analyze the expression \( y = (\sin x)^2 - 2 \sin x + 2 \) and find its least and greatest values over all real \( x \). Since \( \sin x \) varies between \(-1\) and \(1\), we can parametrize \( t = \sin x \) with \( t \in [-1,1] \) and consider \( y = t^2 - 2 t + 2 \).

We enumerate values of \( y \) by sampling \( t \) in its range with fine increments, print each distinct value found, and finally determine the minimum and maximum values exactly using the quadratic formula.

```python
# Enumerate values of y = (sin x)^2 - 2*sin x + 2 by sampling t = sin x in [-1,1]
# Then find exact min and max values given y = t^2 - 2 t + 2 on t in [-1,1]

def y(t):
    return t*t - 2*t + 2

def main():
    print("Sampling values of y = t^2 - 2 t + 2 for t in [-1,1]:")
    # Use increments of 0.1, print y values for distinct rounded results to reduce output
    seen = set()
    t = -1.0
    while t <= 1.0001:
        val = y(t)
        rounded = round(val, 5)
        if rounded not in seen:
            print(f"t = {t:.1f}, y = {rounded}")
            seen.add(rounded)
        t += 0.1

    # y = t^2 - 2 t + 2 is quadratic, vertex at t = 1 (derivative 2t - 2=0)
    # Since parabola opens upwards, minimum at t=1
    t_min = 1
    y_min = y(t_min)

    # Check extreme ends for max candidate (since parabola is upward)
    y_left = y(-1)
    y_right = y(1)

    # Maximum is max of y(-1) and y(1) since vertex is minimum
    y_max = max(y_left, y_right)

    print(f"Exact minimum value of y is y({t_min}) = {y_min}")
    print(f"Exact maximum value of y on [-1,1] is max(y(-1), y(1)) = max({y_left}, {y_right}) = {y_max}")

if __name__ == "__main__":
    main()
```
