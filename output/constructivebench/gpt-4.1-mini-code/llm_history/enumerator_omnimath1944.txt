[write_program]
This math problem counts permutations \( f: \{0,1,2,3,4\} \to \{0,1,2,3,4\} \) that are bijections and satisfy:  
For all \( i, j \), if \( i - j \geq 3 \), then \( f(j) < f(i) \).

The set is small (5 elements), so we can explicitly enumerate all 5! = 120 permutations and check the condition. We will print every permutation that satisfies the condition and finally print the total count.

```python
from itertools import permutations

# Domain and codomain: {0,1,2,3,4}
n = 5
indices = list(range(n))

count = 0
# For each permutation f of [0..4]
for f in permutations(indices):
    # Check the condition for all i, j
    # if i-j >= 3 => f[j] < f[i]
    valid = True
    for i in indices:
        for j in indices:
            if i - j >= 3:
                if not (f[j] < f[i]):
                    valid = False
                    break
        if not valid:
            break
    if valid:
        count += 1
        print(f"Valid permutation #{count}: {f}")
print(f"Total number of valid permutations: {count}")
```
