[write_program]
The problem is to find all integer triples \((a,b,c)\) with \(1 < a < b < c\) such that
\[
(a - 1)(b - 1)(c - 1) \mid abc - 1.
\]

We will enumerate small values of \(a, b, c\) with \(2 \leq a < b < c \leq 20\) (or a suitable cutoff) and print all triples satisfying this divisibility condition.

```python
# Enumerate triples (a,b,c) with 2 <= a < b < c <= 20
# Check if (a-1)*(b-1)*(c-1) divides abc - 1 exactly
# Print each triple immediately when found.

def main():
    max_val = 20
    for a in range(2, max_val + 1):
        for b in range(a + 1, max_val + 1):
            for c in range(b + 1, max_val + 1):
                numerator = a * b * c - 1
                denominator = (a - 1) * (b - 1) * (c - 1)
                if numerator % denominator == 0:
                    print(f"(a,b,c)=({a},{b},{c}), quotient={numerator // denominator}")

if __name__ == "__main__":
    main()
```
