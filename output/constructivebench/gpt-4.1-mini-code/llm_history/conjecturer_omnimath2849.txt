[conjecture_answer] Formal Problem Statement: import Mathlib

open Int

abbrev omnimath2849_answer : ℤ → ℤ := sorry
theorem omnimath2849 (x y : ℤ) (h : x = 2 * y) (hy : y ≠ 0) : 
    (x + 2 * y) - (2 * x + y) = omnimath2849_answer y := by sorry. Enumerated answers: y    answer
-5 -> 5
-4 -> 4
-3 -> 3
-2 -> 2
-1 -> 1
1 -> -1
2 -> -2
3 -> -3
4 -> -4
5 -> -5

Distinct answer values found:
-5
-4
-3
-2
-1
1
2
3
4
5. Expected Answer Type: ℤ → ℤ
The expression simplifies as (x + 2y) - (2x + y) = x + 2y - 2x - y = -x + y. Given x = 2y, substitute to get -2y + y = -y. The answer function is fun y => -y, matching the enumerated pattern.

<<<fun y : ℤ => -y>>>