[write_program]
The problem concerns positive integers \(a, b, c\) satisfying \(15a + 14b = c\), and gcd conditions involving 14, 15, and 210. To explore the gcd relations, I'll enumerate small positive triples \((a,b,c)\) that satisfy \(c = 15a + 14b\) with \(a,b \in [1,20]\). For each, compute:
- \(\gcd(a,14)\),
- \(\gcd(b,15)\),
- \(\gcd(c,210)\),
and print these gcd values along with the boolean values of the statements:
- \(\gcd c 210 = 1\),
- \(\gcd a 14 = 1 \lor \gcd b 15 = 1\),
- \(\gcd c 210 = 1 \leftrightarrow \gcd a 14 = 1 \land \gcd b 15 = 1\).

This enumeration will help conjecture the truth of the equivalences in the theorem.

```python
from math import gcd

def main():
    print("a b c gcd(a,14) gcd(b,15) gcd(c,210) gcd(c,210)=1 gcd(a,14)=1 or gcd(b,15)=1 gcd(c,210)=1 <-> (gcd(a,14)=1 and gcd(b,15)=1)")
    for a in range(1, 21):
        for b in range(1, 21):
            c = 15*a + 14*b
            ga = gcd(a,14)
            gb = gcd(b,15)
            gc = gcd(c,210)
            gc1 = (gc == 1)
            disj = (ga == 1) or (gb == 1)
            conj = (ga == 1) and (gb == 1)
            equiv = (gc1 == conj)
            print(f"{a:2} {b:2} {c:3} {ga:9} {gb:9} {gc:10} {str(gc1):15} {str(disj):28} {str(equiv)}")

if __name__ == "__main__":
    main()
```
