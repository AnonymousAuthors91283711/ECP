[write_program]
The problem describes an integer-valued function \( f:\mathbb{Z} \to \mathbb{Z} \) satisfying the relation
\[
f(x) = f(x-1) + f(x+1)
\]
for all integers \( x \), with initial conditions \( f(1) = 1 \) and \( f(2) = 3 \).

To explore this recurrence, I will rewrite the relation as
\[
f(x+1) = f(x) - f(x-1).
\]
This gives a linear recurrence that can be computed forward for positive indices. The program below enumerates \( f(n) \) for \( n \) up to 20 to help conjecture the pattern. We also attempt to compute values for negative indices by inverting the relation.

```python
# Enumerator for the recurrence f(x) = f(x-1) + f(x+1), with f(1)=1, f(2)=3
# Rearranged as f(x+1) = f(x) - f(x-1)

def main():
    # Known values
    f = {1:1, 2:3}
    print(f"f(1) = {f[1]}")
    print(f"f(2) = {f[2]}")

    # Compute forward up to n=20
    for n in range(3, 21):
        f[n] = f[n-1] - f[n-2]
        print(f"f({n}) = {f[n]}")

    # Compute backward for n=0 down to -10 using inversion:
    # From f(x) = f(x-1) + f(x+1), rearranged f(x-1) = f(x) - f(x+1)
    # So starting at f(1), f(2), we can find f(0) = f(1) - f(2), etc.
    for n in range(0, -11, -1):
        f[n] = f[n+1] - f[n+2]
        print(f"f({n}) = {f[n]}")

if __name__ == "__main__":
    main()
```

This output will help detect patterns (periodicity, growth, or closed form) to conjecture \( f(2008) \).
