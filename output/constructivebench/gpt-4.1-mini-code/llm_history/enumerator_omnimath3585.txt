[write_program]
The problem looks for 4-digit numbers \( x \) between 1000 and 9999, expressible as \( x = 1000a + 100b + 10a + b = 1010a + 101b \) where \( a \neq 0 \) and \( a, b \) are digits of \( x \). Additionally, \( x = n^2 + 1 \) for some integer \( n \). The task is to identify such \( x \).

The program enumerates \( a \) and \( b \), forms \( x \), checks digit membership and the condition \( x = n^2 + 1 \).

```python
# Enumerate 4-digit numbers x=1000a+100b+10a+b = 1010a + 101b with digits a,b and check if x=n^2+1
import math

for a in range(1,10):
    for b in range(10):
        x = 1010*a + 101*b  # Construct number
        if x < 1000 or x > 9999:
            continue
        # Check digits of x
        digits = [int(d) for d in str(x)]
        if a not in digits or b not in digits:
            continue
        # Check if x-1 is a perfect square
        t = x - 1
        n = int(math.isqrt(t))
        if n*n == t:
            print(f"x={x}, a={a}, b={b}, n={n}")
```
