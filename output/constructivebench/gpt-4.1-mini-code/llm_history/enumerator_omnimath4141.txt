[write_program]
The problem appears to concern finding natural numbers \( n \) for which there exist natural numbers \( a, b \) with \( b > n \) such that \( b^2 - n^2 \) divides \( a^2 + n^2 \). The program will enumerate small values of \( n, a, b \) and test this divisibility condition. For each \( n \), we will check a range of \( b > n \) and \( a \) to find solutions. When a solution is found, we print \( n, a, b \).

We limit the search space to keep output short and computations reasonable. For example, \( n, a, b \leq 20 \). We print each triple when found.

```python
# Enumerate n, a, b with constraints:
# b > n > 0, a >= 0, test if (a^2 + n^2) % (b^2 - n^2) == 0

def main():
    MAX_N = 20
    MAX_A = 20
    MAX_B = 25
    print("Enumerating triples (n,a,b) with b>n and (a²+n²) divisible by (b² - n²):")
    for n in range(1, MAX_N+1):
        for b in range(n+1, MAX_B+1):
            denom = b*b - n*n
            if denom <= 0:
                continue
            for a in range(MAX_A+1):
                numer = a*a + n*n
                if numer % denom == 0:
                    print(f"n={n}, a={a}, b={b}")

if __name__ == "__main__":
    main()
```
