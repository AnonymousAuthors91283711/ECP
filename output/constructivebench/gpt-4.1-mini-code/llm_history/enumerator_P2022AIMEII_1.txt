[write_program]
The problem is to find the smallest natural number \( n \) such that there exist natural numbers \( k, m \) satisfying the system:
\[
5m = 12k, \quad 11(m+50) = 25(k+50), \quad n = k + 50.
\]

We enumerate \( k \) starting from 0, and check for integer \( m \) satisfying both equations. Then output all candidate \( n = k+50 \) found.

```python
# Enumerate k, check for integer m satisfying:
# 5*m = 12*k and 11*(m+50) = 25*(k+50)
# Print all candidates for n = k+50.

def main():
    # We'll limit search up to some max k to avoid infinite loop
    MAX_K = 10000
    for k in range(MAX_K):
        # From 5*m=12*k => m = 12*k/5, must be integer
        if (12 * k) % 5 != 0:
            continue
        m = (12 * k) // 5
        # Check second condition
        lhs = 11 * (m + 50)
        rhs = 25 * (k + 50)
        if lhs == rhs:
            n = k + 50
            print(f"Found n={n} with k={k}, m={m}")
            # Since problem wants least n, stop when found first
            # but to enumerate all, remove break
            # However, problem states output all candidates then extremal
            # Let's collect candidates instead
            # Here just print immediately.
            # So break to show only minimal n.
            break

if __name__ == "__main__":
    main()
```
