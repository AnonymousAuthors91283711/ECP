[write_program]
The equation to explore is \( 231m^2 = 130n^2 \) with \( m, n \in \mathbb{Z} \). The code will search for integer pairs \((m,n)\) satisfying this equality for small absolute values of \(m\) and \(n\).

Since the equation can be rearranged as \(\frac{m^2}{n^2} = \frac{130}{231}\), \(m/n\) must be a rational number whose square equals \(130/231\). We'll find integer pairs by iterating over small \(n\) and computing \(m^2 = \frac{130}{231} n^2\) to check if \(m^2\) is a perfect square.

We limit \(m,n\) to a small range to ensure output under 400 tokens and print each solution immediately.

```python
import math

# Given 231 * m^2 = 130 * n^2, look for integer pairs (m,n)
# Check small values of n, compute m^2 = (130/231) * n^2
# If m^2 integer and m is integer, print (m,n)

max_n = 100
solutions = []

print("Solutions (m,n) for 231*m^2=130*n^2 with |m|,|n|<=100:")
for n in range(1, max_n+1):
    # Compute m^2 = (130 * n^2)/231
    numerator = 130 * n * n
    if numerator % 231 != 0:
        continue
    m_squared = numerator // 231
    m = int(round(math.isqrt(m_squared)))
    if m * m == m_squared:
        print(f"m={m}, n={n}")
        print(f"m={-m}, n={n}")  # negative m also solution
        solutions.append((m,n))
        solutions.append((-m,n))

print("\nSample solutions found:")
for sol in solutions[:10]:  # print first 10 solutions as sample
    print(sol)
```
