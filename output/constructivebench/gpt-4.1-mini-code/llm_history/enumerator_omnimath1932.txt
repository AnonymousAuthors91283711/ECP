[write_program]
The problem states that the set {54√3, 144, 108√6 - 108√2} has a least element. We want to numerically and symbolically approximate these values to find the minimum. I will print each number exactly (using sympy for symbolic evaluation), then numerically approximate, and finally print the minimum.

```python
# enumerator.py
from sympy import sqrt, N

# Define the three expressions exactly
vals = [
    54 * sqrt(3),
    144,
    108 * sqrt(6) - 108 * sqrt(2)
]

# Print exact symbolic forms
print("Exact values:")
for v in vals:
    print(v)

# Print numerical approximations with 10 decimal digits
print("\nNumerical approximations:")
num_vals = []
for v in vals:
    nv = N(v, 10)
    num_vals.append(nv)
    print(nv)

# Find and print the smallest value exactly and numerically
min_index = num_vals.index(min(num_vals))
print(f"\nMinimum value is value #{min_index+1}:")
print(f"Exact: {vals[min_index]}")
print(f"Approximate: {num_vals[min_index]}")
```
