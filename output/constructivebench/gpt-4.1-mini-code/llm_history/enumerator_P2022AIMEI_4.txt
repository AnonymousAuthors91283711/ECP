[write_program]
The problem involves finding pairs \((r, s)\) with \(1 \leq r, s \leq 100\) of natural numbers such that:
\[
i \cdot w^r = z^s,
\]
where
\[
w = \frac{\sqrt{3} + i}{2}, \quad z = \frac{-1 + i \sqrt{3}}{2}.
\]

We want to count the number of such pairs.

The program will:
- Define \(w, z, i = \text{complex unit}\).
- Iterate over \(r, s\) in the given range.
- Check the equality \(i \cdot w^r == z^s\) with exact values (or numerically with high precision).
- Print each matching pair immediately.
- Finally print the total count.

```python
# Enumerate pairs (r,s) with 1 ≤ r,s ≤100 satisfying i*w^r = z^s,
# where w=(√3 + i)/2, z=(-1 + i√3)/2

import cmath

def close_eq(a, b, tol=1e-12):
    return abs(a - b) < tol

def main():
    i = complex(0,1)
    sqrt3 = 3**0.5
    w = complex(sqrt3/2, 0.5)
    z = complex(-0.5, sqrt3/2)

    count = 0
    print("Pairs (r,s) with 1≤r,s≤100 and i*w^r = z^s:")
    for r in range(1, 101):
        w_pow = w**r
        left = i * w_pow
        for s in range(1, 101):
            right = z**s
            if close_eq(left, right):
                print(f"r={r}, s={s}")
                count += 1
    print(f"Total number of solutions: {count}")

if __name__ == "__main__":
    main()
```
