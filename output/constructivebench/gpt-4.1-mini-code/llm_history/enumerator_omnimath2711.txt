[write_program]
The problem is to find the smallest integer \( x \) such that \( x \) is odd (because \( x = 2k+1 \) for some integer \( k \)) and that the sum \( x + (x+2) + (x+4) + (x+6) + (x+8) = 125 \).

We'll enumerate possible odd integers \( x \), calculate the sum of these five consecutive odd numbers starting at \( x \), and see which sums to 125. Then we'll output the smallest such \( x \).

```python
# Enumerate odd integers x and check if sum x + (x+2) + (x+4) + (x+6) + (x+8) == 125
# Since sum is 5x + (2+4+6+8) = 5x + 20 = 125 => 5x = 105 => x = 21 (should be minimal)
# But we enumerate all possible to verify and print incrementally

def main():
    # We expect x to be odd; iterate over odd integers in reasonable range
    # Given sum is 5x+20=125 => x=21, so try around that range
    for x in range(-50, 50):
        if x % 2 == 1:  # x odd
            s = x + (x+2) + (x+4) + (x+6) + (x+8)
            if s == 125:
                print(f"x = {x}, sum = {s}")

if __name__ == "__main__":
    main()
```
