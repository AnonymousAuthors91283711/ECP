[write_program]
We are asked to find the number of natural numbers \( x \) such that there exist natural numbers \( a, b \) with \( a \cdot x = 48 \) and \( b \cdot x = 64 \). This means \( x \) divides both 48 and 64. So \( x \) must be a common divisor of 48 and 64. The set is the set of common divisors of 48 and 64. The answer is the number of divisors of \(\gcd(48,64)\).

This program will enumerate all such \( x \) and print them, then print the count.

```python
# Enumerate all common divisors of 48 and 64

def divisors(n):
    ds = []
    for i in range(1, int(n**0.5)+1):
        if n % i == 0:
            ds.append(i)
            if i != n // i:
                ds.append(n//i)
    return sorted(ds)

def main():
    a = 48
    b = 64
    from math import gcd
    g = gcd(a, b)
    print(f"gcd({a},{b}) = {g}")
    divs = divisors(g)
    print("Common divisors:")
    for d in divs:
        print(d)
    print(f"Number of such x: {len(divs)}")

if __name__ == "__main__":
    main()
```
