[write_program]
The problem seeks the least natural number \( n > 0 \) such that \(\frac{n+1}{2n+1} < \frac{1}{100}\). We will enumerate values of \( n \) from 1 upwards, compute the fraction exactly (using fractions), and print all \( n \) meeting the condition until we find the minimum. Then, print the minimum explicitly.

```python
from fractions import Fraction

def main():
    threshold = Fraction(1, 100)
    candidates = []
    for n in range(1, 200):  # search up to 200 for safety
        val = Fraction(n+1, 2*n+1)
        if val < threshold:
            print(f"n = {n}, (n+1)/(2n+1) = {val}")
            candidates.append(n)
            # Since fraction decreases as n grows, first found is minimum, but continue for safety
    if candidates:
        print(f"Minimum n: {min(candidates)}")
    else:
        print("No n found with condition.")

if __name__ == "__main__":
    main()
```
