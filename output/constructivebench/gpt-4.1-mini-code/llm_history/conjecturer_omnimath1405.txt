[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

def isLoose (n : ℕ) : Prop := 
  n.divisors.card = 6 ∧ 
  ∀ a ∈ n.divisors, ∀ b ∈ n.divisors, a < b → b ≥ 2 * a

-- Make the predicate decidable
instance (n : ℕ) : Decidable (isLoose n) := by
  unfold isLoose
  infer_instance

abbrev omnimath1405_answer : ℕ := sorry
theorem omnimath1405 : 
  ∑ n in (Finset.range 100).filter isLoose, n = omnimath1405_answer := by sorry. Enumerated answers: Loose numbers n < 100 with exactly 6 divisors and divisor gaps:
32
44
50
52
68
76
92
98
Sum: 512. Expected Answer Type: ℕ
<<<512>>>