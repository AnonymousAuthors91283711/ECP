[write_program]
The problem is to enumerate the cardinality of the set of functions from a finite set of size 3 (Fin 3) to Bool (a set with two elements). The goal is to verify the cardinality by explicitly enumerating and counting such functions.

The total number of functions from a set of size 3 to Bool is 2^3 = 8.

The program enumerates all such functions as 3-bit vectors where each bit corresponds to the function value at one element of Fin 3. It prints each function as a 3-length tuple of Bools and finally prints the total count.

```python
# Enumerate functions from Fin 3 to Bool; Fin 3 = {0,1,2}, Bool = {False,True}
# There are 2^3=8 such functions. We print each function and finally the count.

def main():
    n = 3
    bool_values = [False, True]
    count = 0
    # Enumerate all functions as triples of Bool
    for i in range(2**n):
        # Decode i into 3 bits: f(0), f(1), f(2)
        f = tuple(bool((i >> j) & 1) for j in range(n))
        print(f)
        count += 1
    print("Total functions:", count)

if __name__ == "__main__":
    main()
```
