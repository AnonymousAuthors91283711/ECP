[write_program]
The problem is to find natural numbers \( t, w \) such that:
\[
3t + 2w + (w+1) = 61,
\]
\[
2w = 3t,
\]
and to determine and output \( w+1 \).

From the second equation \( 2w = 3t \), \( w \) and \( t \) are linked. We can write \( w = \frac{3t}{2} \) and substitute into the first equation, then enumerate possible integer values of \( t \) and compute \( w \), checking if conditions hold.

The program below does this enumeration, prints all candidates and finally prints the corresponding \( w+1 \).

```python
# Enumerates natural numbers t,w satisfying:
# 3t + 2w + (w+1) = 61 and 2w=3t,
# printing each candidate and the value w+1.

def main():
    print("Enumerating solutions for 3t + 3w + 1 = 61 with 2w=3t")
    # Since 2w=3t, w=3t/2 must be integer -> t must be even
    for t in range(0, 40):  # t up to 40 is more than enough for 61
        if (3*t) % 2 != 0:
            continue
        w = (3*t)//2
        lhs = 3*t + 2*w + (w+1)
        if lhs == 61:
            print(f"t={t}, w={w}, w+1={w+1}")

if __name__ == "__main__":
    main()
```
