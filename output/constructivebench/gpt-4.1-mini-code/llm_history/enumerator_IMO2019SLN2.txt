[write_program]
The problem concerns natural numbers \(a, b, c > 0\) satisfying 
\[a^3 + b^3 + c^3 = (abc)^2.\]
We want to enumerate triples \((a,b,c)\) with small values to observe which satisfy this equation, helping to conjecture the full solution set.

We try all triples with \(1 \leq a,b,c \leq 30\) (adjustable) and print exactly those triples.

```python
# Enumerate triples (a,b,c) of positive integers with small bounds checking
# a^3 + b^3 + c^3 == (a*b*c)^2

def main():
    MAX = 30
    # Print header for clarity
    print("Testing triples (a,b,c) with 1 <= a,b,c <= ", MAX)
    for a in range(1, MAX+1):
        a3 = a**3
        for b in range(a, MAX+1):  # start from a to avoid duplicates with different order
            b3 = b**3
            for c in range(b, MAX+1):  # c >= b >= a
                c3 = c**3
                left = a3 + b3 + c3
                right = (a*b*c)**2
                if left == right:
                    print(f"Found solution: a={a}, b={b}, c={c}")
    print("Enumeration finished.")

if __name__ == "__main__":
    main()
```
