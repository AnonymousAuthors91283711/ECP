[write_program]
This problem asks to find the number of nonnegative integers k for which there exist integers c and d with c + d = 2000 and c = k * d. Rewriting c = k*d and c + d = 2000 gives (k+1)d = 2000, so d divides 2000 and k = c/d = (2000 - d)/d = 2000/d - 1. Since k is a nonnegative integer, 2000/d - 1 ≥ 0 ⇒ 2000/d ≥ 1 ⇒ d ≤ 2000 and positive divisor of 2000. So the number of such k equals the count of positive divisors d of 2000 with d ≤ 2000. We enumerate k = 2000/d - 1 for all positive divisors d of 2000.

```python
def divisors(n):
    divs = []
    i = 1
    while i*i <= n:
        if n % i == 0:
            divs.append(i)
            if i != n // i:
                divs.append(n // i)
        i += 1
    return divs

n = 2000
divs = divisors(n)
divs = [d for d in divs if d > 0]  # positive divisors
print("Positive divisors of 2000:", sorted(divs))

ks = set()
for d in divs:
    k = n // d - 1
    if k >= 0:
        print("For divisor d =", d, "k =", k)
        ks.add(k)

print("Total number of such k:", len(ks))
```
