[conjecture_answer] Formal Problem Statement: import Mathlib

open Finset BigOperators

abbrev omnimath55_answer : ℕ → ℕ := sorry
theorem omnimath55 (n : ℕ) :
  IsLeast {s : ℕ | ∃ (f : Equiv.Perm (Fin n)), 
          s = ∑ i, min (f i).val (2 * i.val + 1)} (omnimath55_answer n) := by sorry. Enumerated answers: n = 1
perm=(0,), sum=0
Minimum sum for n=1 is 0

n = 2
perm=(0, 1), sum=1
perm=(1, 0), sum=1
Minimum sum for n=2 is 1

n = 3
perm=(0, 1, 2), sum=3
perm=(0, 2, 1), sum=3
perm=(1, 0, 2), sum=3
perm=(1, 2, 0), sum=3
perm=(2, 0, 1), sum=2
perm=(2, 1, 0), sum=2
Minimum sum for n=3 is 2

n = 4
perm=(0, 1, 2, 3), sum=6
perm=(0, 1, 3, 2), sum=6
perm=(0, 2, 1, 3), sum=6
perm=(0, 2, 3, 1), sum=6
perm=(0, 3, 1, 2), sum=6
perm=(0, 3, 2, 1), sum=6
perm=(1, 0, 2, 3), sum=6
perm=(1, 0, 3, 2), sum=6
perm=(1, 2, 0, 3), sum=6
perm=(1, 2, 3, 0), sum=6
perm=(1, 3, 0, 2), sum=6
perm=(1, 3, 2, 0), sum=6
perm=(2, 0, 1, 3), sum=5
perm=(2, 0, 3, 1), sum=5
perm=(2, 1, 0, 3), sum=5
perm=(2, 1, 3, 0), sum=5
perm=(2, 3, 0, 1), sum=5
perm=(2, 3, 1, 0), sum=5
perm=(3, 0, 1, 2), sum=4
perm=(3, 0, 2, 1), sum=4
perm=(3, 1, 0, 2), sum=4
perm=(3, 1, 2, 0), sum=4
perm=(3, 2, 0, 1), sum=4
perm=(3, 2, 1, 0), sum=4
Minimum sum for n=4 is 4
. Expected Answer Type: ℕ → ℕ
<<<fun n : ℕ => Nat.choose (n + 1) 3>>>