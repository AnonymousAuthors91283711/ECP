[write_program]
This problem involves finding a real number \( v > 0 \) and positive \( d, t \) such that
\[
\frac{d}{40} = t + \frac{3}{60}, \quad \frac{d}{60} = t - \frac{3}{60}, \quad \frac{d}{v} = t.
\]
Our goal is to find \( v \) satisfying these equations, presumably \( v = P2002AMCA_11\_answer \).

We can try enumerating possible rational values for \( t \) and \( d \) consistent with the constraints and derive \( v \). We'll attempt a small discrete search for \( t \) using values in increments of 0.01, solve for \( d \), then compute \( v = \frac{d}{t} \).

The difference between the first two equations helps find a fixed relationship:
\[
\frac{d}{40} - \frac{d}{60} = \frac{3}{60} + \frac{3}{60} = \frac{6}{60} = \frac{1}{10}.
\]
We can use this to solve exactly for \( d \), then for \( v \).

To showcase the solution efficiently, the program will:
- Compute \( d \) from the value \( d(\frac{1}{40} - \frac{1}{60}) = \frac{1}{10} \).
- Calculate \( d \).
- Calculate \( t \) from \( t = \frac{d}{60} + \frac{3}{60} \).
- Calculate \( v = \frac{d}{t} \).
- Output all exact computed values with rational fractions.

```python
# Enumerate the parameters d, t, v satisfying the problem constraints analytically.

from fractions import Fraction

def main():
    # From (d/40) - (d/60) = 1/10
    # LHS = d(1/40 - 1/60) = d(3/120 - 2/120) = d*(1/120)
    # So d*(1/120) = 1/10  => d = (1/10) * 120 = 12
    d = Fraction(12)

    # Then from d/60 = t - 3/60 => t = d/60 + 3/60 = (12/60) + (3/60) = 15/60 = 1/4
    t = Fraction(15, 60)

    # Finally v = d / t = 12 / (1/4) = 12 * 4 = 48
    v = d / t

    print(f"d = {d} = {float(d):.6g}")
    print(f"t = {t} = {float(t):.6g}")
    print(f"v = {v} = {float(v):.6g}")

if __name__ == "__main__":
    main()
```
