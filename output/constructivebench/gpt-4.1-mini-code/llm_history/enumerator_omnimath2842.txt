[write_program]
The problem involves the set \( S = \{1, \ldots, 10\} \) and the expression 
\[ P(a,b,c,d) = a c + b d - a d - b c \]
for distinct integers \( a,b,c,d \in S \).

We want to find the greatest value of \( P \) over all 4-tuples of distinct elements in \( S \).

By rewriting:
\[
P(a,b,c,d) = a c + b d - a d - b c = (a - b)(c - d).
\]
Since \( a,b,c,d \) are distinct, and each from 1 to 10, \( a-b \) and \( c-d \) are nonzero integers.

Thus, the problem reduces to finding the maximum value of \(|(a-b)(c-d)|\) with distinct \(a,b,c,d\).

To maximize:
- Maximize the absolute values of \(a-b\) and \(c-d\).
- Ensure the product is positive or negative, but we want the maximum value itself (not absolute) and then track the actual value.

Our program will enumerate all quadruples with distinct \(a,b,c,d\), compute \(P(a,b,c,d)\), print each found \(P\), and track the greatest value.

We will print all found \(y\), and at the end print the maximum.

```python
# Enumerate all distinct quadruples (a,b,c,d) in {1..10} and evaluate P = a*c + b*d - a*d - b*c = (a-b)*(c-d)
# Print each P found immediately. Also track the maximum P and print it at the end.

def main():
    S = list(range(1, 11))
    max_P = None
    printed = set()
    # To avoid duplicate P prints, only print new values
    for a in S:
        for b in S:
            if b == a:
                continue
            for c in S:
                if c in {a,b}:
                    continue
                for d in S:
                    if d in {a,b,c}:
                        continue
                    val = (a - b)*(c - d)
                    if val not in printed:
                        print(val)
                        printed.add(val)
                    if (max_P is None) or (val > max_P):
                        max_P = val
    print("Maximum P:", max_P)

if __name__ == "__main__":
    main()
```
