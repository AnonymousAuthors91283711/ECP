[check_equivalence] Problem: import Mathlib

open Nat

abbrev omnimath4322_answer : Fin 4 → ℕ := sorry
theorem omnimath4322 (a b c d : ℕ) :
  a + b + c + d = 48 ∧
  a + 3 = b - 3 ∧
  b - 3 = 3 * c ∧
  3 * c = d / 3 ↔
  (a, b, c, d) = (omnimath4322_answer 0, omnimath4322_answer 1, omnimath4322_answer 2, omnimath4322_answer 3) := by sorry
Ground Truth Answer: fun i => match i with
  | 0 => 6
  | 1 => 12
  | 2 => 3
  | 3 => 27
Proposed Answer: fun i : Fin 4 =>
  match i.val with
  | 0 => 6
  | 1 => 12
  | 2 => 3
  | 3 => 27
  | _ => 0 -- unreachable, since Fin 4 has vals 0..3
<<<True>>>
The proposed answer is equivalent to the ground truth answer. Both define the same function that maps the Fin 4 indices to the values 6, 12, 3, and 27 respectively. The additional unreachable case in the proposed answer (returning 0) doesn't affect the equivalence since Fin 4 only has values 0-3, so that case will never be executed. The core functionality is identical.