[write_program]
The problem involves computing the ratio of two probabilities \( p_1 \) and \( p_2 \) defined by factorial and product terms related to permutations of 26 elements. We want to find and simplify the exact value of \(\frac{p_1}{p_2}\).

We'll enumerate these values by calculating factorials exactly using Python's math module (which supports exact integer factorials), compute the terms, and then the ratio. The program will print partial results as it computes, emphasizing exact integer or rational values.

```python
import math
from fractions import Fraction

def factorial(n):
    return math.factorial(n)

def print_fraction(frac):
    if frac.denominator == 1:
        print(frac.numerator)
    else:
        print(f"{frac.numerator}/{frac.denominator}")

def main():
    # Define factorials needed
    fact_26 = factorial(26)
    fact_23 = factorial(23)
    fact_22 = factorial(22)
    fact_3 = factorial(3)
    fact_2 = factorial(2)

    print("Factorials:")
    print(f"26! = {fact_26}")
    print(f"23! = {fact_23}")
    print(f"22! = {fact_22}")
    print(f"3! = {fact_3}")
    print(f"2! = {fact_2}")

    # Compute p1 = (24 * 22! * 3!) / 26!
    p1_num = 24 * fact_22 * fact_3
    p1_den = fact_26
    p1 = Fraction(p1_num, p1_den)
    print("p1 = (24 * 22! * 3!) / 26! = ", end="")
    print_fraction(p1)

    # Compute p2 = (23 * 23! * 2!) / 26!
    p2_num = 23 * fact_23 * fact_2
    p2_den = fact_26
    p2 = Fraction(p2_num, p2_den)
    print("p2 = (23 * 23! * 2!) / 26! = ", end="")
    print_fraction(p2)

    # Compute ratio p1 / p2
    ratio = p1 / p2
    print("p1 / p2 = ", end="")
    print_fraction(ratio)

if __name__ == "__main__":
    main()
```
