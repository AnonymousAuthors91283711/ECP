[write_program]
The problem involves a prime number \( p \) and natural numbers \( x \) and \( y \) with \( x \neq y \), satisfying the equation:

\[
x^4 - y^4 = p (x^3 - y^3).
\]

We want to find all triples \((p, x, y)\) that satisfy this for prime \( p \).

Rewrite:

\[
x^4 - y^4 = p(x^3 - y^3).
\]

Factor both sides:

\[
(x^2 - y^2)(x^2 + y^2) = p (x - y)(x^2 + xy + y^2).
\]

Notice \( x \neq y \), so dividing both sides by \( x - y \) gives:

\[
(x + y)(x^2 + y^2) = p (x^2 + xy + y^2).
\]

Rewrite as:

\[
(x + y)(x^2 + y^2) - p (x^2 + xy + y^2) = 0.
\]

Or:

\[
f(x,y,p) = 0,
\]

where

\[
f(x,y,p) := (x + y)(x^2 + y^2) - p (x^2 + xy + y^2).
\]

Given \( p \) prime, enumerate small primes (e.g., \(2,3,5,7\)) and small \( x,y \) with \( x \neq y \), check when \( f(x,y,p) = 0 \).

We enumerate \( p \) in small primes, \( x,y \in [1..20] \), \( x \neq y \).

Print out all triples on the fly.

At the end for each \( p \), print all found solutions sorted by \( x,y \).

---

```python
# Enumerate primes p, integers x,y with x!=y, satisfying:
# (x + y)*(x^2 + y^2) == p*(x^2 + x*y + y^2).

def is_prime(n):
    if n < 2: return False
    if n == 2: return True
    if n % 2 == 0: return False
    r = int(n**0.5) +1
    for i in range(3, r, 2):
        if n % i ==0:
            return False
    return True

def f(x,y,p):
    return (x + y)*(x*x + y*y) - p*(x*x + x*y + y*y)

primes = [2,3,5,7,11,13]
max_xy = 20

for p in primes:
    print(f"Checking prime p = {p}")
    solutions = []
    for x in range(1, max_xy+1):
        for y in range(1, max_xy+1):
            if x == y:
                continue
            val = f(x,y,p)
            if val == 0:
                print(f"Solution found: p={p}, x={x}, y={y}")
                solutions.append((x,y))
    if solutions:
        print(f"All solutions for p={p}: {solutions}\n")
    else:
        print(f"No solutions found for p={p}\n")
```
