[write_program]
The problem is to find all natural number triples (x, y, z) satisfying the equation 2013^x + 2014^y = 2015^z. Because the powers grow rapidly, we'll test small exponents to search for solutions, printing all triples found.

```python
# Enumerate (x,y,z) with small exponents checking 2013^x + 2014^y = 2015^z
print("Testing small exponents for 2013^x + 2014^y = 2015^z")
max_exp = 10  # Checking exponents from 0 up to 10

for x in range(max_exp + 1):
    val_x = 2013**x
    for y in range(max_exp + 1):
        val_y = 2014**y
        sum_val = val_x + val_y
        # We'll try to find z such that 2015^z == sum_val
        # Since 2015^(z) grows rapidly, z approx log_base_2015(sum_val)
        # Calculate approximate z
        # We use integer rounding to check both floor and ceil values
        import math
        if sum_val == 0:
            continue
        zapprox = int(round(math.log(sum_val, 2015)))  
        for z in {zapprox - 1, zapprox, zapprox + 1}:
            if z >= 0:
                pow_val = 2015**z
                if pow_val == sum_val:
                    print(f"Found solution: x={x}, y={y}, z={z}")
```
