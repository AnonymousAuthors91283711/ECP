[write_program]
The problem describes a system of 100 equations for rational variables \(x_0, x_1, \ldots, x_{99}\):
\[
x_k = \left(\sum_{i=0}^{99} x_i\right) - x_k - k, \quad \text{for } k=0,\ldots,99,
\]
and wants the unique solution \(x\), especially the value \(x_{49}\).

Rewrite each equation as:
\[
x_k = S - x_k - k \implies 2x_k = S - k \implies x_k = \frac{S - k}{2},
\]
where \(S = \sum_{i=0}^{99} x_i\).

Summing over all \(k\):
\[
S = \sum_{k=0}^{99} x_k = \sum_{k=0}^{99} \frac{S - k}{2} = \frac{100S - \sum_{k=0}^{99} k}{2}.
\]

Since \(\sum_{k=0}^{99} k = \frac{99 \cdot 100}{2} = 4950\),
\[
S = \frac{100S - 4950}{2} \implies 2S = 100S - 4950 \implies 4950 = 98S \implies S = \frac{4950}{98} = \frac{4950/2}{49} = \frac{2475}{49}.
\]

Then,
\[
x_k = \frac{S - k}{2} = \frac{\frac{2475}{49} - k}{2}.
\]

Calculate \(x_{49}\):
\[
x_{49} = \frac{\frac{2475}{49} - 49}{2} = \frac{\frac{2475 - 49 \cdot 49}{49}}{2} = \frac{\frac{2475 - 2401}{49}}{2} = \frac{\frac{74}{49}}{2} = \frac{74}{98} = \frac{37}{49}.
\]

To assist with conjecturing, here is a Python program that enumerates \(x_k\) for all \(k\) using the above insights.

```python
# Enumerate x_k values for the system x_k = sum(x_i) - x_k - k for k=0..99.
# We solve for sum S and then compute each x_k exactly as fractions.

from fractions import Fraction

def main():
    n = 100
    # sum of k from 0 to 99
    sum_k = n * (n -1) // 2  # 0+1+...+99 = 99*100/2=4950

    # Solve for S in: S = (n*S - sum_k)/2 => 2S = nS - sum_k => (n-2)S = sum_k => S = sum_k/(n-2)
    S = Fraction(sum_k, n - 2)

    print(f"Sum S = {S} (exact fraction)")

    # enumerate x_k = (S - k)/2
    for k in range(n):
        xk = (S - k) / 2
        print(f"x[{k}] = {xk} (exact fraction)")

    # print x_49 separately per problem statement
    x49 = (S - 49) / 2
    print(f"\nValue at k=49 is x[49] = {x49} (exact fraction)")

if __name__ == "__main__":
    main()
```
