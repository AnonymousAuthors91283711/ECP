[write_program]
The problem involves finding triples of positive integers \((a,b,c)\) that satisfy:
- \(a+b+c = 3k + 1\)
- \(ab + bc + ca = 3k^2 + 2k\)

for positive integers \(k\).

To explore the solutions, we'll enumerate triples \((a,b,c)\) for small \(k\) values, check these conditions, and print all solutions found for each \(k\). We prioritize exact enumeration and print as soon as solutions are found.

```python
# Enumerate all positive triples (a,b,c) for k=1..5 where
#   a+b+c = 3k+1
#   ab+bc+ca = 3k^2 + 2k
# Print all solutions immediately.

def main():
    for k in range(1, 6):
        target_sum = 3*k + 1
        target_prod_sum = 3*k*k + 2*k
        print(f"k={k}, target sum={target_sum}, target product sum={target_prod_sum}")
        found = 0
        # a,b,c > 0 and sum fixed
        for a in range(1, target_sum-1):
            for b in range(1, target_sum - a):
                c = target_sum - a - b
                if c <= 0:
                    continue
                prod_sum = a*b + b*c + c*a
                if prod_sum == target_prod_sum:
                    print(f"  Solution: a={a}, b={b}, c={c}")
                    found += 1
        if found == 0:
            print("  No solutions found.")

if __name__ == '__main__':
    main()
```
