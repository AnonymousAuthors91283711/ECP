[write_program]
Enumerate all 3-digit numbers \( n = 100A + 10B + C \) with digits \( A, B, C \) from 1 to 9 satisfying \( n = B^C - A \). Print all such numbers and identify the smallest.

```python
# Enumerate n = 100*A + 10*B + C with digits 1..9 satisfying n = B^C - A
# Print all found and the minimal

min_n = None
print("Searching solutions for n=100*A +10*B + C with 1<=A,B,C<=9 and n = B^C - A:")

for A in range(1, 10):
    for B in range(1, 10):
        for C in range(1, 10):
            rhs = B**C - A
            n = 100*A + 10*B + C
            if n == rhs:
                print(f"A={A}, B={B}, C={C} => n={n}")
                if min_n is None or n < min_n:
                    min_n = n

if min_n is not None:
    print(f"\nMinimal n found: {min_n}")
else:
    print("No solution found")
```
