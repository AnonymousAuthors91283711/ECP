[write_program]
The problem involves finding the angle \(\theta \in [0,90]\) such that \(\cos 60^\circ = \cos 45^\circ \cdot \cos \theta\). Let's enumerate possible \(\theta\) values and check the equality numerically to conjecture the exact solution.

```python
import math

# Given: cos(60°) = cos(45°) * cos(θ)
# θ ∈ [0, 90]
# Enumerate θ in degrees, check the equality

cos_60 = math.cos(math.radians(60))
cos_45 = math.cos(math.radians(45))

print(f"cos(60°) = {cos_60:.6f}")
print(f"cos(45°) = {cos_45:.6f}")

threshold = 1e-9  # small tolerance for floating comparison

for theta in range(0, 91):  # 0 to 90 inclusive
    cos_theta = math.cos(math.radians(theta))
    lhs = cos_60
    rhs = cos_45 * cos_theta
    diff = abs(lhs - rhs)
    if diff < threshold:
        print(f"Found θ = {theta}°,  cos(θ) = {cos_theta:.9f}, lhs = {lhs:.9f}, rhs = {rhs:.9f}, diff = {diff:.2e}")
        # print the exact value in radians and degrees as well
        print(f"θ in radians ≈ {math.radians(theta):.9f}")

# Also try float increments for finer precision around candidates
# Let's try floats around found integer candidates with step 0.01
candidates = []
for theta in [60, 63]:
    for t in [theta + i*0.01 for i in range(-10, 11)]:
        if 0 <= t <= 90:
            cos_theta = math.cos(math.radians(t))
            diff = abs(cos_60 - cos_45 * cos_theta)
            if diff < threshold:
                candidates.append((t, diff))

for t, diff in sorted(candidates):
    cos_theta = math.cos(math.radians(t))
    print(f"θ = {t:.4f}°, cos(θ) = {cos_theta:.9f}, diff = {diff:.2e}")
```

