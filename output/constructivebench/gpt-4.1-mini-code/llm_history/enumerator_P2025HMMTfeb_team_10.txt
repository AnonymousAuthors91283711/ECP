[write_program]
The problem asks to explore integers \( n \) for which there exist positive integers \( a,b,c \) such that \(\gcd(a^2+b^2+c^2, a b c) = n\). We want to enumerate possible \( n \) by searching over small triples \((a,b,c)\) and printing distinct gcds found.

We'll:
- Search \(a,b,c\) up to 20 for feasibility.
- Compute gcd for each triple.
- Print each new gcd immediately.
- At the end, print all found gcds for conjecture.

```python
import math

found = set()
limit = 20

for a in range(1, limit+1):
    for b in range(1, limit+1):
        for c in range(1, limit+1):
            s = a*a + b*b + c*c
            p = a*b*c
            g = math.gcd(s, p)
            if g not in found:
                found.add(g)
                print(f"gcd({a}^2+{b}^2+{c}^2, {a}*{b}*{c}) = {g}")

print("\nDistinct gcd values found:")
print(sorted(found))
```
