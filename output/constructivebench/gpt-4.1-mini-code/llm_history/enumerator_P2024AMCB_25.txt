[write_program]
The problem involves enumerating and reducing the fraction \(((2 \times 2 \times (2 + 2 - 1))^6) / ((2 \times 2)^6)\).

We can compute numerator and denominator exactly, then find their gcd to reduce the fraction to lowest terms.

The program will print numerator/denominator pairs and finally print the reduced fraction.

```python
from math import gcd

def main():
    n = 6
    colorChoices = 2
    patternChoices = 2

    total_configurations = (colorChoices * patternChoices) ** n
    independent_configurations = (colorChoices * patternChoices * (colorChoices + patternChoices - 1)) ** n

    print(f"Total configurations = {total_configurations}")
    print(f"Independent configurations = {independent_configurations}")

    g = gcd(independent_configurations, total_configurations)
    numerator = independent_configurations // g
    denominator = total_configurations // g

    print(f"Reduced fraction: {numerator}/{denominator}")

if __name__ == "__main__":
    main()
```
