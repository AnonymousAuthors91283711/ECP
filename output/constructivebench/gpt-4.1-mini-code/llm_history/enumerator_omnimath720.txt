[write_program]
The problem asks to sum positive integers \( n \) such that there exists an integer \( m \) with \( m^2 = n^2 - 3000 \). This means \( n^2 - m^2 = 3000 \), or equivalently \((n-m)(n+m) = 3000\).

Since \( n, m \) are integers and \( n > 0 \), both \( n-m \) and \( n+m \) are positive integers with the same parity (because \( 2n = (n-m) + (n+m) \) is even). We can enumerate factor pairs \( (a,b) \) of 3000 with \( a < b \), \( a,b > 0 \), \( a \equiv b \pmod{2} \), and set \( n = (a + b)/2 \). We print all such \( n \) and output their sum.

```python
# Enumerate positive integers n with integer m such that m^2 = n^2 - 3000
# i.e. (n-m)(n+m) = 3000

def main():
    N = 3000
    candidates = []
    # Enumerate factor pairs (a,b) of N with a < b
    for a in range(1, int(N**0.5) + 1):
        if N % a != 0:
            continue
        b = N // a
        if a >= b:
            continue
        # Check parity: both a,b even or both odd
        if (a % 2) != (b % 2):
            continue
        n = (a + b) // 2
        # n must be positive integer, which it is since a,b > 0
        # Check if (b - a)/2 = m is integer
        m_candidate = (b - a) // 2
        # m is integer automatically if a,b have same parity
        # Print each n immediately
        print(n)
        candidates.append(n)
    print("Sum of all such n:", sum(candidates))

if __name__ == "__main__":
    main()
```
