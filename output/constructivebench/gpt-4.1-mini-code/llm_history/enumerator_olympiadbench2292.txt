[write_program]
The problem involves finding all integer pairs (K, L) satisfying the Diophantine equation K² + 3L² = 5² + 4² - 5*4. We first calculate the right side: 25 + 16 - 20 = 21. So we want all integer pairs (K, L) such that K² + 3L² = 21.

We can enumerate possible L values within reasonable bounds where 3L² ≤ 21, and for each, check if 21 - 3L² is a perfect square to find K.

```python
# Enumerate integer solutions (K,L) to K^2 + 3L^2 = 21
target = 21

# Since 3L^2 ≤ 21, |L| ≤ sqrt(7)
max_L = int((target / 3) ** 0.5) + 1

print(f"Solutions (K, L) to K^2 + 3*L^2 = {target}:")

for L in range(-max_L, max_L + 1):
    rhs = target - 3 * L * L
    if rhs < 0:
        continue
    # Check if rhs is a perfect square
    K_sq = rhs
    K = int(K_sq ** 0.5)
    if K * K == K_sq:
        print(f"(K, L) = ({K}, {L})")
        if K != 0:
            print(f"(K, L) = ({-K}, {L})")  # negative K also works
```
