[write_program]
The problem is to count the number of 5-digit numbers \( n \) between 10000 and 99999 for which the sum of the first three digits (i.e., \( n / 100 \)) and the last two digits (i.e., \( n \% 100 \)) is divisible by 11. 

We will enumerate all 5-digit numbers, check the condition \((\lfloor n/100 \rfloor + n \% 100) \% 11 == 0\), and print each number that satisfies this. Then we print the total count.

```python
def main():
    count = 0
    for n in range(10000, 100000):
        front = n // 100      # first 3 digits
        back = n % 100        # last 2 digits
        if (front + back) % 11 == 0:
            print(n)
            count += 1
    print("Count:", count)

if __name__ == "__main__":
    main()
```
