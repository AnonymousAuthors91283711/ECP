[write_program]
The problem is about finding natural numbers \( n < 100 \) that have exactly 6 divisors, and these divisors satisfy the "loose" condition: for any two divisors \( a < b \), we have \( b \geq 2a \).

Let's write a Python program to enumerate such numbers and print each as we find them. We'll verify the condition and sum the values. We print each candidate number immediately, then print the sum at the end.

```python
def divisors(n):
    divs = []
    i = 1
    while i*i <= n:
        if n % i == 0:
            divs.append(i)
            if i*i != n:
                divs.append(n//i)
        i += 1
    return sorted(divs)

def is_loose(n):
    divs = divisors(n)
    if len(divs) != 6:
        return False
    for i in range(len(divs)):
        for j in range(i+1, len(divs)):
            if divs[j] < 2 * divs[i]:
                return False
    return True

loose_numbers = []
total = 0
print("Loose numbers n < 100 with exactly 6 divisors and divisor gaps:")
for n in range(1, 100):
    if is_loose(n):
        print(n)
        loose_numbers.append(n)
        total += n
print("Sum:", total)
```
