[write_program]
The problem asks us to count integer pairs (p, q) with p, q in [-20,20] such that the quadratic equations x² + p x + q = 0 and x² + q x + p = 0 share a common root x (complex).

To solve this, we'll:
- Enumerate p and q in [-20,20].
- For each (p,q), solve both quadratics symbolically.
- Check if they share a root.
- Print all such (p,q) and count them.
- Finally print the total count.

Because the coefficients are integers and the problem is symmetric, this small brute force approach is feasible.

```python
from sympy import symbols, Eq, solve

# Variables
x = symbols('x')

count = 0
print("Checking integer pairs (p,q) in [-20,20]:")
for p in range(-20, 21):
    for q in range(-20, 21):
        # Polynomials: x^2 + p x + q and x^2 + q x + p
        # Find roots of first:
        roots1 = solve(Eq(x**2 + p*x + q, 0), x)
        # Find roots of second:
        roots2 = solve(Eq(x**2 + q*x + p, 0), x)
        # Check if any root in roots1 is also root of second polynomial
        # Because roots can be symbolic, check if root satisfies second eq exactly
        common_root_found = False
        for r in roots1:
            # Substitute r into second polynomial and simplify
            val = (r**2 + q*r + p).simplify()
            if val == 0:
                common_root_found = True
                break
        if common_root_found:
            print(f"(p,q)=({p},{q}) shares a common root")
            count += 1

print(f"Total number of such pairs: {count}")
```

