[write_program]
The problem involves finding \( n \in [0,100] \) such that

\[
(10 \cdot (1 + \frac{n}{100}) \cdot 75 \cdot (1 - \frac{n}{100})) \times (15 \cdot (1 + \frac{n}{100}) \cdot 75 \cdot (1 - \frac{n}{100})) = 345600.
\]

We want to enumerate possible \( n \) values that satisfy this, printing exact values if possible and approximate solutions otherwise.

The expression simplifies to

\[
(10 \times 75 \times (1 + \frac{n}{100})(1 - \frac{n}{100})) \times (15 \times 75 \times (1 + \frac{n}{100})(1 - \frac{n}{100})) = 345600.
\]

Let \( x = 1 + \frac{n}{100} \) and \( y = 1 - \frac{n}{100} \). Then

\[
(750 x y) \times (1125 x y) = 345600.
\]

The product is

\[
750 \times 1125 \times (x y)^2 = 345600.
\]

Calculate \( 750 \times 1125 = 843750 \), so

\[
843750 (x y)^2 = 345600 \implies (x y)^2 = \frac{345600}{843750} = \frac{3456}{8437.5}.
\]

Recall that \( x y = (1 + \frac{n}{100})(1 - \frac{n}{100}) = 1 - \frac{n^2}{10000} \).

So

\[
(1 - \frac{n^2}{10000})^2 = \frac{345600}{843750}.
\]

Solve for \( n \), then enumerate \( n \) near roots found to confirm.

Below is a Python program enumerating \( n \in [0,100] \) in increments of 0.01, printing \( n \) where the equation holds approximately.

```python
# Enumeration program for values of n in [0,100] solving
# (10*(1+n/100)*75*(1-n/100))*(15*(1+n/100)*75*(1-n/100)) = 345600

def lhs(n):
    term = (1 + n/100) * (1 - n/100)
    return 10 * term * 75 * 15 * term * 75

target = 345600

threshold = 1e-2  # tolerance for equality

print("Enumerating approximate solutions for n in [0,100]:")
n = 0.0
while n <= 100:
    val = lhs(n)
    diff = val - target
    if abs(diff) < threshold:
        print(f"n = {n:.4f}, lhs = {val:.6f}")
    n += 0.01

# After enumeration, print approximate extremal solutions by analyzing printed values manually.
```

This adheres to the token limit and prints the answers immediately when close, allowing conjecture and further proof.
