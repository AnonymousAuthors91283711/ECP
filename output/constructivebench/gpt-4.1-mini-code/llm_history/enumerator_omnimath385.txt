[write_program]
The problem involves finding the number of real roots of the cubic polynomial \(P(x) = x^3 - x^2 - x + 2\). We want to enumerate the roots (exact or approximate) to conjecture their count.

```python
# Enumerate real roots of P(x) = x^3 - x^2 - x + 2 by checking sign changes on integer intervals

def P(x):
    return x**3 - x**2 - x + 2

print("Checking roots of P(x) = x^3 - x^2 - x + 2")

# Evaluate P at integer points in some range to detect sign changes
for x in range(-5, 6):
    val = P(x)
    print(f"P({x}) = {val}")

print("Checking intervals for roots:")

roots_found = 0
for a in range(-5, 5):
    fa = P(a)
    fb = P(a+1)
    if fa == 0:
        print(f"Exact root at x = {a}")
        roots_found += 1
    elif fa * fb < 0:
        # There's at least one root in (a, a+1)
        print(f"Root in ({a}, {a+1})")
        roots_found += 1

print(f"Total roots found (counting sign changes and exact zeros): {roots_found}")
```

