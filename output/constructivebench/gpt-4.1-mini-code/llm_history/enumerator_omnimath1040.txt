[write_program]
The problem considers scoring nproblems = 6 problems, each scored either 0, 1, or 7 points. We want to know how many distinct total scores are achievable by summing those six scores.

To study this, we enumerate all 3^6 = 729 score combinations where each problem score âˆˆ {0,1,7}, compute their sums, and collect distinct total scores. Then print each new distinct sum immediately.

```python
# Enumerate distinct sums from scoring 6 problems each with 0,1,7 points
nproblems = 6
scores = [0, 1, 7]

distinct_sums = set()

def backtrack(i=0, current_sum=0):
    if i == nproblems:
        if current_sum not in distinct_sums:
            distinct_sums.add(current_sum)
            print(current_sum)
        return
    for s in scores:
        backtrack(i+1, current_sum + s)

backtrack()
print(f"Total distinct sums: {len(distinct_sums)}")
```
