[write_program]
The problem considers cubic polynomials with integer coefficients \(a,b,c\) in \([-20,20]\), of the form \(x^3 + a x^2 + b x + c\). We seek polynomials where the value at \(x=2\) is equal to the value at exactly one other integer \(m \neq 2\), and no other integer yields the same value as at 2. The task is to count such polynomials.

We will enumerate all \(a,b,c\) in \([-20,20]\), compute \(p(2)\), then check for exactly one distinct integer \(m\neq 2\) with the same polynomial value. We limit \(m\) also in \([-20,20]\) (as larger values would create values likely outside the range). The program prints each valid polynomial's coefficients and the corresponding \(m\), then finally the count.

```python
# Enumerate cubic polynomials p(x) = x^3 + a x^2 + b x + c with a,b,c in [-20,20]
# Find those where exactly one m != 2 (m in [-20,20]) satisfies p(m) = p(2)
# Print each valid (a,b,c,m) and at the end print count

def p_val(a, b, c, x):
    return x**3 + a*x**2 + b*x + c

a_range = range(-20, 21)
b_range = range(-20, 21)
c_range = range(-20, 21)
m_range = range(-20, 21)

count = 0
for a in a_range:
    for b in b_range:
        for c in c_range:
            val_at_2 = p_val(a, b, c, 2)
            count_eq = 0
            m_eq = None
            for m in m_range:
                if m != 2 and p_val(a, b, c, m) == val_at_2:
                    count_eq += 1
                    m_eq = m
                    if count_eq > 1:
                        break
            if count_eq == 1:
                print(f"a={a}, b={b}, c={c}, matching m={m_eq}")
                count += 1
print(f"Total polynomials matching condition: {count}")
```
