[write_program]
The problem deals with sequences \( a: \{0, \ldots, 9\} \to \mathbb{Z} \) satisfying:
- a Fibonacci-type relation \( a_{n+2} = a_{n+1} + a_n \) for \( n = 0, \ldots, 7 \),
- \( a_9 = 2002 \),
- all \( a_n > 0 \).

We want to enumerate all such sequences and count them.

Since the relation is fixed (like Fibonacci), the sequence is determined by \( a_0 \) and \( a_1 \). The 9th term \( a_9 \) is a linear combination of these two with Fibonacci coefficients:
\[ a_9 = F_8 a_1 + F_7 a_0 = 2002 \]
where \( F_0 = 0, F_1 = 1, F_2 = 1, ..., F_8 = 21 \), \( F_7 = 13 \).

We will:
- Enumerate positive integer pairs \( (a_0, a_1) \) with \( a_n > 0 \), such that \( 13 a_0 + 21 a_1 = 2002 \).
- Check that all \( a_n > 0 \) for \( n=0..9 \).
- Print each valid sequence.

```python
# Enumerate sequences (a0,a1) with positive integers verifying 13*a0 + 21*a1=2002,
# and all terms positive for 10-term fib relation a_{n+2}=a_{n+1}+a_n.
# Then count how many such sequences exist.

F = [0,1]
for _ in range(2,10):
    F.append(F[-1]+F[-2])

target = 2002
count = 0
# a9 = 13*a0 + 21*a1 = 2002
# a0,a1 > 0 integers
# Max a0: floor(2002/13) = 154
for a0 in range(1, 155):
    rem = target - 13*a0
    if rem <= 0:
        continue
    if rem % 21 == 0:
        a1 = rem // 21
        if a1 <= 0:
            continue
        # Compute full sequence a_n = F_{n-1}*a1 + F_{n-2}*a0 for n>=2
        # Base: a0, a1
        seq = [a0, a1]
        for n in range(2,10):
            val = seq[n-1] + seq[n-2]
            if val <= 0:
                break
            seq.append(val)
        else:
            # all positive
            if seq[9]==2002:
                count += 1
                print("Sequence", count, ":", seq)

print("Total sequences found:", count)
```
