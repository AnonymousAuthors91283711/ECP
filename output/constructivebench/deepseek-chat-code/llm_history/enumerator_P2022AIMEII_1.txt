[write_program]
This problem involves finding the smallest natural number n such that there exist natural numbers k and m satisfying two equations. The first equation relates m and k linearly, while the second introduces a more complex relationship. We'll enumerate possible values of k and m that satisfy both equations, then find the minimal n = k + 50.

```python
def find_min_n():
    # We'll iterate through possible k values to find those satisfying both equations
    for k in range(1, 1000):  # Reasonable upper bound
        # From first equation: 5m = 12k => m = (12k)/5
        if (12 * k) % 5 != 0:
            continue
        m = (12 * k) // 5
        
        # Check second equation: 11(m + 50) = 25(k + 50)
        left = 11 * (m + 50)
        right = 25 * (k + 50)
        if left == right:
            n = k + 50
            print(f"Found solution: k={k}, m={m}, n={n}")
            return n  # Since we're looking for minimal n, return first found
    
    print("No solution found in range")
    return None

find_min_n()
```
