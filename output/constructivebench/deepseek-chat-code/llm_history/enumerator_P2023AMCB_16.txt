[write_program]
The problem asks to find the largest natural number x that cannot be expressed as 6a + 10b + 15c for non-negative integers a, b, c. This is similar to the coin problem (Frobenius number) for three coin denominations. We'll write a program to find all numbers that cannot be expressed this way up to a reasonable threshold, then identify the largest one.

```python
def is_expressible(x):
    max_a = x // 6 + 1
    max_b = x // 10 + 1
    max_c = x // 15 + 1
    for a in range(max_a):
        for b in range(max_b):
            remaining = x - 6*a - 10*b
            if remaining >= 0 and remaining % 15 == 0:
                return True
    return False

def main():
    threshold = 100  # Sufficiently large to find the answer
    non_expressible = []
    
    for x in range(1, threshold + 1):
        if not is_expressible(x):
            non_expressible.append(x)
            print(f"Found non-expressible: {x}")
    
    if non_expressible:
        largest = max(non_expressible)
        print(f"\nLargest non-expressible number below {threshold}: {largest}")
        digit_sum = sum(int(d) for d in str(largest))
        print(f"Sum of its digits: {digit_sum}")

if __name__ == "__main__":
    main()
```
