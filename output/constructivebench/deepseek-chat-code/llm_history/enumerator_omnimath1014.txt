[write_program]
This problem is a cryptarithmetic puzzle where each letter represents a unique digit (0-9) and the equation FORTY + TEN + TEN = SIXTY must hold. The goal is to find all possible values of SIXTY that satisfy the conditions.

We'll write a Python program to enumerate all possible digit assignments that satisfy:
1. All letters represent distinct digits (F, O, R, T, Y, E, N, S, I, X)
2. F ≠ 0 and S ≠ 0 (since they are leading digits)
3. The equation FORTY + TEN + TEN = SIXTY holds

The program will systematically check all possible digit assignments and print valid SIXTY values.

```python
from itertools import permutations

def solve():
    digits = range(10)
    letters = ['F', 'O', 'R', 'T', 'Y', 'E', 'N', 'S', 'I', 'X']
    solutions = set()
    
    # We need to assign distinct digits to all letters
    for p in permutations(digits, 10):
        F, O, R, T, Y, E, N, S, I, X = p
        
        # Check leading digits are not zero
        if F == 0 or S == 0:
            continue
            
        # Calculate the numbers
        FORTY = 10000*F + 1000*O + 100*R + 10*T + Y
        TEN = 100*T + 10*E + N
        SIXTY = 10000*S + 1000*I + 100*X + 10*T + Y
        
        # Check the equation
        if FORTY + TEN + TEN == SIXTY:
            solutions.add(SIXTY)
            print(SIXTY)
    
    if solutions:
        print("All possible solutions:", sorted(solutions))
    else:
        print("No solutions found")

solve()
```
