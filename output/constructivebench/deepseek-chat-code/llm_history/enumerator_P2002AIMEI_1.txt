[write_program]
This problem involves finding the smallest positive integer k such that there exist coprime integers m and n with k = m + n, and m/n equals a specific rational expression. We'll compute the exact value of the rational expression and then find the minimal m + n for reduced fractions equal to this value.

```python
import math
from fractions import Fraction

def solve():
    # Compute the exact rational value from the problem
    numerator = 26**3 * 10 + 10**3 * 26 - 26 * 10
    denominator = 26**3 * 10**3
    value = Fraction(numerator, denominator)
    
    # Simplify the fraction
    simplified = value.numerator, value.denominator
    gcd_val = math.gcd(simplified[0], simplified[1])
    m = simplified[0] // gcd_val
    n = simplified[1] // gcd_val
    
    # The answer is m + n for the reduced fraction
    print(f"Found solution: m={m}, n={n}, k={m+n}")
    print(f"Final answer: {m+n}")

if __name__ == "__main__":
    solve()
```
