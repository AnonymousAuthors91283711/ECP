[write_program]
This problem asks for the number of distinct residues modulo 125 that can be expressed as n^100 mod 125 for integer n. We'll write a Python program to enumerate all possible residues and count the distinct ones.

The approach:
1. Since 125 = 5^3, we can use properties of exponents modulo prime powers
2. The Euler totient function φ(125) = 100, so exponents modulo 100 are relevant
3. We'll check residues systematically up to 124 (mod 125)
4. For efficiency, we'll use pow() with modulus and only check representatives

```python
def main():
    modulus = 125
    phi = 100  # Euler's totient function φ(125)
    seen = set()
    
    # Since n^100 mod 125 depends on n mod 125, we only need to check 0..124
    for n in range(modulus):
        residue = pow(n, 100, modulus)
        seen.add(residue)
    
    # Output all distinct residues found
    print("Distinct residues found:", sorted(seen))
    print("Number of distinct residues:", len(seen))

if __name__ == "__main__":
    main()
```
