[write_program]
This problem asks for the largest difference between a 3-digit number ABC and its reverse CBA, where B² = A*C and A, B, C are distinct digits. We'll enumerate all valid 3-digit numbers meeting these conditions and compute their differences with their reverses.

```python
def solve():
    max_diff = 0
    for a in range(1, 10):  # A can't be 0 as it's a 3-digit number
        for b in range(0, 10):
            if b == a: continue  # digits must be distinct
            for c in range(0, 10):
                if c == a or c == b: continue  # digits must be distinct
                if b * b != a * c: continue  # must satisfy B² = A*C
                num = 100*a + 10*b + c
                rev = 100*c + 10*b + a
                diff = num - rev
                if diff > max_diff:
                    max_diff = diff
                    print(f"New max difference: {diff} from {num} - {rev}")
    print(f"Final maximum difference: {max_diff}")

solve()
```
