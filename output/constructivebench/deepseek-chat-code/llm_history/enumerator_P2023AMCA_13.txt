[write_program]
This problem involves finding the smallest positive integer n where:
1. n = L + R (L and R are natural numbers)
2. 2*L = R
3. There exists a total number of games = n*(n-1)/2 (triangular number)
4. The wins are split between L and R teams with 5*wins_L = 7*wins_R

We'll write a Python program to enumerate possible n values and check these conditions.

```python
def find_min_n():
    n = 1
    while True:
        n += 1
        # Check if n can be split into L and R with 2L = R
        if n % 3 != 0:
            continue
        L = n // 3
        R = 2 * L
        
        total_games = n * (n - 1) // 2
        # Check if wins can be split 5:7 ratio
        if total_games % 12 != 0:
            continue
        wins_R = total_games // 12 * 5
        wins_L = total_games // 12 * 7
        
        print(f"n={n}: L={L}, R={R}, total_games={total_games}, wins_L={wins_L}, wins_R={wins_R}")
        
        # Since we're looking for minimal n, return first valid one
        return n

print("Searching for minimal n...")
min_n = find_min_n()
print(f"\nMinimal n found: {min_n}")
```
