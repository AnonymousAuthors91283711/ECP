[write_program]
This problem asks for all pairs of positive integers (m, n) where (m*n - 1) divides (n² - n + 1)². We'll write a Python program to enumerate such pairs up to a reasonable limit to help identify patterns.

The approach:
1. Iterate n from 1 to a reasonable limit (we'll use 100)
2. For each n, compute the target value (n² - n + 1)²
3. Find all divisors d of this target value
4. For each divisor d, compute m = (d + 1)/n and check if it's an integer
5. Collect valid (m, n) pairs where m is positive

```python
def find_pairs(max_n=100):
    for n in range(1, max_n + 1):
        target = (n**2 - n + 1)**2
        # Find all divisors of target
        divisors = set()
        for d in range(1, int(target**0.5) + 1):
            if target % d == 0:
                divisors.add(d)
                divisors.add(target // d)
        # Check each divisor
        for d in divisors:
            if (d + 1) % n == 0:
                m = (d + 1) // n
                if m > 0:
                    print(f"Found pair: ({m}, {n})")

if __name__ == "__main__":
    print("Searching for pairs (m,n) where (m*n-1) divides (n²-n+1)²...")
    find_pairs()
```
