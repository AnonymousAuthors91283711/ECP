[write_program]
This problem asks for the set of natural numbers n that can be uniquely expressed as the sum of 8 distinct positive integers. We'll write a Python program to enumerate all possible sums of 8 distinct positive integers and identify those n that have exactly one such combination.

The approach:
1. Generate all combinations of 8 distinct positive integers
2. Calculate their sums
3. Track how many combinations produce each sum
4. Output sums that have exactly one combination

We'll limit our search to reasonable bounds (sums up to 100) for demonstration.

```python
from itertools import combinations

def find_unique_sums():
    max_sum = 100  # reasonable upper bound for demonstration
    sum_counts = {}

    # The minimal sum is 1+2+...+8 = 36
    # The maximal sum in our search is max_sum
    for s in combinations(range(1, max_sum), 8):
        current_sum = sum(s)
        if current_sum > max_sum:
            continue
        if current_sum in sum_counts:
            sum_counts[current_sum] += 1
        else:
            sum_counts[current_sum] = 1

    # Find sums with exactly one combination
    unique_sums = [n for n, count in sum_counts.items() if count == 1]
    unique_sums.sort()

    print("Sums with exactly one combination of 8 distinct positive integers:")
    for n in unique_sums:
        print(n)

    print("\nComplete set found up to sum", max_sum, ":")
    print(unique_sums)

find_unique_sums()
```
