[write_program]
This problem involves finding the smallest natural number n < 1000 that satisfies a sequence of conditions involving doubling and adding 50, with final checks against 1000. We need to find the minimal n where:
1. s1 = 2*n
2. b2 = s1 + 50
3. s2 = 2*b2 ≥ 1000
4. 2*(s2 + 50) ≥ 1000
Additionally, we need the sum of its digits.

We'll write a Python program to enumerate all possible n values from 1 upwards, checking these conditions, and print the first valid n along with its digit sum.

```python
def digit_sum(n):
    return sum(int(d) for d in str(n))

def find_min_n():
    for n in range(1, 1000):
        s1 = 2 * n
        b2 = s1 + 50
        s2 = 2 * b2
        if s2 >= 1000 and (2 * (s2 + 50)) >= 1000:
            print(f"Found valid n: {n}, digit sum: {digit_sum(n)}")
            return  # Stop after finding the minimal n
    print("No valid n found under 1000")

find_min_n()
```
