[write_program]
This problem involves finding the maximum value of the function (p₁ - c) * (1 - p₁ / u) on the interval [c, u], where 0 < u and 0 ≤ c ≤ u. The solution requires finding the critical point of this quadratic function and evaluating it at the endpoints.

We'll write a Python program to:
1. Symbolically compute the derivative of the function
2. Find the critical point by solving when derivative equals zero
3. Evaluate the function at critical point and endpoints
4. Determine the maximum value and corresponding p value

```python
import sympy as sp

def find_max_p_r(u_val, c_val):
    # Define symbolic variables
    p1 = sp.symbols('p1')
    
    # Define the function and its derivative
    f = (p1 - c_val) * (1 - p1 / u_val)
    f_prime = sp.diff(f, p1)
    
    # Find critical point by solving f'(p) = 0
    critical_points = sp.solve(f_prime, p1)
    valid_critical_points = [cp for cp in critical_points if c_val <= cp <= u_val]
    
    # Evaluate function at critical points and endpoints
    candidates = []
    if valid_critical_points:
        candidates.append((valid_critical_points[0], f.subs(p1, valid_critical_points[0])))
    candidates.append((c_val, f.subs(p1, c_val)))
    candidates.append((u_val, f.subs(p1, u_val)))
    
    # Find maximum value
    max_p, max_r = max(candidates, key=lambda x: x[1])
    return max_p, max_r

# Example usage with sample parameters
sample_params = [
    (4.0, 0.0),
    (4.0, 2.0),
    (10.0, 5.0),
    (1.0, 0.5)
]

for u, c in sample_params:
    p, r = find_max_p_r(u, c)
    print(f"u={u}, c={c} -> p={p}, r={r}")
```
