[write_program]
This problem involves finding a unique circle that is tangent to a parabola and another curve. We'll approach it by:
1. Finding the circle tangent to parabola y=x² at two points
2. Finding where it's tangent to the curve x=sqrt(y³/(1-y))
3. Solving the system of equations numerically

```python
import numpy as np
from scipy.optimize import fsolve

def equations(vars):
    h, k, r, x1, x2, y0 = vars
    # Circle tangent to parabola y=x^2 at x1 and x2
    eq1 = (x1 - h)**2 + (x1**2 - k)**2 - r**2
    eq2 = (x2 - h)**2 + (x2**2 - k)**2 - r**2
    eq3 = 2*(x1 - h) + 2*(x1**2 - k)*2*x1  # Derivative condition at x1
    eq4 = 2*(x2 - h) + 2*(x2**2 - k)*2*x2  # Derivative condition at x2
    
    # Circle tangent to x=sqrt(y^3/(1-y)) at y0
    x0 = np.sqrt(y0**3 / (1 - y0))
    eq5 = (x0 - h)**2 + (y0 - k)**2 - r**2
    # Derivative condition
    numer = 3*y0**2*(1-y0) + y0**3
    denom = 2*np.sqrt(y0**3/(1-y0)) * (1-y0)**2
    dxdy = numer / denom
    eq6 = 2*(x0 - h)*dxdy + 2*(y0 - k)
    
    return [eq1, eq2, eq3, eq4, eq5, eq6]

# Initial guesses
initial_guess = [0, 0.5, 0.5, -1, 1, 0.5]

solution = fsolve(equations, initial_guess)
h, k, r, x1, x2, y0 = solution

print(f"Solution found:")
print(f"h = {h:.6f}, k = {k:.6f}, r = {r:.6f}")
print(f"x1 = {x1:.6f}, x2 = {x2:.6f}, y0 = {y0:.6f}")
```
