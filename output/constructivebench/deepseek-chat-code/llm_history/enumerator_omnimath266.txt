[write_program]
This problem asks for the minimal number of real roots among complex polynomials of degree 2006 with exactly 1006 distinct absolute values of roots. We'll explore smaller cases to find a pattern.

The key observations:
1. Non-real roots come in complex conjugate pairs (same absolute value)
2. Real roots have absolute values that may or may not be distinct
3. We need to maximize the number of roots sharing absolute values to minimize real roots

For degree n with m distinct absolute values, the minimal number of real roots seems to be max(0, 2m - n).

```python
def minimal_real_roots(n, m):
    """Calculate minimal real roots for degree n poly with m distinct absolute values"""
    return max(0, 2 * m - n)

# Test cases for smaller degrees to verify the pattern
test_cases = [
    (4, 2),  # Expected min real roots: 0
    (4, 3),  # Expected: 2
    (6, 3),  # Expected: 0
    (6, 4),  # Expected: 2
    (2006, 1006)  # The actual problem case
]

print("Testing pattern for minimal real roots:")
for n, m in test_cases:
    print(f"Degree {n}, {m} distinct |roots|: minimal real roots = {minimal_real_roots(n, m)}")

# Final answer for the problem
n = 2006
m = 1006
print(f"\nFor degree {n} with {m} distinct absolute values:")
print(f"Minimal number of real roots is {minimal_real_roots(n, m)}")
```
