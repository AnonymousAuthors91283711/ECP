[write_program]
This problem involves finding all 3-digit numbers `n = 100h + 10t + u` (where h,t,u are digits 1-9) such that for every positive integer m, there exists exactly one positive integer k where m = 100hk + 10tk + uk. This implies the ratio h:t:u must be unique for scaling.

The solution requires finding all 3-digit numbers where the digits have no common factor (gcd(h,t,u)=1) since otherwise multiple scalings would be possible. We'll enumerate all 3-digit numbers with distinct digit ratios.

```python
import math

def find_unique_ratio_numbers():
    results = []
    for h in range(1, 10):
        for t in range(1, 10):
            for u in range(1, 10):
                # Check if digits have gcd 1
                if math.gcd(math.gcd(h, t), u) == 1:
                    n = 100*h + 10*t + u
                    results.append(n)
                    print(n)  # Stream partial results
    
    print("Sum of all valid numbers:", sum(results))

find_unique_ratio_numbers()
```
