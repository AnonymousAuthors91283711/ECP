[write_program]
This problem involves counting complex roots of unity that satisfy certain conditions. We need to find all 24th roots of unity (solutions to z^24=1) and then count how many of them also satisfy Im(z^6)=0. The roots of unity lie on the unit circle, and we can represent them as e^(2πik/24) for k=0..23. For each root, we'll compute z^6 and check if its imaginary part is zero.

```python
import cmath

def solve():
    count = 0
    for k in range(24):
        # Compute the 24th root of unity
        z = cmath.exp(2j * cmath.pi * k / 24)
        # Compute z^6
        z6 = z**6
        # Check if imaginary part is zero (with floating point tolerance)
        if abs(z6.imag) < 1e-10:
            count += 1
            print(f"Found solution #{count}: k = {k}, angle = {k*15}°")
    print(f"Total solutions: {count}")

solve()
```
