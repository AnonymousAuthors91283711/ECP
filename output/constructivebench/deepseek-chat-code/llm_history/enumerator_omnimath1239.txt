[write_program]
This problem involves finding integer values a, b, c such that two quadratic polynomials have gcd (X+1) and lcm (X³-4X²+X+6). We'll enumerate small integer values for a, b, c to find solutions satisfying the condition.

The approach is:
1. Compute the gcd and lcm of two quadratics symbolically
2. Check if they match the given conditions
3. Find the sum a+b+c for valid triples

```python
from math import gcd as math_gcd
from sympy import symbols, gcdex, lcm, Poly

def check_condition(a, b, c):
    x = symbols('x')
    p1 = Poly(x**2 + a*x + b, x)
    p2 = Poly(x**2 + b*x + c, x)
    
    # Compute GCD
    gcd_poly = gcdex(p1, p2)[0]
    if gcd_poly != Poly(x + 1, x):
        return False
    
    # Compute LCM
    lcm_poly = lcm(p1, p2)
    target_lcm = Poly(x**3 - 4*x**2 + x + 6, x)
    if lcm_poly != target_lcm:
        return False
    
    return True

# Search small integer values
for a in range(-5, 6):
    for b in range(-5, 6):
        for c in range(-5, 6):
            if check_condition(a, b, c):
                print(f"Found solution: a={a}, b={b}, c={c}, sum={a+b+c}")
                # Once we find one solution, we can stop since the problem suggests a unique answer
                exit()

print("No solution found in search range")
```
