[write_program]
This problem involves finding a unique pair of positive coprime integers (a, b) that satisfies a specific equation involving binomial coefficients and powers of a and b, with the sum a + b being the answer. We'll write a Python program to enumerate possible pairs (a, b) that satisfy the given conditions.

The key steps are:
1. Simplify the given equation to find a relationship between a and b
2. Enumerate possible pairs (a, b) that satisfy the simplified equation and are coprime
3. Find the pair where a + b is minimized (since the problem asks for a unique solution)

```python
import math

def find_ab_pairs():
    # The given equation simplifies to: C(2000,2)*a = C(2000,3)*b
    # Which further simplifies to: (2000*1999/2)*a = (2000*1999*1998/6)*b
    # Simplifying: 3a = 1998b => a = 666b
    # So we need coprime pairs where a = 666b
    
    max_b = 20  # Reasonable upper bound to search for b
    
    for b in range(1, max_b + 1):
        a = 666 * b
        if math.gcd(a, b) == 1:  # Check if coprime
            print(f"Found pair: a={a}, b={b}, sum={a + b}")
    
    # Since a = 666b and gcd(a,b) = gcd(666b,b) = b*gcd(666,1) = b
    # For them to be coprime, b must be 1
    # Therefore the unique solution is a=666, b=1
    print("\nThe unique solution is a=666, b=1 with sum 667")

if __name__ == "__main__":
    find_ab_pairs()
```
