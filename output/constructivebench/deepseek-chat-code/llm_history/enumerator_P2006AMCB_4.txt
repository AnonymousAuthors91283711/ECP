[write_program]
This problem involves finding the exact percentage difference between the actual change and an expected answer. We'll write a Python program to enumerate possible percentage differences for small monetary values, looking for patterns or exact matches.

The program will:
1. Calculate the total cost of items (7.99 + 4.99 + 2.99 + 1.99 + 0.99)
2. Compute the change from $20
3. Calculate the percentage of change relative to $20
4. Look for exact or near matches to potential answers

```python
def main():
    # Calculate total cost
    items = [7.99, 4.99, 2.99, 1.99, 0.99]
    total = sum(items)
    
    # Calculate change from $20
    change = 20 - total
    
    # Calculate percentage of change
    percentage = (change / 20) * 100
    
    # Print intermediate values for verification
    print(f"Total cost: {total:.2f}")
    print(f"Change: {change:.2f}")
    print(f"Percentage: {percentage:.2f}%")
    
    # Check for exact decimal representations
    exact_percentage = round(percentage, 2)
    print(f"Rounded percentage: {exact_percentage:.2f}%")
    
    # Check if percentage is a simple fraction
    for denom in range(1, 21):
        for numer in range(denom + 1):
            frac = numer / denom
            if abs(percentage - frac * 100) < 1e-6:
                print(f"Exact fraction match: {numer}/{denom} = {frac*100:.2f}%")

if __name__ == "__main__":
    main()
```
