[write_program]
The problem asks for the sum of all positive integers n where n² - 3000 is a perfect square. We need to find all n such that there exists an integer m with m² = n² - 3000. This can be rewritten as n² - m² = 3000, which factors into (n-m)(n+m) = 3000.

We'll write a Python program to:
1. Find all factor pairs (d1, d2) of 3000 where d1*d2=3000 and d1<d2
2. For each pair, solve n = (d1+d2)/2 and m = (d2-d1)/2
3. Check if n and m are integers and n is positive
4. Sum all valid n values

```python
def find_valid_n():
    target = 3000
    factors = set()
    # Find all factor pairs of 3000
    for d in range(1, int(target**0.5) + 1):
        if target % d == 0:
            factors.add((d, target // d))
    
    valid_n = set()
    for d1, d2 in factors:
        # n = (d1 + d2)/2 must be integer
        if (d1 + d2) % 2 != 0:
            continue
        n = (d1 + d2) // 2
        # m = (d2 - d1)/2 must be integer (implied by above)
        if n > 0:
            valid_n.add(n)
    
    # Print each valid n found
    for n in sorted(valid_n):
        print(f"Found valid n: {n}")
    
    # Calculate and print the sum
    total = sum(valid_n)
    print(f"Sum of all valid n: {total}")

find_valid_n()
```
