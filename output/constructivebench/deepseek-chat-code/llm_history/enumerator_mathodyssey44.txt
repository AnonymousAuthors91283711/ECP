[write_program]
This problem involves finding the largest finite set S of integers where for any two distinct elements p,q in S, there exists a non-zero quadratic polynomial (with coefficients from S) that has both p and q as roots. We'll write a Python program to enumerate possible set sizes and verify the conditions.

The approach:
1. Start with small set sizes and incrementally check larger sizes
2. For each set size, generate all possible integer sets (limited to small absolute values for practicality)
3. Check the condition that every pair has a common quadratic polynomial with coefficients from the set
4. Track the maximum valid set size found

```python
import itertools

def is_valid(S):
    S_list = list(S)
    for p, q in itertools.combinations(S_list, 2):
        found = False
        # Try all possible a,b,c ∈ S with a≠0
        for a in S:
            if a == 0:
                continue
            for b in S:
                for c in S:
                    # Check if both p and q are roots of ax² + bx + c
                    if (a*p*p + b*p + c == 0) and (a*q*q + b*q + c == 0):
                        found = True
                        break
                if found:
                    break
            if found:
                break
        if not found:
            return False
    return True

def find_max_set():
    max_size = 0
    # Limit search to integers between -3 and 3 for practicality
    search_range = range(-3, 4)
    
    for size in range(1, 7):
        found = False
        # Generate all possible sets of current size
        for candidate in itertools.combinations(search_range, size):
            if is_valid(candidate):
                print(f"Found valid set of size {size}: {sorted(candidate)}")
                max_size = size
                found = True
                break  # Just need one example per size
        if not found:
            break  # No larger sets possible
    
    print(f"Maximum valid set size found: {max_size}")

find_max_set()
```
