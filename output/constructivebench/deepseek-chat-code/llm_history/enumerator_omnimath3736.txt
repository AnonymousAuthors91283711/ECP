[write_program]
The problem asks to find all triples of positive integers (p, q, r) where p and q are primes, and (r² - 5q²)/(p² - 1) = 2. We need to enumerate possible solutions efficiently.

Approach:
1. Iterate through small prime values for p and q
2. For each (p,q) pair, compute r² = 2(p²-1) + 5q²
3. Check if r² is a perfect square
4. Output valid triples (p,q,r)

We'll limit the search to primes below 100 for practicality.

```python
import math

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

def find_triples(max_prime=100):
    primes = [p for p in range(2, max_prime) if is_prime(p)]
    for p in primes:
        for q in primes:
            numerator = 2 * (p*p - 1) + 5 * q*q
            r_squared = numerator
            r = int(math.isqrt(r_squared))
            if r * r == r_squared and r > 0:
                print(f"Found triple: ({p}, {q}, {r})")

find_triples()
```
