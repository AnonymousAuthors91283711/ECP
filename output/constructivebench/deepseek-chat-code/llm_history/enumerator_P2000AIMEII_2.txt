[write_program]
This problem asks for the number of integer pairs (x,y) such that x² - y² = 2000². We can factor this as (x-y)(x+y) = 2000². The key is to enumerate all factor pairs (d1,d2) of 2000² where d1 = x-y and d2 = x+y, then count the valid (x,y) pairs that result in integers.

The program will:
1. Factorize 2000 to get its prime factors
2. Generate all divisors of 2000² by considering combinations of exponents
3. For each divisor pair (d1,d2) where d1*d2=2000² and d1<d2, check if x and y are integers
4. Count all valid solutions, considering both (d1,d2) and (d2,d1) orderings

```python
def count_solutions():
    # Factorize 2000 = 2^4 * 5^3
    exponents = [4, 3]  # exponents for 2 and 5 in 2000's prime factorization
    # For 2000², exponents become [8,6]
    
    # Generate all divisors of 2000² by considering all combinations of exponents
    divisors = []
    for a in range(9):  # exponent of 2 can be 0..8
        for b in range(7):  # exponent of 5 can be 0..6
            divisors.append((2**a) * (5**b))
    
    # Remove duplicates and sort
    divisors = sorted(list(set(divisors)))
    
    count = 0
    for i, d1 in enumerate(divisors):
        for d2 in divisors[i:]:  # only consider d1 <= d2 to avoid duplicates
            if d1 * d2 != 2000**2:
                continue
            # x = (d1 + d2)/2, y = (d2 - d1)/2
            if (d1 + d2) % 2 == 0 and (d2 - d1) % 2 == 0:
                if d1 == d2:
                    count += 1  # only one solution (x,0)
                else:
                    count += 2  # both (x,y) and (x,-y)
    
    print(f"Number of solutions: {count}")

count_solutions()
```
