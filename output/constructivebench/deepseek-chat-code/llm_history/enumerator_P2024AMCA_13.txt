[write_program]
The problem involves finding a real number `a` such that the function `f(x) = exp(x+1) + exp(-x) - 2` is symmetric about `x=a`. This means `f(x) = f(2a-x)` for all `x`. We need to find this `a` and evaluate `f` at the symmetric point of `x=-1`.

The symmetry condition implies the function has a critical point at `x=a`. We'll find `a` by solving `f'(a) = 0`, then verify the symmetry condition and compute the required evaluation.

```python
import math

def f(x):
    return math.exp(x + 1) + math.exp(-x) - 2

def f_prime(x):
    return math.exp(x + 1) - math.exp(-x)

# Find critical point by solving f'(a) = 0
def find_a():
    # Using Newton's method to find root of f'
    a = 0.0  # Initial guess
    for _ in range(20):
        a = a - f_prime(a)/(math.exp(a + 1) + math.exp(-a))
    return a

a = find_a()
print(f"Found symmetry point a = {a}")

# Verify symmetry condition for sample points
test_points = [-2, -1, 0, 1, 2]
for x in test_points:
    symmetric_x = 2*a - x
    fx = f(x)
    fsx = f(symmetric_x)
    print(f"x={x}: f(x)={fx}, f(2a-x)={fsx}, difference={abs(fx-fsx)}")

# Compute required evaluation
x0 = -1
symmetric_point = 2*a - x0
f_value = f(symmetric_point)
print(f"\nFor x=-1, symmetric point is {symmetric_point}")
print(f"f({symmetric_point}) = {f_value}")
```
