[write_program]
This problem involves finding the smallest natural number N (1 ≤ N ≤ 1024) such that the expected number of rounds is less than 2, where the expected rounds formula is given as a sum. We'll write a Python program to enumerate possible values of N and compute the expected rounds for each, stopping when we find the smallest N satisfying the condition.

```python
def expected_rounds(n):
    if 1 <= n <= 1024:
        total = 0.0
        for k in range(10):
            total += (1 - (n-1)/1024)**k
        return total
    return 0

def find_min_N():
    for N in range(1, 1025):
        e = expected_rounds(N)
        print(f"N={N}, expected_rounds={e}")  # Stream partial results
        if e < 2:
            print(f"\nMinimum N where expected_rounds < 2: {N}")
            return

if __name__ == "__main__":
    find_min_N()
```
