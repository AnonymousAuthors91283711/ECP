[write_program]
This problem asks for the count of numbers n between 1 and 30 such that n shares exactly two positive common divisors with 80. We need to enumerate all numbers from 1 to 30, find their common divisors with 80, and count those with exactly two common divisors.

The approach is:
1. Factorize 80 into primes (2^4 * 5^1)
2. For each n from 1 to 30, find gcd(n, 80)
3. Count the divisors of this gcd
4. Check if the count equals 2

```python
def count_common_divisors(a, b):
    gcd_ab = gcd(a, b)
    if gcd_ab == 0:
        return 0
    # Count divisors of gcd(a,b)
    count = 1
    temp = gcd_ab
    # Handle factor 2
    exponent = 0
    while temp % 2 == 0:
        exponent += 1
        temp //= 2
    count *= (exponent + 1)
    # Handle odd factors
    i = 3
    while i * i <= temp:
        exponent = 0
        while temp % i == 0:
            exponent += 1
            temp //= i
        if exponent > 0:
            count *= (exponent + 1)
        i += 2
    if temp > 1:
        count *= 2
    return count

def main():
    target = 80
    results = []
    for n in range(1, 31):
        cnt = count_common_divisors(n, target)
        if cnt == 2:
            results.append(n)
            print(n)
    print(f"Total count: {len(results)}")

if __name__ == "__main__":
    from math import gcd
    main()
```
