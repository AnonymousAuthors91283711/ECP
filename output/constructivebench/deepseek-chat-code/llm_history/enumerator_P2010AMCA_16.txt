[write_program]
This problem involves calculating the probability that a randomly selected 3-digit number formed by Bernardo (using digits 1-9 with factorial weighting) is greater than one formed by Silvia (using digits 1-8 with factorial weighting). We'll enumerate all possible combinations for both players and count favorable outcomes.

```python
from itertools import combinations
from math import factorial

def generate_numbers(available_digits):
    numbers = set()
    for digits in combinations(available_digits, 3):
        # Sort digits in descending order and form the number
        sorted_digits = sorted(digits, reverse=True)
        num = factorial(sorted_digits[0]) * 100 + factorial(sorted_digits[1]) * 10 + factorial(sorted_digits[2])
        numbers.add(num)
    return sorted(numbers)

# Generate Bernardo's numbers (digits 1-9)
bernardo_digits = range(1, 10)
bernardo_numbers = generate_numbers(bernardo_digits)
print(f"Bernardo numbers ({len(bernardo_numbers)}):", bernardo_numbers)

# Generate Silvia's numbers (digits 1-8)
silvia_digits = range(1, 9)
silvia_numbers = generate_numbers(silvia_digits)
print(f"Silvia numbers ({len(silvia_numbers)}):", silvia_numbers)

# Count total and favorable pairs
total_pairs = len(bernardo_numbers) * len(silvia_numbers)
favorable = 0

for b in bernardo_numbers:
    for s in silvia_numbers:
        if b > s:
            favorable += 1

probability = favorable / total_pairs
print(f"Probability: {favorable}/{total_pairs} = {probability}")
```
