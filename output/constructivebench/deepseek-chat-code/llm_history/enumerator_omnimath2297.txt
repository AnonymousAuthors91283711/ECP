[write_program]
This problem asks for the set of real-valued functions `f` that are continuous and satisfy the condition that for any `x, y` where `x - y` is rational, `f(x) - f(y)` must also be rational. The solution likely involves linear functions with rational coefficients.

We'll write a Python program to:
1. Test various function forms (linear, quadratic, etc.)
2. Check the conditions for random rational differences
3. Output functions that satisfy both conditions

```python
import random
import math
from fractions import Fraction

def is_rational(x):
    return x == float(Fraction(x).limit_denominator(1000000))

def test_function(f, num_tests=100):
    # Test continuity by checking at random points (numerical approximation)
    try:
        for _ in range(10):
            x = random.uniform(-100, 100)
            eps = 1e-10
            if abs(f(x+eps) - f(x-eps)) > 1e-6:
                return False
    except:
        return False  # Function not defined everywhere
    
    # Test the rational difference condition
    for _ in range(num_tests):
        x = random.uniform(-100, 100)
        q = Fraction(random.randint(1, 100), random.randint(1, 100))
        y = x + float(q)
        if not is_rational(f(x) - f(y)):
            return False
    return True

# Test linear functions f(x) = a*x + b with a,b rational
print("Testing linear functions with rational coefficients:")
for numerator in range(-3, 4):
    for denominator in range(1, 4):
        a = Fraction(numerator, denominator)
        for b_num in range(-3, 4):
            for b_den in range(1, 4):
                b = Fraction(b_num, b_den)
                f = lambda x, a=float(a), b=float(b): a*x + b
                if test_function(f):
                    print(f"f(x) = {a}x + {b}")

# Test non-linear functions (should fail)
print("\nTesting non-linear functions (should not appear if correct):")
for a in [math.sqrt(2), math.pi]:
    f = lambda x, a=a: a*x
    if test_function(f):
        print(f"Unexpected passing function: f(x) = {a}x")
```
