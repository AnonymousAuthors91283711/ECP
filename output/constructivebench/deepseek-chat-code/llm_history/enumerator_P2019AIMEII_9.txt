[write_program]
This problem involves finding the sum of all numbers n between 1 and 2018 inclusive that have exactly 20 divisors and are divisible by 20, then dividing that sum by 20. We'll write a Python program to enumerate such numbers and compute the required sum.

Key observations:
1. A number has exactly 20 divisors if its prime factorization is either p^19, p^4*q^3, or p^4*q*r where p,q,r are distinct primes
2. The number must also be divisible by 20 (2^2*5)
3. We'll check numbers up to 2018

```python
import math

def count_divisors(n):
    if n == 1:
        return 1
    count = 1
    # Handle 2 separately
    exponent = 0
    while n % 2 == 0:
        exponent += 1
        n = n // 2
    count *= (exponent + 1)
    
    # Check odd divisors up to sqrt(n)
    i = 3
    max_factor = math.sqrt(n)
    while i <= max_factor:
        exponent = 0
        while n % i == 0:
            exponent += 1
            n = n // i
            max_factor = math.sqrt(n)
        count *= (exponent + 1)
        i += 2
    
    if n > 1:
        count *= 2
    return count

total = 0
for n in range(20, 2019, 20):  # Only multiples of 20
    if count_divisors(n) == 20:
        total += n
        print(f"Found valid n: {n}")

print(f"Final answer: {total // 20}")
```
