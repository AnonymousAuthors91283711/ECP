[write_program]
This problem involves computing the sum of reciprocals of positive integers whose prime factors are only 2, 3, or 5. The solution requires finding the exact rational value of this infinite sum in reduced form (numerator and denominator coprime).

We'll approach this by:
1. Generating all numbers with prime factors only in {2,3,5} up to a reasonable limit
2. Calculating their reciprocal sum
3. Finding the exact rational representation
4. Simplifying the fraction to lowest terms

The exact sum can be computed using the formula for products of geometric series:
(1/(1-1/2)) * (1/(1-1/3)) * (1/(1-1/5)) = 2 * (3/2) * (5/4) = 15/4

Here's the Python program to verify this:

```python
from fractions import Fraction
from itertools import count, takewhile

def is_valid(n):
    """Check if n only has 2, 3, or 5 as prime factors"""
    if n == 1:
        return True
    for p in [2, 3, 5]:
        if n % p == 0:
            return is_valid(n // p)
    return False

def generate_numbers(max_n):
    """Generate all valid numbers up to max_n"""
    return [n for n in range(1, max_n + 1) if is_valid(n)]

def compute_sum(max_n):
    """Compute reciprocal sum up to max_n"""
    numbers = generate_numbers(max_n)
    total = Fraction(0, 1)
    for n in numbers:
        total += Fraction(1, n)
    return total

# Compute sum up to reasonable limit (5^10 gives good approximation)
max_n = 5**10
result = compute_sum(max_n)
print(f"Partial sum up to {max_n}: {result}")

# Theoretical exact value
exact = Fraction(1,1) / (1 - Fraction(1,2)) / (1 - Fraction(1,3)) / (1 - Fraction(1,5))
print(f"Exact value: {exact}")

# Verify they converge to same value
print(f"Difference: {float(exact - result)}")
```
