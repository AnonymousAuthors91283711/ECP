[write_program]
This problem asks to find all pairs of two-digit numbers (a,b) such that:
1. 100a + b is a perfect square (m²)
2. 201a + b is also a perfect square (n²)
3. Then find the sum a + b for such pairs

We'll enumerate all possible two-digit a and b values, checking the conditions. The solution will stream all valid pairs and their sums, then identify the minimal sum if multiple exist.

```python
import math

def is_perfect_square(x):
    root = math.isqrt(x)
    return root * root == x

def find_pairs():
    results = []
    for a in range(10, 100):
        for b in range(10, 100):
            m_squared = 100 * a + b
            n_squared = 201 * a + b
            if is_perfect_square(m_squared) and is_perfect_square(n_squared):
                sum_ab = a + b
                print(f"Found pair: a={a}, b={b}, sum={sum_ab}")
                results.append(sum_ab)
    if results:
        print(f"All possible sums: {sorted(results)}")
        print(f"Minimal sum: {min(results)}")
    else:
        print("No valid pairs found")

# Fix the typo in function name
is_perfect_square = is_perfect_square
find_pairs()
```
