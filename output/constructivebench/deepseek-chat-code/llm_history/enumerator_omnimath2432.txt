[write_program]
This problem asks to characterize the set of real values y that can be expressed as (ab + b²)/(a² + b²) where a,b > 0. We'll write a program to enumerate possible y values by sampling various (a,b) pairs.

The approach:
1. Sample positive a and b values in a reasonable range
2. Compute y = (ab + b²)/(a² + b²) for each pair
3. Track unique y values found
4. Observe the pattern to conjecture the range

```python
import math

def main():
    # We'll sample a and b in (0.1, 10) with different ratios
    seen = set()
    steps = 100
    print("Sampling y = (ab + b²)/(a² + b²) for a,b > 0:")
    
    # Sample various ratios b/a
    for ratio in [0.1, 0.2, 0.5, 1, 2, 5, 10]:
        print(f"\nFor ratio b/a ≈ {ratio}:")
        for i in range(1, steps+1):
            a = i/steps * 10
            b = ratio * a
            denominator = a**2 + b**2
            if denominator == 0:
                continue
            y = (a*b + b**2) / denominator
            if y not in seen:
                seen.add(y)
                print(f"a={a:.3f}, b={b:.3f} → y={y:.5f}")

    # Check boundary cases
    print("\nChecking boundary behaviors:")
    for k in range(1, 10):
        # When b approaches 0
        a, b = 1, 1/(10**k)
        y = (a*b + b**2)/(a**2 + b**2)
        print(f"a=1, b=1e-{k} → y={y:.10f}")
        
        # When a approaches 0
        a, b = 1/(10**k), 1
        y = (a*b + b**2)/(a**2 + b**2)
        print(f"a=1e-{k}, b=1 → y={y:.10f}")
        
        # When a = b
        a = b = 1
        y = (a*b + b**2)/(a**2 + b**2)
        print(f"a=b=1 → y={y:.10f}")

if __name__ == "__main__":
    main()
```
