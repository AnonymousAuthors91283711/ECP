[write_program]
This problem involves finding all integer values `a` such that the quadratic polynomial `x² - a x + 2a` has either:
1. Two distinct integer roots, or
2. One repeated integer root (perfect square case)

We need to enumerate all such `a` values and sum them. The program will:
1. Iterate through possible integer roots
2. For each root combination, compute the corresponding `a` value
3. Collect unique `a` values and sum them

```python
def main():
    a_values = set()

    # Case 1: Two distinct integer roots m and n
    # The polynomial is (x-m)(x-n) = x² - (m+n)x + mn
    # So a = m+n and 2a = mn => mn = 2(m+n)
    max_search = 100  # Sufficiently large to find all solutions
    for m in range(-max_search, max_search + 1):
        for n in range(-max_search, max_search + 1):
            if m != n and m * n == 2 * (m + n):
                a = m + n
                a_values.add(a)

    # Case 2: One repeated root m
    # Polynomial is (x-m)² = x² - 2m x + m²
    # So a = 2m and 2a = m² => m² = 4m => m=0 or m=4
    for m in range(-max_search, max_search + 1):
        if m * m == 4 * m:
            a = 2 * m
            a_values.add(a)

    # Print all found a values
    print("Found a values:", sorted(a_values))
    print("Sum of all a values:", sum(a_values))

if __name__ == "__main__":
    main()
```
