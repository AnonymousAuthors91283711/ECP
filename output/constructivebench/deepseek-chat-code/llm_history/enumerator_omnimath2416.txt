[write_program]
The problem involves finding the value of S(m², n²) where S(m,n) is defined as the sum of i*n for i from 1 to m, given that S(m,n) = 120 and S(m³,n³) = 4,032,000. 

First, we can simplify S(m,n) = n * m(m+1)/2. Then we can write the given equations as:
1. n * m(m+1)/2 = 120
2. n³ * m³(m³+1)/2 = 4,032,000

We'll enumerate possible (m,n) pairs that satisfy the first equation, then check which ones also satisfy the second equation. Finally, we'll compute S(m²,n²) for the valid pair.

```python
def S(m, n):
    return n * m * (m + 1) // 2

def find_solutions():
    # Enumerate possible m values (m > 0)
    for m in range(1, 20):
        # For each m, find n that satisfies first equation
        numerator = 240  # 2*120
        denominator = m * (m + 1)
        if numerator % denominator != 0:
            continue
        n = numerator // denominator
        if n <= 0:
            continue
        
        # Check if this (m,n) pair satisfies second equation
        m_cubed = m ** 3
        n_cubed = n ** 3
        if S(m_cubed, n_cubed) == 4032000:
            # Found valid pair, compute S(m²,n²)
            m_squared = m ** 2
            n_squared = n ** 2
            result = S(m_squared, n_squared)
            print(f"Found valid pair (m,n) = ({m},{n})")
            print(f"S(m²,n²) = {result}")
            return
    
    print("No solution found in the search range")

find_solutions()
```
