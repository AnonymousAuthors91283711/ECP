[write_program]
This problem asks for a characterization of natural numbers p that can be expressed in the form x² + 3y² where x and y are integers. We'll write a Python program to enumerate such numbers up to a reasonable threshold to help identify the pattern.

The program will:
1. Iterate through numbers p from 1 to 100
2. For each p, check all possible x and y values where x² ≤ p and 3y² ≤ p
3. Print p whenever it finds a valid representation
4. Finally, print the pattern observed in the results

```python
def is_expressible(p):
    max_x = int(p**0.5) + 1
    max_y = int((p/3)**0.5) + 1
    for x in range(-max_x, max_x + 1):
        for y in range(-max_y, max_y + 1):
            if x*x + 3*y*y == p:
                return True
    return False

print("Numbers expressible as x² + 3y²:")
for p in range(1, 101):
    if is_expressible(p):
        print(p, end=' ')
print("\nObserved pattern: These numbers seem to be primes ≡ 1 mod 3 or products of such primes, and also include some powers of these primes.")
```
