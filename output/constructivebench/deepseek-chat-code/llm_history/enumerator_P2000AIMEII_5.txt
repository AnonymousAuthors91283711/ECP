[write_program]
This problem appears to be about counting arrangements with specific constraints, likely from a competition. The Lean code suggests it involves combinations and permutations with parameters n=8, k=5, and fingers=4. We'll write a Python program to compute similar values and explore the pattern.

```python
import math

def count_arrangements(n, k, fingers):
    """Count arrangements using combination and permutation formulas"""
    return math.comb(fingers + k - 1, k) * math.factorial(k) * (n ** k)

def main():
    # Using the parameters from the Lean code
    n = 8
    k = 5
    fingers = 4
    
    # Compute the count
    result = count_arrangements(n, k, fingers)
    print(f"Total arrangements for n={n}, k={k}, fingers={fingers}: {result}")
    
    # Extract last 3 digits as suggested by the theorem
    last_three = result % 1000
    print(f"Last three digits: {last_three:03d}")

if __name__ == "__main__":
    main()
```
