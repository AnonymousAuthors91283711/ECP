[write_program]
This problem asks to find all complex roots of the polynomial equation x⁴ + 2x³ + 2x² + 2x + 1 = 0. We'll write a Python program to find these roots numerically and verify them by substitution.

The approach:
1. Use numpy's roots function to find all roots
2. Verify each root by plugging it back into the polynomial
3. Print both the roots and their verification results

```python
import numpy as np
import cmath

# Coefficients of the polynomial x^4 + 2x^3 + 2x^2 + 2x + 1
coefficients = [1, 2, 2, 2, 1]

# Find all roots
roots = np.roots(coefficients)

# Function to evaluate polynomial at x
def evaluate_poly(x):
    return x**4 + 2*x**3 + 2*x**2 + 2*x + 1

print("Roots and their polynomial evaluations:")
for root in roots:
    # Print root with reasonable precision
    print(f"Root: {root:.8f}")
    # Evaluate polynomial at root (should be close to 0)
    value = evaluate_poly(root)
    print(f"  Verification: {value:.2e} (should be close to 0)")
```
