[write_program]
The problem asks for the minimal positive difference `d = a - b` where `a` and `b` are integers greater than 1, `a > b`, and `a * b = 2010`. To solve this, we need to find all factor pairs of 2010 where `a > b`, compute `d = a - b` for each pair, and find the smallest such `d`.

We'll first factorize 2010, then generate all factor pairs (a, b) where a > b, compute their differences, and find the minimal difference.

```python
def find_min_difference():
    n = 2010
    # Find all divisors of n
    divisors = set()
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    divisors = sorted(divisors)
    
    # Generate all factor pairs a > b and compute differences
    differences = []
    for i in range(len(divisors)):
        b = divisors[i]
        a = n // b
        if a > b > 1:
            d = a - b
            differences.append(d)
            print(f"Pair: ({a}, {b}), difference: {d}")
    
    if differences:
        min_d = min(differences)
        print(f"\nMinimal difference: {min_d}")
    else:
        print("No valid factor pairs found")

find_min_difference()
```
