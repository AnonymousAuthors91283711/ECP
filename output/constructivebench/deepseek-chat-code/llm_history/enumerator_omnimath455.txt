[write_program]
This problem asks for the number of functions from Fin 5 (5 elements) to Fin 10 (digits 0-9) where:
1. The first digit (d 0) is not zero
2. The product of all five digits equals 180

We'll enumerate all possible 5-digit combinations (with digits 0-9) that satisfy these conditions. Since 180 factors into 2²×3²×5, we need combinations whose digits multiply to this value.

```python
from itertools import product
from math import prod

def factorize(n):
    factors = {}
    while n % 2 == 0:
        factors[2] = factors.get(2, 0) + 1
        n = n // 2
    i = 3
    while i * i <= n:
        while n % i == 0:
            factors[i] = factors.get(i, 0) + 1
            n = n // i
        i += 2
    if n > 1:
        factors[n] = factors.get(n, 0) + 1
    return factors

def is_valid(combination):
    if combination[0] == 0:
        return False
    return prod(combination) == 180

count = 0
for digits in product(range(10), repeat=5):
    if is_valid(digits):
        count += 1
        print(digits)

print(f"Total valid combinations: {count}")
```
