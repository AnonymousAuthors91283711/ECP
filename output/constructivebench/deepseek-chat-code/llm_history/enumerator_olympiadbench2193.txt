[write_program]
This problem involves a recurrence relation with initial conditions, and asks for which values of `m > 1` all terms of the sequence are perfect squares. We'll write a Python program to enumerate possible values of `m` and check this property for small `n`.

The approach:
1. Define the recurrence relation with given initial conditions
2. For small values of `m` (2 to 10), compute the sequence up to n=10
3. Check if all terms are perfect squares
4. Output the values of `m` that satisfy this condition

```python
import math

def is_perfect_square(x):
    s = int(math.isqrt(x))
    return s * s == x

def check_m(m, max_n=10):
    a = [0] * (max_n + 1)
    a[1] = 1
    a[2] = 1
    a[3] = 4
    for n in range(4, max_n + 1):
        a[n] = m * (a[n-1] + a[n-2]) - a[n-3]
        if not is_perfect_square(a[n]):
            return False
    return True

print("Checking values of m where all a(n) are perfect squares:")
for m in range(2, 11):
    if check_m(m):
        print(f"m = {m} satisfies the condition up to n=10")
```
