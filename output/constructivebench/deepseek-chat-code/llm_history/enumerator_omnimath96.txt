[write_program]
This problem asks for all integer-valued functions f: ℤ→ℤ that satisfy a certain functional equation. We'll enumerate polynomial solutions of small degree since polynomial functions are often solutions to such equations. We'll test linear and quadratic forms first.

```python
def test_function(f):
    """Test if function f satisfies the given functional equation."""
    for a in range(-2, 3):
        for b in range(-2, 3):
            for c in range(-2, 3):
                lhs = 2 * f(a**2 + b**2 + c**2) - 2 * f(a*b + b*c + c*a)
                rhs = f(a-b)**2 + f(b-c)**2 + f(c-a)**2
                if lhs != rhs:
                    return False
    return True

def evaluate_polynomial(coeffs, x):
    """Evaluate polynomial with given coefficients at x."""
    return sum(c * (x**i) for i, c in enumerate(coeffs))

# Test constant functions f(x) = k
print("Testing constant functions:")
for k in range(-3, 4):
    f = lambda x, k=k: k
    if test_function(f):
        print(f"Found solution: f(x) = {k}")

# Test linear functions f(x) = mx + b
print("\nTesting linear functions:")
for m in range(-3, 4):
    for b in range(-3, 4):
        if m == 0:  # already tested as constant
            continue
        f = lambda x, m=m, b=b: m*x + b
        if test_function(f):
            print(f"Found solution: f(x) = {m}x + {b}")

# Test quadratic functions f(x) = ax² + bx + c
print("\nTesting quadratic functions:")
for a in range(-3, 4):
    for b in range(-3, 4):
        for c in range(-3, 4):
            if a == 0:  # already tested as linear/constant
                continue
            f = lambda x, a=a, b=b, c=c: a*x*x + b*x + c
            if test_function(f):
                print(f"Found solution: f(x) = {a}x² + {b}x + {c}")

print("\nFinished testing polynomials up to quadratic degree.")
```
