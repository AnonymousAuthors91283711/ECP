[write_program]
The problem is to find the smallest integer n > 10 where the sum of digits in base 17 equals the sum of digits in base 10. We'll write a Python program to enumerate candidates and find the minimal solution.

Key observations:
1. We need to check numbers > 10
2. For each number, calculate digit sums in both bases
3. Compare the sums and find the smallest match

The program will:
1. Iterate numbers starting from 11
2. Compute digit sums for base 10 and 17
3. Print numbers where sums match
4. Stop after finding the first solution (smallest n)

```python
def sum_digits(n, base):
    """Calculate sum of digits of n in given base"""
    total = 0
    while n > 0:
        total += n % base
        n = n // base
    return total

def find_min_match():
    """Find smallest n > 10 where digit sums in base 10 and 17 match"""
    n = 11
    while True:
        sum10 = sum_digits(n, 10)
        sum17 = sum_digits(n, 17)
        if sum10 == sum17:
            print(f"Found match: n = {n} (sum10={sum10}, sum17={sum17})")
            return n
        n += 1

if __name__ == "__main__":
    result = find_min_match()
    print(f"Minimal solution: {result}")
```
