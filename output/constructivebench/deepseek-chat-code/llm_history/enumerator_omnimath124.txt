[write_program]
This problem involves finding integer pairs (m, n) with n ≠ 0 that satisfy certain divisibility and inequality conditions, then determining the maximum and minimum values of some function f(m,n) over these pairs. We'll write a Python program to enumerate possible (m,n) pairs and compute f(m,n) values.

The key constraints are:
1. n ≠ 0
2. m < 2a (where a=2001)
3. 2n divides (2a*m - m² + n²)
4. n² - m² + 2m*n ≤ 2a*(n - m)

We'll search for (m,n) pairs within reasonable bounds and compute f(m,n) = m² + n² (a common function for such problems).

```python
def main():
    a = 2001
    max_m = 2 * a - 1  # since m < 2a
    min_k = float('inf')
    max_k = -float('inf')
    
    # Search reasonable bounds for n (we'll use ±1000 as a practical limit)
    for m in range(-1000, 2 * a):
        for n in range(-1000, 1001):
            if n == 0:
                continue
            # Check divisibility condition
            numerator = 2 * a * m - m * m + n * n
            if numerator % (2 * n) != 0:
                continue
            # Check inequality condition
            left = n * n - m * m + 2 * m * n
            right = 2 * a * (n - m)
            if left > right:
                continue
            
            # Compute k = m² + n²
            k = m * m + n * n
            print(f"Found pair (m,n)=({m},{n}) with k={k}")
            
            if k < min_k:
                min_k = k
            if k > max_k:
                max_k = k
    
    print(f"\nMinimum k found: {min_k}")
    print(f"Maximum k found: {max_k}")

if __name__ == "__main__":
    main()
```
