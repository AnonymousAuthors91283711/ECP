[write_program]
This problem involves finding all functions f: ℚ → ℚ that satisfy the functional equation f(f(x) + a*y) = a*f(y) + x for all x,y ∈ ℚ, where a is a non-zero rational constant. We'll enumerate possible linear solutions of the form f(x) = kx + c.

```python
from fractions import Fraction

def find_solutions(a_values):
    for a in a_values:
        print(f"\nTesting a = {a}")
        found = False
        
        # Test linear solutions f(x) = kx + c
        for k in [Fraction(n, d) for n in range(-5, 6) for d in range(1, 6)]:
            for c in [Fraction(n, d) for n in range(-5, 6) for d in range(1, 6)]:
                # Substitute f(x) = kx + c into the equation
                lhs = k*(k + a)  # Coefficient of x
                rhs = 1          # Coefficient of x on RHS
                
                # Coefficient of y must match (a*k = a*k is always true)
                const_term = k*c + k*c - a*c  # Constant terms
                
                if lhs == rhs and const_term == 0:
                    print(f"Found solution: f(x) = {k}x + {c}")
                    found = True
        
        if not found:
            print("No linear solutions found for this a")

# Test with sample non-zero rational values
find_solutions([Fraction(1,2), Fraction(2), Fraction(-1,3), Fraction(3,4)])
```
