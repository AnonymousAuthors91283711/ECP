[write_program]
The problem asks for the smallest natural number `n` such that both `3n + 1` and `5n + 1` are perfect squares. We need to enumerate natural numbers `n` and check these conditions, stopping when we find the smallest such `n`.

We'll:
1. Iterate through natural numbers `n` starting from 1
2. For each `n`, check if both `3n + 1` and `5n + 1` are perfect squares
3. Print any valid `n` found during the search
4. Stop and print the smallest valid `n` once found

```python
import math

def is_square(x):
    s = int(math.isqrt(x))
    return s * s == x

def find_min_n():
    n = 1
    while True:
        if is_square(3 * n + 1) and is_square(5 * n + 1):
            print(f"Found valid n: {n}")
            print(f"Smallest n is: {n}")
            return
        n += 1

find_min_n()
```
