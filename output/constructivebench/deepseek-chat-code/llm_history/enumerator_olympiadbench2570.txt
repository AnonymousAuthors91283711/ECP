[write_program]
This problem involves finding integer triples (a, b, c) that satisfy three conditions:
1. b - a = c - b (arithmetic progression)
2. a + b + c = 60
3. There exists a ratio r such that (a-2)*r = b and b*r = c+3

We'll write a Python program to enumerate possible integer solutions by:
1. Using the arithmetic progression condition to express c in terms of a and b
2. Using the sum condition to find possible values of a and b
3. Checking the ratio condition for each candidate

```python
def find_solutions():
    # We'll search for a in a reasonable range around possible solutions
    for a in range(-100, 101):
        # From arithmetic progression: b - a = c - b => c = 2b - a
        # From sum condition: a + b + c = 60 => a + b + (2b - a) = 60 => 3b = 60 => b = 20
        b = 20
        c = 2 * b - a
        
        # Now check the ratio condition
        # We need (a-2)*r = b and b*r = c+3
        # So r = b/(a-2) and r = (c+3)/b
        # Therefore b/(a-2) = (c+3)/b => bÂ² = (a-2)(c+3)
        left = b * b
        right = (a - 2) * (c + 3)
        
        if left == right:
            # Also verify r is consistent (avoid division by zero)
            if a - 2 != 0:
                r1 = b / (a - 2)
                r2 = (c + 3) / b
                if abs(r1 - r2) < 1e-9:  # account for floating point
                    print(f"Solution found: a={a}, b={b}, c={c}, r={r1}")
            else:
                # Special case when a-2=0
                if b == 0 and c + 3 == 0:
                    print(f"Solution found: a={a}, b={b}, c={c}, r=any")

find_solutions()
```
