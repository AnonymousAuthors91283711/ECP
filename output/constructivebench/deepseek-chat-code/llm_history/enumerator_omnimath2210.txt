[write_program]
The problem asks to count the number of integer pairs (x,y) where:
1. x² + y² < 2019
2. x² + min(x,y) = y² + max(x,y)

We'll write a Python program to enumerate all such pairs efficiently. The key observation is that condition 2 can be simplified by considering cases where x ≤ y and x > y separately.

```python
def count_pairs():
    count = 0
    max_r_squared = 2019
    # Iterate x from -⌊√2019⌋ to ⌊√2019⌋
    max_x = int((max_r_squared - 1)**0.5)
    for x in range(-max_x, max_x + 1):
        x_sq = x * x
        # Case 1: x ≤ y
        # Equation becomes x² + x = y² + y → y² - x² + y - x = 0 → (y-x)(y+x+1) = 0
        # Solutions: y = x or y = -x-1
        for y in [x, -x-1]:
            if x_sq + y*y < max_r_squared:
                if x <= y:  # Verify our case assumption
                    count += 1
                    print(f"Found pair: ({x}, {y})")
        
        # Case 2: x > y
        # Equation becomes x² + y = y² + x → x² - y² - x + y = 0 → (x-y)(x+y-1) = 0
        # Solutions: y = x or y = 1-x
        for y in [x, 1-x]:
            if x_sq + y*y < max_r_squared:
                if x > y:  # Verify our case assumption
                    count += 1
                    print(f"Found pair: ({x}, {y})")
    
    print(f"Total pairs found: {count}")

count_pairs()
```
