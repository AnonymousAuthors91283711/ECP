[write_program]
This problem involves finding the minimal positive rational number (m/n in reduced form) that can be expressed as (abc-def)/ghi, where a,b,c,d,e,f,g,h,i are distinct digits 1-9. We'll write a Python program to enumerate all possible permutations of digits and find the minimal positive value.

```python
from itertools import permutations
from fractions import Fraction
from math import gcd

def solve():
    min_val = None
    min_mn = None
    
    # Iterate through all permutations of 9 distinct digits
    for p in permutations(range(1, 10)):
        a, b, c, d, e, f, g, h, i = p
        numerator = a * b * c - d * e * f
        denominator = g * h * i
        
        if numerator <= 0 or denominator <= 0:
            continue
            
        # Create fraction in reduced form
        f_val = Fraction(numerator, denominator)
        m, n = f_val.numerator, f_val.denominator
        
        # Check if this is the smallest positive value found so far
        if min_val is None or f_val < min_val:
            min_val = f_val
            min_mn = (m, n)
            print(f"New minimum found: {m}/{n} from permutation {p}")
    
    print(f"\nFinal minimal value: {min_mn[0]}/{min_mn[1]}")

solve()
```
