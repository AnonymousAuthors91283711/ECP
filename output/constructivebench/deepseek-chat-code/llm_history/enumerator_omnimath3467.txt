[write_program]
This problem involves manipulating lists in Lean (a theorem prover), but we'll translate it to Python to enumerate and verify the answer. The task is to construct a list from 1 to 20, split it into first 10 and remaining elements, concatenate them in reverse order, then find the element at index 12.

```python
def main():
    original_list = list(range(1, 21))  # 1 to 20
    first_half = original_list[:10]    # first 10 elements
    second_half = original_list[10:]   # remaining elements
    new_list = second_half + first_half  # concatenate
    
    # Verify list construction
    print("Constructed list:", new_list)
    
    # Get element at index 12 (0-based)
    result = new_list[12]
    print("Element at index 12:", result)

if __name__ == "__main__":
    main()
```
