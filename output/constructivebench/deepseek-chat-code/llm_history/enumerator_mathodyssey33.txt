[write_program]
This problem asks for the number of ordered triples (a, b, c) of positive integers where a ≤ b ≤ c and a² + b² + c² = 2005. We'll write a Python program to enumerate all such triples.

The approach:
1. Iterate a from 1 to √(2005/3) since a is the smallest
2. For each a, iterate b from a to √((2005-a²)/2)
3. For each (a,b), compute c² = 2005 - a² - b² and check if it's a perfect square
4. Count valid triples where c ≥ b and c² is perfect square

```python
import math

max_sum = 2005
max_a = int(math.isqrt(max_sum // 3))  # Upper bound for a
count = 0

for a in range(1, max_a + 1):
    remaining_after_a = max_sum - a*a
    if remaining_after_a < 2:  # Need at least b² + c² ≥ 2 (since b,c ≥ 1)
        continue
    max_b = int(math.isqrt(remaining_after_a // 2))
    for b in range(a, max_b + 1):
        remaining = remaining_after_a - b*b
        if remaining <= 0:
            continue
        c = math.isqrt(remaining)
        if c*c == remaining and c >= b:
            count += 1
            print(f"Found triple: ({a}, {b}, {c})")

print(f"Total number of triples: {count}")
```
