[write_program]
This problem involves counting the number of 2x2 Boolean matrices satisfying certain conditions. The conditions are:
1. Diagonal entries (0,0) and (1,1) must be false
2. Either (0,1) or (1,0) must be false
3. If both (0,1) and (1,0) are false, then (1,1) must be false (but this is already required by condition 1)
4. If both (1,0) and (0,1) are false, then (0,0) must be false (again already required)

We'll enumerate all possible 2x2 Boolean matrices and count those satisfying the conditions.

```python
def is_valid(m):
    # Check diagonal entries are False
    if m[0][0] or m[1][1]:
        return False
    # Check at least one off-diagonal is False
    if not (not m[0][1] or not m[1][0]):
        return False
    return True

def main():
    count = 0
    # Generate all possible 2x2 boolean matrices
    for b00 in [False, True]:
        for b01 in [False, True]:
            for b10 in [False, True]:
                for b11 in [False, True]:
                    m = [[b00, b01], [b10, b11]]
                    if is_valid(m):
                        count += 1
                        print(f"Valid matrix {count}: {m}")
    print(f"Total valid matrices: {count}")

if __name__ == "__main__":
    main()
```
