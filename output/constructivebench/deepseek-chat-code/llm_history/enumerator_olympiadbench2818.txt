[write_program]
The problem asks for the number of integer pairs (p₁, p₂) in the range [-20, 20] × [-20, 20] such that there exists a complex number x satisfying both quadratic equations x² + p₁x + p₂ = 0 and x² + p₂x + p₁ = 0.

To solve this, we need to find all pairs (p₁, p₂) where the two equations have a common root. We can approach this by:
1. Finding when the equations have a common root (either x is a root of both, or one root from each equation matches)
2. Considering all possible cases where the equations share a root

Here's the Python program to enumerate all valid pairs:

```python
def count_valid_pairs():
    count = 0
    for p1 in range(-20, 21):
        for p2 in range(-20, 21):
            # Case 1: x is root of both equations
            # Then x² = -p1x - p2 = -p2x - p1
            # So (p2 - p1)x = p2 - p1
            # Either p1 = p2 or x = 1
            if p1 == p2:
                count += 1
                continue
            # If x = 1 is a root
            if 1 + p1 + p2 == 0:
                count += 1
                continue
            # Case 2: Different roots match between equations
            # Let x be root of first equation, y of second, and x = y
            # Then x² + p1x + p2 = 0 and x² + p2x + p1 = 0
            # Subtract to get (p1 - p2)x + (p2 - p1) = 0 => (p1 - p2)(x - 1) = 0
            # This reduces to same cases as above
            # Case 3: Roots are swapped (a is root of first, b is root of second, and vice versa)
            # Then a² + p1a + p2 = 0 and b² + p2b + p1 = 0
            # And b² + p1b + p2 = 0 and a² + p2a + p1 = 0
            # Subtracting gives (a - b)(a + b + p1 + p2) = 0
            # So either a = b (previous cases) or a + b = -p1 - p2
            # But from Vieta, sum of roots is -p1 for first equation, -p2 for second
            # So -p1 - a = -p2 - b => b - a = p1 - p2
            # And a + b = -p1 - p2
            # Solving gives b = -p2, a = -p1
            # Check if these are indeed roots
            if (-p1)**2 + p1*(-p1) + p2 == 0 and (-p2)**2 + p2*(-p2) + p1 == 0:
                if p1**2 - p1**2 + p2 == 0 and p2**2 - p2**2 + p1 == 0:
                    if p1 == 0 and p2 == 0:
                        pass  # already counted in p1 == p2 case
                    else:
                        count += 1
    print(f"Total valid pairs: {count}")

count_valid_pairs()
```
