[write_program]
This problem involves calculating a probability ratio based on color pairs. We need to compute the ratio of same-color pairs to the total pairs (same-color + red-green pairs). The given data includes multiple color pairs with counts and one special pair (2000 copper). We'll compute this ratio exactly.

```python
from fractions import Fraction

def compute_ratio():
    color_pairs = [
        (2, "red"), (2, "green"), (2, "blue"), (2, "magenta"),
        (2, "lavender"), (2, "neon"), (2, "mauve"), (2, "wisteria"),
        (2000, "copper")
    ]
    
    # Calculate same-color pairs: sum of n*(n-1) for each color
    same_color_pairs = sum(n * (n - 1) for n, _ in color_pairs)
    
    # Calculate red-green pairs (2 red * 2 green)
    red_green_pairs = 2 * 2
    
    # Total pairs is sum of same-color and red-green pairs
    total_pairs = same_color_pairs + red_green_pairs
    
    # Compute the ratio as a fraction
    ratio = Fraction(same_color_pairs, total_pairs)
    
    print(f"Same-color pairs: {same_color_pairs}")
    print(f"Red-green pairs: {red_green_pairs}")
    print(f"Total pairs: {total_pairs}")
    print(f"Ratio: {ratio} (exact value)")
    print(f"Decimal approximation: {float(ratio)}")

compute_ratio()
```
