[write_program]
This problem asks for the smallest natural number n such that there exists a natural number m where the sum of the arithmetic sequence (n + 2 - 2*(k+1)) from k=0 to m-1 equals 2009. 

We'll approach this by:
1. Simplifying the sum formula to understand the relationship between n and m
2. Enumerating possible m values and solving for n
3. Finding the minimal n that satisfies the condition

The sum can be rewritten as m*(n - m + 1) = 2009, so we need to find factor pairs of 2009 where m divides 2009 and n = (2009/m) + m - 1.

```python
def find_min_n():
    target = 2009
    # Factorize 2009 = 7 × 7 × 41
    factors = set()
    for i in range(1, int(target**0.5) + 1):
        if target % i == 0:
            factors.add(i)
            factors.add(target // i)
    
    min_n = float('inf')
    for m in sorted(factors):
        if m == 0:
            continue
        n_candidate = (target // m) + m - 1
        if n_candidate >= m - 1:  # Ensure n is positive
            print(f"m = {m}, n = {n_candidate}")
            if n_candidate < min_n:
                min_n = n_candidate
    
    print(f"\nMinimum n found: {min_n}")

find_min_n()
```
