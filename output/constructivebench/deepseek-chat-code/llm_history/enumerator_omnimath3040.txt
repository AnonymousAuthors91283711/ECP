[write_program]
The problem is to find distinct digits P, Q, R (each between 0 and 9) that satisfy the equation:
100P + 70 + R + 300 + 90 + R = 100R + 10Q + 0
which simplifies to:
100P + 460 + 2R = 100R + 10Q
We need to find all valid (P,Q,R) triplets and compute P+Q+R for each, then determine if there's a unique sum.

Here's a Python program to enumerate all possible solutions:

```python
def solve():
    # Enumerate all possible P,Q,R where 0 <= P,Q,R < 10, all distinct
    solutions = []
    for P in range(10):
        for Q in range(10):
            if Q == P:
                continue
            for R in range(10):
                if R == P or R == Q:
                    continue
                # Check the equation: 100P + 460 + 2R = 100R + 10Q
                left = 100*P + 460 + 2*R
                right = 100*R + 10*Q
                if left == right:
                    solutions.append((P, Q, R))
                    print(f"Found solution: P={P}, Q={Q}, R={R}, sum={P+Q+R}")
    
    if solutions:
        print("\nAll solutions found:")
        for sol in solutions:
            P, Q, R = sol
            print(f"P={P}, Q={Q}, R={R}, sum={P+Q+R}")
        if len(set(P+Q+R for P,Q,R in solutions)) == 1:
            print(f"\nUnique sum: {solutions[0][0] + solutions[0][1] + solutions[0][2]}")
    else:
        print("No solutions found")

solve()
```
