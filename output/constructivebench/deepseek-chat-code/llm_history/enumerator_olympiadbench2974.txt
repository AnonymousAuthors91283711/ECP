[write_program]
This problem asks for the smallest integer n > 10 where (2^n + n^2) mod 10 equals (2^10 + 10^2) mod 10. We'll compute (2^10 + 10^2) mod 10 first, then search for n > 10 that matches this value.

The program will:
1. Compute the target value (2^10 + 10^2) mod 10
2. Iterate through n > 10, checking if (2^n + n^2) mod 10 matches the target
3. Stop at the first match (smallest n > 10) since we need the minimal solution

```python
def main():
    # Compute target = (2^10 + 10^2) mod 10
    target = (2**10 + 10**2) % 10
    
    n = 11  # Start checking from n > 10
    while True:
        current = (2**n + n**2) % 10
        if current == target:
            print(f"Found matching n: {n}")
            print(f"Smallest n > 10 satisfying the condition: {n}")
            break
        n += 1

if __name__ == "__main__":
    main()
```
