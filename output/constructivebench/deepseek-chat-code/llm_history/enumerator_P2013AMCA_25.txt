[write_program]
This problem asks for the number of complex numbers z in the upper half-plane (Im(z) > 0) such that f(z) = z² + i*z + 1 equals a + i*b where a and b are integers with |a| ≤ 10 and |b| ≤ 10.

We'll write a Python program to:
1. Iterate through all possible integer pairs (a,b) with |a| ≤ 10 and |b| ≤ 10
2. For each pair, solve the quadratic equation z² + i*z + 1 = a + i*b
3. Count how many solutions have positive imaginary part

```python
import cmath

def count_solutions():
    count = 0
    for a in range(-10, 11):
        for b in range(-10, 11):
            # Solve z^2 + i*z + (1 - a - i*b) = 0
            # Quadratic equation coefficients: A=1, B=i, C=1-a-i*b
            A = 1
            B = 1j
            C = 1 - a - b*1j
            
            discriminant = B**2 - 4*A*C
            sqrt_discr = cmath.sqrt(discriminant)
            
            z1 = (-B + sqrt_discr) / (2*A)
            z2 = (-B - sqrt_discr) / (2*A)
            
            if z1.imag > 0:
                count += 1
            if z2.imag > 0 and not cmath.isclose(z1, z2):  # avoid double-counting repeated roots
                count += 1
    return count

print(f"Number of solutions: {count_solutions()}")
```
