[write_program]
This problem involves finding all real pairs (x, y) that satisfy the equation y⁴ + 1 = x⁴ + 2y². We'll approach this by solving the equation algebraically and enumerating possible solutions.

The equation can be rewritten as:
x⁴ = y⁴ - 2y² + 1
Which factors as:
x⁴ = (y² - 1)²
Thus x² = ±(y² - 1)

We'll consider both cases and enumerate real solutions.

```python
import math

def enumerate_solutions():
    # Case 1: x² = y² - 1
    print("Solutions for x² = y² - 1:")
    for y in range(-3, 4):  # Check integer values first
        rhs = y**2 - 1
        if rhs >= 0:
            x_pos = math.sqrt(rhs)
            x_neg = -x_pos
            print(f"({x_pos:.3f}, {y})")
            if x_pos != 0:  # Avoid duplicate for x=0
                print(f"({x_neg:.3f}, {y})")
    
    # Case 2: x² = -y² + 1 (but x² must be non-negative)
    print("\nSolutions for x² = -y² + 1:")
    for y in range(-2, 3):
        rhs = -y**2 + 1
        if rhs >= 0:
            x_pos = math.sqrt(rhs)
            x_neg = -x_pos
            print(f"({x_pos:.3f}, {y})")
            if x_pos != 0:
                print(f"({x_neg:.3f}, {y})")
    
    # Check non-integer y values that might give exact solutions
    for y in [math.sqrt(2), -math.sqrt(2)]:
        rhs = y**2 - 1
        if rhs >= 0:
            x_pos = math.sqrt(rhs)
            x_neg = -x_pos
            print(f"({x_pos:.3f}, {y:.3f})")
            print(f"({x_neg:.3f}, {y:.3f})")

enumerate_solutions()
```
