[write_program]
This problem asks for the number of non-negative integers k such that there exist integers c and d satisfying c + d = 2000 and c = k*d. We can solve this by enumerating possible k values and checking the conditions.

The approach:
1. From c + d = 2000 and c = k*d, we get d = 2000/(k+1)
2. For d to be integer, (k+1) must divide 2000
3. We need to find all k â‰¥ 0 where (k+1) divides 2000
4. The number of such k equals the number of positive divisors of 2000

The program will:
1. Factorize 2000 to find all divisors
2. Count the number of divisors (each gives a valid k = divisor - 1)
3. Output the count

```python
def count_valid_k():
    n = 2000
    # Find all divisors of n
    divisors = set()
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    # Each divisor d gives k = d-1 (must be >=0)
    valid_k = [d-1 for d in divisors if d-1 >= 0]
    print(f"Valid k values: {sorted(valid_k)}")
    print(f"Total count: {len(valid_k)}")

count_valid_k()
```
