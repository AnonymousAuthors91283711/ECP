[write_program]
This problem involves computing the sum of an infinite series where each term is (1/2)^(2n-1). The series can be rewritten as a geometric series for easier computation. We'll write a Python program to compute partial sums of this series to observe convergence.

```python
def compute_series_sum(max_terms=20):
    """Compute partial sums of the series (1/2)^(2n-1) for n from 1 to max_terms"""
    total = 0.0
    for n in range(1, max_terms + 1):
        term = (1/2) ** (2 * n - 1)
        total += term
        print(f"After {n} terms: {total}")
    
    # The exact value can be computed as a geometric series sum
    # Series is 1/2 + 1/8 + 1/32 + ... = (1/2)/(1 - 1/4) = 2/3
    # But we won't print this to follow requirements

if __name__ == "__main__":
    compute_series_sum()
```
