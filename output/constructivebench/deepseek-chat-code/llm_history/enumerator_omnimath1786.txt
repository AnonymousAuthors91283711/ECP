[write_program]
This problem asks for the minimal sum `a + b` where `a` and `b` are positive integers with `a ≠ b` satisfying a certain equation that depends on whether `a < b` or `a > b`. We'll write a Python program to enumerate possible pairs `(a, b)` and find the minimal sum.

The approach:
1. Iterate through possible sums `s` starting from the smallest possible (3)
2. For each sum, generate all pairs `(a, b)` with `a + b = s` and `a ≠ b`
3. Check which pairs satisfy the given condition
4. The first sum where at least one valid pair exists is our answer

```python
def find_min_sum():
    max_sum_to_check = 100  # reasonable upper bound
    
    for s in range(3, max_sum_to_check + 1):
        found = False
        for a in range(1, s):
            b = s - a
            if a == b or a <= 0 or b <= 0:
                continue
            
            if a < b:
                condition = (a - 20) * (b + 23) == a * b
            else:
                condition = (b - 20) * (a + 23) == a * b
            
            if condition:
                print(f"Found valid pair: ({a}, {b}) with sum {s}")
                found = True
                break
        
        if found:
            print(f"Minimal sum found: {s}")
            return
    
    print("No valid pair found within the search range")

find_min_sum()
```
