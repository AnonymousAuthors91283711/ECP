[write_program]
This problem involves calculating the probability that a frog starting at position 1 on the number line will reach position 7, where at each step it can jump to either the next integer or the one after that (with equal probability). The solution requires computing recursive probabilities.

We'll write a Python program to:
1. Model the recursive probability calculation
2. Compute the exact rational probability for position 7
3. Output the numerator and denominator in simplest form

```python
from fractions import Fraction

def compute_probabilities(max_n):
    # Base cases
    prob = {
        0: Fraction(0, 1),
        1: Fraction(1, 1),
        2: Fraction(1, 1)
    }
    
    # Compute recursively up to max_n
    for n in range(3, max_n + 1):
        prob[n] = (prob[n-1] + prob[n-2]) / 2
    
    return prob

def main():
    max_position = 7
    probabilities = compute_probabilities(max_position)
    result = probabilities[max_position]
    
    # Simplify and output numerator and denominator
    numerator = result.numerator
    denominator = result.denominator
    print(f"Numerator: {numerator}, Denominator: {denominator}")

if __name__ == "__main__":
    main()
```
