[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev omnimath4006_answer : Set ℕ := sorry
def digitSum (n : ℕ) : ℕ := (digits 10 n).sum

theorem omnimath4006 (n : ℕ) (h : 0 < n) :
    (digitSum n * (digitSum n - 1) = n - 1) ↔ n ∈ omnimath4006_answer := by sorry. Enumerated answers: Searching numbers up to 1000000...
1
13
43
91
157. Expected Answer Type: Set ℕ
Looking at the enumerated answers (1, 13, 43, 91, 157), I notice these are all numbers of the form 6n² - 6n + 1 for n ∈ ℕ. The pattern fits:
- n=1: 6*1-6*1+1=1
- n=2: 24-12+1=13
- n=3: 54-18+1=37 (not matching, but next is 43)
Wait, correction: The pattern seems to be numbers where digitSum(n) * (digitSum(n)-1) = n-1. The digit sums are:
1:1, 13:4, 43:7, 91:10, 157:13
These digit sums form an arithmetic sequence 3k+1. The numbers themselves seem to be 9k² + 3k + 1.

<<<{n | ∃ k, n = 9*k^2 + 3*k + 1}>>>