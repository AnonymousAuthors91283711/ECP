[write_program]
This problem involves finding the 7th term of a sequence defined by recurrence relations, given the 6th term is 120. The sequence starts with two positive integers a < b, and follows a Fibonacci-like recurrence. We'll write a program to enumerate possible (a,b) pairs and compute seq(7) for each valid case where seq(6)=120.

```python
def compute_sequence(a, b, n):
    """Compute sequence term n given initial terms a and b"""
    seq = [a, b]
    for i in range(2, n+1):
        next_term = seq[i-2] + seq[i-1]
        seq.append(next_term)
    return seq

def find_valid_pairs(max_a=100):
    """Find all (a,b) pairs where a < b and seq[6] = 120"""
    results = []
    for a in range(1, max_a):
        for b in range(a+1, 2*max_a):  # b > a
            seq = compute_sequence(a, b, 7)
            if seq[6] == 120:
                results.append((a, b, seq[7]))
                print(f"Found pair: a={a}, b={b}, seq[7]={seq[7]}")
    return results

if __name__ == "__main__":
    print("Searching for valid (a,b) pairs where seq[6]=120...")
    valid_pairs = find_valid_pairs()
    if valid_pairs:
        print("\nAll valid pairs found:")
        for a, b, s7 in valid_pairs:
            print(f"a={a}, b={b} â†’ seq[7]={s7}")
    else:
        print("No valid pairs found in the search range.")
```
