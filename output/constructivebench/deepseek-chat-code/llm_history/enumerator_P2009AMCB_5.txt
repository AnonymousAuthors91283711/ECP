[write_program]
This problem asks to find natural numbers a, b, c > 0 where a = b and a*b*c = 128, then compute their sum. Since a = b, we can simplify to a²*c = 128. We'll enumerate possible values of a (which must divide √128) and compute corresponding c values.

```python
def find_solutions():
    target = 128
    print("Enumerating solutions for a²*c = 128 where a = b and a,b,c > 0:")
    solutions = []
    max_a = int(target**0.5) + 1
    for a in range(1, max_a + 1):
        if target % (a*a) == 0:
            c = target // (a*a)
            if c > 0:
                b = a
                sum_abc = a + b + c
                print(f"a={a}, b={b}, c={c} → sum={sum_abc}")
                solutions.append(sum_abc)
    
    if solutions:
        print("\nPossible sums found:", sorted(solutions))
        print("Minimum sum:", min(solutions))
        print("Maximum sum:", max(solutions))

find_solutions()
```
