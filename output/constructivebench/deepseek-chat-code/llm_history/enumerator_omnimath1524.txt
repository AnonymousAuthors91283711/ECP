[write_program]
This problem asks for the count of numbers between 1 and 1997 that are coprime with 1547. To solve this, we'll:

1. Factorize 1547 to get its prime factors (7×13×17)
2. Use inclusion-exclusion principle to count numbers ≤1997 not divisible by any of these primes
3. Implement this efficiently in Python

The inclusion-exclusion formula is:
count = N - sum(N//p) + sum(N//(p*q)) - sum(N//(p*q*r)) + ...

```python
def count_coprimes(N, factors):
    from itertools import combinations
    count = 0
    num_factors = len(factors)
    for k in range(1, num_factors + 1):
        for combo in combinations(factors, k):
            product = 1
            for p in combo:
                product *= p
            term = N // product
            if k % 2 == 1:
                count += term
            else:
                count -= term
    return N - count

def main():
    N = 1997
    factors = [7, 13, 17]  # 1547 = 7 × 13 × 17
    result = count_coprimes(N, factors)
    print(f"Count of numbers <{N+1} coprime to 1547: {result}")

if __name__ == "__main__":
    main()
```
