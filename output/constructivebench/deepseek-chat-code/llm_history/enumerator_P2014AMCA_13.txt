[write_program]
This problem asks for the number of functions from a 5-element set to itself where no element in the codomain appears more than twice in the function's image (i.e., no more than two inputs map to any given output). 

We'll enumerate all possible functions from {0,1,2,3,4} to itself and count those satisfying the condition. The approach is:
1. Generate all possible 5-tuples (f(0), f(1), f(2), f(3), f(4)) where each f(i) ∈ {0,1,2,3,4}
2. For each function, count occurrences of each output value
3. Check if all counts are ≤ 2
4. Count valid functions

```python
from itertools import product

def count_valid_functions():
    count = 0
    n = 5
    # Generate all possible functions as 5-tuples
    for f in product(range(n), repeat=n):
        # Count occurrences of each output value
        counts = [0] * n
        valid = True
        for y in f:
            counts[y] += 1
            if counts[y] > 2:
                valid = False
                break
        if valid:
            count += 1
            print(f"Found valid function {f}")  # Print each valid function
    print(f"Total count: {count}")

count_valid_functions()
```
