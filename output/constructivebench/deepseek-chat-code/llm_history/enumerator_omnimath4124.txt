[write_program]
This problem asks to find all positive integers n such that among the six consecutive numbers n, n+1, n+2, n+3, n+4, n+5, we can partition them into two triplets {a,b,c} and {d,e,f} where the product of the numbers in each triplet is equal.

We'll write a Python program to:
1. Enumerate small values of n
2. For each n, check all possible ways to split the 6 numbers into two triplets
3. Check if any partition satisfies a*b*c == d*e*f
4. Output the values of n that satisfy this condition

```python
from itertools import combinations

def find_valid_n(max_n=100):
    results = []
    for n in range(1, max_n + 1):
        numbers = [n + i for i in range(6)]
        # Generate all combinations of 3 numbers from the 6
        for triplet in combinations(numbers, 3):
            a, b, c = triplet
            product = a * b * c
            # The remaining three numbers
            remaining = [num for num in numbers if num not in triplet]
            d, e, f = remaining
            if product == d * e * f:
                print(n)
                results.append(n)
                break  # Found one partition, no need to check others
    return results

if __name__ == "__main__":
    valid_n = find_valid_n(100)
    print("Found values of n:", valid_n)
```
