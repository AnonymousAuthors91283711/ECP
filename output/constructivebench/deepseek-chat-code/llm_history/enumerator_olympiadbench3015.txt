[write_program]
This problem asks for the smallest positive integer n where the sum of its decimal digits equals 5 times the sum of the decimal digits of n+2019. We'll write a Python program to search for such numbers efficiently.

The approach:
1. Iterate through numbers starting from 1
2. For each number, calculate digit sums of n and n+2019
3. Check if digit_sum(n) == 5 * digit_sum(n+2019)
4. Stop at the first number satisfying this condition (since we want the smallest)

```python
def digit_sum(n):
    return sum(int(d) for d in str(n))

def find_min_n():
    n = 1
    while True:
        ds_n = digit_sum(n)
        ds_n2019 = digit_sum(n + 2019)
        if ds_n == 5 * ds_n2019:
            print(f"Found candidate: {n}")
            return n
        n += 1
        # Prevent infinite loop in case no solution found (unlikely for this problem)
        if n > 10**6:
            print("Search limit reached")
            return None

if __name__ == "__main__":
    find_min_n()
```
