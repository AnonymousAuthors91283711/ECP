[write_program]
This problem involves finding pairs of positive integers (a, b) that satisfy two conditions:
1. a + b + gcd(a,b)^2 = lcm(a,b)
2. lcm(a,b) = 2 * lcm(a-1, b)

We'll write a Python program to enumerate possible pairs (a,b) within a reasonable range and check these conditions. The program will output valid pairs as it finds them.

```python
import math

def gcd(a, b):
    return math.gcd(a, b)

def lcm(a, b):
    return a * b // gcd(a, b)

max_n = 100  # Reasonable upper bound for enumeration

print("Searching for pairs (a,b) satisfying:")
print("1. a + b + gcd(a,b)^2 == lcm(a,b)")
print("2. lcm(a,b) == 2 * lcm(a-1,b)")
print()

found_pairs = []
for a in range(1, max_n + 1):
    for b in range(1, max_n + 1):
        current_gcd = gcd(a, b)
        current_lcm = lcm(a, b)
        condition1 = (a + b + current_gcd**2) == current_lcm
        
        if condition1:
            if a > 1:
                prev_lcm = lcm(a - 1, b)
                condition2 = current_lcm == 2 * prev_lcm
            else:
                condition2 = False
            
            if condition2:
                found_pairs.append((a, b))
                print(f"Found pair: ({a}, {b})")

print("\nAll found pairs:")
for pair in found_pairs:
    print(pair)
```
