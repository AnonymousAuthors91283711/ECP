[write_program]
This problem asks to find rational-coefficient polynomials p and q of degree ≤2 such that p(n)/q(n)=n³ for n=1,2,3,4,5, and then evaluate p(0)/q(0). We'll enumerate possible p and q polynomials with small integer coefficients to find matches.

The approach:
1. Generate all possible p and q polynomials with degree ≤2 and coefficients in [-3,3]
2. Check if p(n)/q(n)=n³ for n=1,2,3,4,5
3. For valid pairs, compute p(0)/q(0)

```python
from itertools import product
from fractions import Fraction

def eval_poly(coeffs, x):
    return sum(c * (x**i) for i, c in enumerate(coeffs))

def generate_polys(max_degree, coeff_range):
    return product(*[range(coeff_range[0], coeff_range[1]+1) for _ in range(max_degree+1)])

def is_valid(p, q):
    for n in range(1, 6):
        q_val = eval_poly(q, n)
        if q_val == 0:
            return False
        if eval_poly(p, n) != n**3 * q_val:
            return False
    return True

max_degree = 2
coeff_range = (-3, 3)
found = False

print("Searching for valid (p, q) pairs with coefficients in", coeff_range)
for p_coeffs in generate_polys(max_degree, coeff_range):
    for q_coeffs in generate_polys(max_degree, coeff_range):
        if q_coeffs == (0, 0, 0):
            continue  # Skip zero polynomial
        if is_valid(p_coeffs, q_coeffs):
            p0 = eval_poly(p_coeffs, 0)
            q0 = eval_poly(q_coeffs, 0)
            if q0 != 0:
                ratio = Fraction(p0, q0)
                print(f"Found valid pair: p={p_coeffs}, q={q_coeffs}")
                print(f"p(0)/q(0) = {ratio} = {float(ratio)}")
                found = True
                # Remove break to find all possible solutions
                break
    if found:
        break

if not found:
    print("No valid pairs found in the given coefficient range")
```
