[write_program]
The problem asks to find all real-valued functions \( f: \mathbb{R} \to \mathbb{R} \) satisfying the functional equation:
\[ f(xy) \cdot (f(x) - f(y)) = (x - y) \cdot f(x) \cdot f(y) \]
for all \( x, y \in \mathbb{R} \).

We can enumerate possible solutions by testing simple forms like constant functions, linear functions, and rational functions. The program will check these candidates and print valid solutions.

```python
def check_solution(f):
    """Check if f satisfies the functional equation for random x, y."""
    from random import uniform
    for _ in range(100):  # Test 100 random pairs
        x = uniform(-10, 10)
        y = uniform(-10, 10)
        try:
            left = f(x * y) * (f(x) - f(y))
            right = (x - y) * f(x) * f(y)
            if not abs(left - right) < 1e-6:  # Account for floating point errors
                return False
        except ZeroDivisionError:
            continue  # Skip if division by zero occurs
    return True

# Test constant functions f(x) = c
print("Testing constant functions:")
for c in [0, 1, -1, 2, -2]:
    if check_solution(lambda x: c):
        print(f"Found solution: f(x) = {c}")

# Test linear functions f(x) = kx
print("\nTesting linear functions:")
for k in [0, 1, -1, 2, -2]:
    if check_solution(lambda x: k * x):
        print(f"Found solution: f(x) = {k}x")

# Test rational function f(x) = 1/x
print("\nTesting rational function f(x) = 1/x:")
if check_solution(lambda x: 1/x if x != 0 else float('inf')):
    print("Found solution: f(x) = 1/x (undefined at x=0)")

# Test zero function separately since it's a special case
print("\nSpecial case: zero function")
if check_solution(lambda x: 0):
    print("Found solution: f(x) = 0")
```
