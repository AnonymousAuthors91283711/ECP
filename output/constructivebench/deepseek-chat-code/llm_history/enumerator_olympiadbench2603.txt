[write_program]
This problem asks for the smallest positive integer n such that 214*n and 2014*n have the same number of divisors. We'll write a Python program to find this minimal n by checking numbers in order and comparing their divisor counts.

The approach:
1. Factorize numbers efficiently to count divisors
2. Compare divisor counts of 214*n and 2014*n for increasing n
3. Stop at the first n that satisfies the condition

```python
import math

def count_divisors(n):
    if n == 0:
        return 0
    count = 1
    # Handle 2 separately
    exponent = 0
    while n % 2 == 0:
        exponent += 1
        n = n // 2
    count *= (exponent + 1)
    
    # Check odd divisors up to sqrt(n)
    i = 3
    max_factor = math.sqrt(n)
    while i <= max_factor:
        exponent = 0
        while n % i == 0:
            exponent += 1
            n = n // i
            max_factor = math.sqrt(n)
        count *= (exponent + 1)
        i += 2
    
    # If n is prime
    if n > 1:
        count *= 2
    return count

def find_min_n():
    n = 1
    while True:
        d214 = count_divisors(214 * n)
        d2014 = count_divisors(2014 * n)
        if d214 == d2014:
            print(f"Found candidate: {n}")
            print(f"Number of divisors: {d214}")
            return n  # Return first (smallest) found
        n += 1

if __name__ == "__main__":
    result = find_min_n()
    print(f"Minimal n found: {result}")
```
