[write_program]
This problem asks for the last two digits of the sum of 2^i/25 for i from 0 to 2015. Since we're working modulo 100, we can consider the fractional part separately. The key insight is that 2^i/25 modulo 100 can be represented as (2^i mod 2500)/25.

Here's a Python program that:
1. Computes the sum of (2^i mod 2500) for i from 0 to 2015
2. Divides by 25 and takes modulo 100 to get the last two digits
3. Outputs the result efficiently using modular exponentiation

```python
def solve():
    mod = 2500
    total = 0
    current = 1  # 2^0
    for i in range(2016):
        total = (total + current) % mod
        current = (current * 2) % mod
    result = (total // 25) % 100
    print(result)

solve()
```
