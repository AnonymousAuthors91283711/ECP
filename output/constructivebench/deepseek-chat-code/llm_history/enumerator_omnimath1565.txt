[write_program]
This problem asks for all positive integer pairs (a, b) where there exist integers k and m such that:
1. (a² + b)/(b² - a) is an integer k
2. (b² + a)/(a² - b) is an integer m

We'll write a Python program to enumerate all such pairs (a, b) up to a reasonable threshold (1000) since the problem suggests the solution set is finite. We'll check each pair (a, b) where 1 ≤ a < b ≤ threshold to avoid duplicates due to symmetry.

```python
def find_pairs(threshold=1000):
    for a in range(1, threshold + 1):
        for b in range(1, threshold + 1):
            if a == b:
                continue  # skip when a=b as denominators would be zero
            denom1 = b*b - a
            denom2 = a*a - b
            if denom1 == 0 or denom2 == 0:
                continue  # skip division by zero cases
            
            # Check first condition (a² + b) divisible by (b² - a)
            if (a*a + b) % denom1 != 0:
                continue
            
            # Check second condition (b² + a) divisible by (a² - b)
            if (b*b + a) % denom2 != 0:
                continue
            
            print(f"Found pair: ({a}, {b})")

if __name__ == "__main__":
    find_pairs()
```
