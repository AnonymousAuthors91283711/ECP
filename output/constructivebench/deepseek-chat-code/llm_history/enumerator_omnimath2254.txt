[write_program]
This problem asks to find all pairs of positive integers (n, m) such that n² + m² = 9364. We'll write a Python program to enumerate all possible pairs efficiently by checking possible values of n up to √9364 and then verifying if the remainder is a perfect square.

```python
import math

def find_pairs(target):
    """Find all pairs (n, m) where n² + m² = target and n, m > 0"""
    max_n = int(math.isqrt(target))  # Maximum possible n value
    pairs = []
    for n in range(1, max_n + 1):
        remaining = target - n*n
        if remaining <= 0:
            continue
        m = math.isqrt(remaining)
        if m*m == remaining and m > 0:
            # Ensure we don't add duplicates like (a,b) and (b,a)
            if (m, n) not in pairs:
                pairs.append((n, m))
    return pairs

# Main execution
target = 9364
print(f"Searching for pairs (n, m) where n² + m² = {target}")
pairs = find_pairs(target)
for pair in pairs:
    print(pair)
```
