[write_program]
The problem asks to find the largest number n ≤ 100 that can be expressed as the sum of m consecutive positive integers where m ≥ 4. We need to enumerate all possible sums of consecutive integers with m ≥ 4 and find the maximum n ≤ 100.

The approach is:
1. Iterate through possible m values from 4 upwards
2. For each m, find possible starting points k where the sum of m consecutive integers starting at k is ≤ 100
3. Calculate these sums and track the maximum valid sum found

```python
def main():
    max_n = 0
    seen = set()
    
    for m in range(4, 100):
        # The sum of m consecutive integers starting at k is S = m*k + m*(m-1)/2
        # We need S <= 100 => k <= (100 - m*(m-1)/2)/m
        max_k = (200 - m*(m-1)) // (2*m)
        if max_k < 1:
            break  # No possible k for this m and larger m
        
        for k in range(1, max_k + 1):
            s = m * k + m * (m - 1) // 2
            if 1 <= s <= 100 and s not in seen:
                seen.add(s)
                if s > max_n:
                    max_n = s
                print(f"Found: {s} (m={m}, k={k})")
    
    print(f"\nMaximum n ≤ 100: {max_n}")

if __name__ == "__main__":
    main()
```
