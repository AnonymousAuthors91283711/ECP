[write_program]
The problem asks to count numbers from 1 to 2017 (inclusive) that have no 0 digits in their base-3 representation. We'll write a Python program to enumerate these numbers and count them.

The approach:
1. Convert each number from 1 to 2017 to base-3
2. Check if all digits are non-zero
3. Count numbers that satisfy the condition

```python
def count_non_zero_base3_numbers(max_n):
    count = 0
    for n in range(1, max_n + 1):
        num = n
        has_zero = False
        while num > 0:
            digit = num % 3
            if digit == 0:
                has_zero = True
                break
            num = num // 3
        if not has_zero:
            count += 1
            print(f"Found valid number: {n}")  # Stream partial results
    return count

max_n = 2017
print(f"Counting numbers from 1 to {max_n} with no 0 digits in base-3...")
total = count_non_zero_base3_numbers(max_n)
print(f"Total count: {total}")
```
