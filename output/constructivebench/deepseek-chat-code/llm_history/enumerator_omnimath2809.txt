[write_program]
This problem involves finding the smallest positive integer n such that there exists a natural number k satisfying two equations. The first equation relates n and k linearly (75n = k), while the second equation is more complex involving n and k. We'll write a Python program to search for the smallest n that satisfies both conditions.

The approach will be:
1. Iterate through possible values of n starting from 1
2. For each n, compute k from the first equation (k = 75n)
3. Check if the second equation holds with these values
4. Stop when we find the smallest n that satisfies both equations

```python
def find_min_n():
    n = 1
    while True:
        k = 75 * n
        # Compute right side of second equation: 783n = 10*(k + 6 + 5 + 4 + 3*(n-3))
        rhs = 10 * (k + 6 + 5 + 4 + 3 * (n - 3))
        lhs = 783 * n
        if lhs == rhs:
            print(f"Found solution: n = {n}, k = {k}")
            print(f"Minimum n is: {n}")
            return
        n += 1

find_min_n()
```
