[write_program]
This problem involves calculating the probability of a specific outcome in a multinomial distribution. We need to compute the probability of getting exactly 3 A's, 2 M's, and 1 C when drawing 6 times with probabilities p_A = 1/2, p_M = 2/3*(1/2) = 1/3, and p_C = 1/3*(1/2) = 1/6.

The formula is: (6!)/(3!2!1!) * (1/2)^3 * (1/3)^2 * (1/6)^1

We'll compute this exactly as a fraction and also provide a decimal approximation.

```python
from math import factorial
from fractions import Fraction

def main():
    n = 6
    k = [3, 2, 1]  # counts for A, M, C
    p = [Fraction(1,2), Fraction(1,3), Fraction(1,6)]  # probabilities
    
    # Calculate the multinomial coefficient
    multinomial_coeff = factorial(n)
    for ki in k:
        multinomial_coeff //= factorial(ki)
    
    # Calculate the probability product
    prob_product = Fraction(1,1)
    for ki, pi in zip(k, p):
        prob_product *= pi ** ki
    
    # Final probability
    probability = multinomial_coeff * prob_product
    
    # Output exact fraction and decimal approximation
    print(f"Exact probability: {probability}")
    print(f"Decimal approximation: {float(probability):.6f}")

if __name__ == "__main__":
    main()
```
