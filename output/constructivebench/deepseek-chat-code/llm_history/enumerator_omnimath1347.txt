[write_program]
This problem involves computing a finite sum of rational terms. We'll write a Python program to compute the exact sum by enumerating each term, accumulating them, and simplifying the result to lowest terms.

The sum is: sum from i=0 to 13 of (2i+3)/(i²(i+1)²)

We'll:
1. Compute each term exactly using fractions
2. Accumulate the sum
3. Print intermediate results
4. Output the final simplified fraction

```python
from fractions import Fraction

def compute_sum():
    total = Fraction(0, 1)
    for i in range(14):  # 0 to 13 inclusive
        numerator = 2 * i + 3
        denominator = (i ** 2) * ((i + 1) ** 2) if i != 0 else 1
        if i == 0:
            term = Fraction(3, 1)  # Handle i=0 case (denominator would be 0 otherwise)
        else:
            term = Fraction(numerator, denominator)
        total += term
        print(f"After i={i}: {total} (exact {total.numerator}/{total.denominator})")
    
    # Simplify the final result
    simplified = total
    print("\nFinal simplified result:")
    print(f"{simplified.numerator}/{simplified.denominator}")

compute_sum()
```
