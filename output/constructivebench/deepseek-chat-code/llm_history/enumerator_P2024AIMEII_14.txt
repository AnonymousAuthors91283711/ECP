[write_program]
The problem asks for the smallest base b ≥ 2 where there are more than 10 beautiful numbers n. A beautiful number n in base b satisfies:
1. 2 ≤ b ≤ n < b²
2. Has exactly 2 digits in base b
3. The sum of its digits equals √n

We'll write a Python program to:
1. Iterate through possible bases b starting from 2
2. For each b, check all 2-digit numbers n (from b to b²-1)
3. Count how many satisfy the beautiful condition
4. Find the smallest b with count > 10

```python
import math

def is_beautiful(b, n):
    if not (2 <= b <= n < b*b):
        return False
    d1 = n // b
    d0 = n % b
    return d1 + d0 == math.isqrt(n) and (d1 + d0)**2 == n

def find_min_base():
    b = 2
    while True:
        count = 0
        for n in range(b, b*b):
            if is_beautiful(b, n):
                count += 1
                print(f"Base {b}: found beautiful number {n}")
        print(f"Base {b} has {count} beautiful numbers")
        if count > 10:
            print(f"Found base {b} with {count} beautiful numbers (>10)")
            return b
        b += 1

if __name__ == "__main__":
    find_min_base()
```
