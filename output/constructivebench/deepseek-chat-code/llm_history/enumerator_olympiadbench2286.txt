[write_program]
This problem involves finding a natural number `n` (with `n > 5`) that satisfies several conditions about an arithmetic sequence `t`. The sequence has a common difference `d`, with given values at specific points (`t(3)=5` and `t(n-2)=95`), and a sum constraint.

We'll:
1. Model the arithmetic sequence with common difference `d`
2. Express all conditions in terms of `n` and `d`
3. Enumerate possible values of `n` and solve for `d` that satisfies all constraints

```python
def main():
    # We'll search for n in a reasonable range (6 to 50)
    for n in range(6, 51):
        # From t(3)=5 and t(n-2)=95, we can express d in two ways
        # t(k) = t(1) + (k-1)*d
        # t(3) = t(1) + 2d = 5 => t(1) = 5 - 2d
        # t(n-2) = t(1) + (n-3)d = 95
        # Substitute t(1): 5 - 2d + (n-3)d = 95 => (n-5)d = 90 => d = 90/(n-5)
        
        # d must be integer
        if 90 % (n - 5) != 0:
            continue
        d = 90 // (n - 5)
        
        t1 = 5 - 2 * d
        
        # Calculate sum of first n terms: S = n/2 * (2t1 + (n-1)d)
        S = n * (2 * t1 + (n - 1) * d) // 2
        
        if S == 1000:
            print(f"Found candidate: n={n}, d={d}, t1={t1}, sum={S}")
            # Verify all conditions
            t3 = t1 + 2 * d
            tn2 = t1 + (n - 3) * d
            if t3 == 5 and tn2 == 95:
                print(f"Valid solution found: n={n}")
                return
    
    print("No solution found in range")

if __name__ == "__main__":
    main()
```
