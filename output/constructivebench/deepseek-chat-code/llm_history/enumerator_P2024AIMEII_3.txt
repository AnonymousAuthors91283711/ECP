[write_program]
The problem involves finding the number of 2x3 grids with digits (0-9) where:
1. The first row forms the number 999 when read as a 3-digit number (ABC where A is hundreds, B is tens, C is units)
2. The second row also forms 999
3. The sum of corresponding digits from both rows forms 99 when read as a 3-digit number

We need to count all valid digit combinations (a,b,c,d,e,f) where:
- a + 10b + 100c = 999 (first row)
- d + 10e + 100f = 999 (second row)
- (a+d) + 10(b+e) + 100(c+f) = 99 (sum of digits)

The program will enumerate all possible digit combinations that satisfy these constraints.

```python
def solve():
    count = 0
    # First row must be 999, so digits are fixed
    a, b, c = 9, 9, 9
    
    # Enumerate all possible second row digits (d,e,f) that also make 999
    for d in range(10):
        for e in range(10):
            for f in range(10):
                if d + 10*e + 100*f != 999:
                    continue
                # Check the sum condition
                sum_units = a + d
                sum_tens = b + e
                sum_hundreds = c + f
                if sum_units + 10*sum_tens + 100*sum_hundreds == 99:
                    count += 1
                    print(f"Found solution: ({a},{b},{c}), ({d},{e},{f})")
    
    print(f"Total solutions: {count}")

solve()
```
