[write_program]
This problem is about counting numbers between 1 and 2500 that have exactly three proper divisors less than 50. A proper divisor of n is a divisor d where 1 ≤ d < n. We need to find all such numbers n where the count of proper divisors d (with d < 50 and d ≠ n) equals exactly 3.

The Python program will:
1. Iterate through numbers from 1 to 2500
2. For each number, count its proper divisors less than 50
3. Track numbers that have exactly 3 such divisors
4. Output each qualifying number as found, then the total count

```python
def count_proper_divisors_less_than(n, limit):
    """Count proper divisors of n less than limit and not equal to n"""
    if n == 1:
        return 0  # 1 has no proper divisors
    count = 0
    for d in range(1, min(n, limit)):
        if n % d == 0 and d != n:
            count += 1
    return count

def find_numbers():
    total = 0
    for n in range(1, 2501):
        count = count_proper_divisors_less_than(n, 50)
        if count == 3:
            print(f"Found: {n}")
            total += 1
    print(f"Total count: {total}")

find_numbers()
```
