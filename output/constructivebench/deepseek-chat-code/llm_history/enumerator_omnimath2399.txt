[write_program]
This problem asks for the number of binary sequences of length 12 with exactly 4 ones, where no two consecutive ones appear. This is equivalent to counting combinations where we place 4 ones in 12 positions with the restriction that no two ones are adjacent.

The solution involves combinatorics: we can think of placing the 4 ones with at least one zero between them, then distributing the remaining zeros. The number of ways is C(n-k+1, k) where n=12 and k=4.

Here's a Python program to enumerate and count all valid sequences:

```python
from itertools import combinations

def is_valid(sequence):
    for i in range(len(sequence)-1):
        if sequence[i] == 1 and sequence[i+1] == 1:
            return False
    return True

def count_valid_sequences(n, k):
    positions = range(n)
    valid_count = 0
    
    for combo in combinations(positions, k):
        sequence = [0]*n
        for pos in combo:
            sequence[pos] = 1
        if is_valid(sequence):
            valid_count += 1
            print(sequence)  # Print each valid sequence found
    
    print(f"Total valid sequences for n={n}, k={k}: {valid_count}")
    return valid_count

# Parameters for the problem
n = 12
k = 4
count_valid_sequences(n, k)
```

The program:
1. Generates all combinations of 4 positions out of 12
2. Checks each combination for consecutive ones
3. Counts and prints valid sequences
4. Finally outputs the total count

The output will show all valid sequences and the final count, which should match the mathematical solution C(12-4+1, 4) = C(9,4) = 126.
