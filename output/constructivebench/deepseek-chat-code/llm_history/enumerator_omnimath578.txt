[write_program]
This problem involves calculating the sum of digits of a product of numbers of the form (10^(2^i) - 1) for i from 0 to n. We'll write a Python program to compute this for small values of n to identify a pattern.

The approach:
1. Compute the product of (10^(2^i) - 1) for i from 0 to n
2. Convert the product to a string to access its digits
3. Sum all the digits
4. Output results for n from 0 to a reasonable limit (we'll use 5)

```python
def compute_sum(n):
    product = 1
    for i in range(n + 1):
        term = 10 ** (2 ** i) - 1
        product *= term
    
    digit_sum = sum(int(d) for d in str(product))
    return digit_sum

max_n = 5
print("n | Sum of digits")
print("----------------")
for n in range(max_n + 1):
    s = compute_sum(n)
    print(f"{n} | {s}")
```
