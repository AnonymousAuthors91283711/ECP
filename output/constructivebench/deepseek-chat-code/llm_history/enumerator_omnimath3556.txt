[write_program]
The problem asks to find the unique natural number n between 100 and 1997 such that (2^n + 2) is divisible by n. We need to write a Python program to search for this number by checking each candidate in the range.

The approach is to:
1. Iterate through numbers from 100 to 1997
2. For each number n, check if (2**n + 2) is divisible by n
3. Print any numbers that satisfy this condition
4. Since the theorem states there's exactly one solution, we can stop after finding it

```python
def find_solution():
    for n in range(100, 1998):
        # Compute 2^n mod n using pow for efficiency
        remainder = pow(2, n, n)
        if (remainder + 2) % n == 0:
            print(n)
            return  # Stop after finding the first solution since it's unique

find_solution()
```
