[write_program]
The problem involves calculating the sum of logarithms with base 2002 for squares of three numbers (11, 13, 14). We need to find the exact value of this sum. The key observation is that log properties allow combining the terms into a single logarithm of the product.

Here's a Python program that calculates this value exactly using logarithm properties and verifies it numerically:

```python
import math

def main():
    # Calculate the exact value using logarithm properties
    n1, n2, n3 = 11, 13, 14
    product = (n1 * n2 * n3) ** 2
    exact_value = math.log(product, 2002)
    
    # Calculate numerically by summing individual logs
    sum_logs = math.log(n1**2, 2002) + math.log(n2**2, 2002) + math.log(n3**2, 2002)
    
    # Verify both methods give same result
    print(f"Exact value using product: {exact_value}")
    print(f"Numerical sum of logs: {sum_logs}")
    print(f"Difference: {abs(exact_value - sum_logs)} (should be very small)")

if __name__ == "__main__":
    main()
```
