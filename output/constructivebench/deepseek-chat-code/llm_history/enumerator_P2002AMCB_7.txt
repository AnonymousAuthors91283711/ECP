[write_program]
The problem asks to find a positive integer k such that k*(k+1)*(k+2) = 8*(k + (k+1) + (k+2)), and then compute k² + (k+1)² + (k+2)². We'll write a Python program to search for such k values and compute the required sum of squares.

The approach is:
1. Iterate through possible k values (we'll limit to 100 as a reasonable bound)
2. Check if the equation k*(k+1)*(k+2) == 8*(3k + 3) holds
3. For valid k, compute k² + (k+1)² + (k+2)²
4. Output both k and the sum of squares when found

```python
def solve():
    max_k = 100  # Reasonable upper bound
    for k in range(1, max_k + 1):
        left = k * (k + 1) * (k + 2)
        right = 8 * (k + (k + 1) + (k + 2))
        if left == right:
            sum_squares = k**2 + (k+1)**2 + (k+2)**2
            print(f"k = {k}, sum of squares = {sum_squares}")
            return  # Stop after first solution since problem suggests unique answer

solve()
```
