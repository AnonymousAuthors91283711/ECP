[write_program]
The problem asks for the smallest positive integer n where:
1. The number of odd divisors is 6
2. The number of even divisors is 12

We'll write a Python program to find this minimal n by:
1. Iterating through numbers starting from 1
2. Counting odd and even divisors for each number
3. Checking the conditions (6 odd divisors and 12 even divisors)
4. Printing candidates and finally the minimal solution

```python
def count_divisors(n):
    """Count odd and even divisors of n"""
    odd = 0
    even = 0
    for d in range(1, int(n**0.5) + 1):
        if n % d == 0:
            # Count both d and n/d
            for divisor in (d, n//d):
                if divisor == d and d*d == n:
                    continue  # avoid double-counting perfect squares
                if divisor % 2 == 1:
                    odd += 1
                else:
                    even += 1
    return odd, even

def find_min_n():
    """Find minimal n with 6 odd and 12 even divisors"""
    n = 1
    while True:
        odd, even = count_divisors(n)
        if odd == 6 and even == 12:
            print(f"Found candidate: {n}")
            return n  # return first (smallest) solution
        n += 1

if __name__ == "__main__":
    solution = find_min_n()
    print(f"Minimal solution: {solution}")
```
