[write_program]
This problem involves finding numbers between 1 and 1000 where both the number and its square have no digit '2' in their base-3 representation. We'll write a Python program to enumerate such numbers.

The approach:
1. Convert numbers to base-3
2. Check for absence of digit '2' in both number and its square
3. Count all such numbers up to 1000

```python
def is_mild(n):
    """Check if number has no '2' in base-3 digits"""
    while n > 0:
        if n % 3 == 2:
            return False
        n = n // 3
    return True

count = 0
for n in range(1, 1001):
    if is_mild(n) and is_mild(n * n):
        print(n)  # Stream partial results
        count += 1

print(f"Total count: {count}")  # Final answer
```
