[write_program]
This problem asks for positive integers n where (n³ - 1989)/n is a perfect square. We'll write a Python program to find all such n up to a reasonable threshold (since n³ grows quickly, we can limit our search).

The approach:
1. Iterate n from 1 upwards
2. For each n, compute (n³ - 1989)/n which must be integer and perfect square
3. Check if the result is a perfect square
4. Print valid n values as they're found

```python
import math

def is_perfect_square(k):
    if k < 0:
        return False
    s = int(math.isqrt(k))
    return s * s == k

max_n = 200  # Sufficiently large to find all solutions
print(f"Searching for solutions up to n={max_n}...")
for n in range(1, max_n + 1):
    numerator = n**3 - 1989
    if numerator % n != 0:
        continue
    m_squared = numerator // n
    if is_perfect_square(m_squared):
        print(f"Found solution: n = {n} (m² = {m_squared})")
```
