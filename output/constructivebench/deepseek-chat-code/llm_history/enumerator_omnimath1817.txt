[write_program]
This problem asks for the largest natural number n where the sum of digits of all numbers from 1 to n, minus 1, equals 10,000. We'll write a Python program to find this number by calculating cumulative digit sums efficiently.

The approach:
1. Iterate through numbers while maintaining a running total of digit sums
2. Check when (total - 1) equals 10,000
3. Track the largest such number found
4. Stop when we're certain no larger numbers will satisfy the condition

```python
def sum_digits(n):
    return sum(int(d) for d in str(n))

def find_max_n():
    total = 0
    max_n = 0
    n = 1
    while True:
        total += sum_digits(n)
        if total - 1 == 10000:
            print(f"Found candidate: {n}")
            max_n = n
        # Stop when we're sure we've passed all possible candidates
        # Since digit sums are always positive, total will only increase
        if total - 1 > 10000:
            break
        n += 1
    print(f"Maximum n satisfying the condition: {max_n}")

find_max_n()
```
