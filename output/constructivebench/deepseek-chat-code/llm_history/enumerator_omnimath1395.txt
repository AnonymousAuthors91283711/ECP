[write_program]
This problem asks for all pairs of positive integers (a, b) such that a*b divides a^2017 + b. We'll write a Python program to enumerate small pairs (a, b) that satisfy this condition, looking for patterns.

The approach:
1. Iterate a from 1 to a reasonable bound (we'll use 20)
2. For each a, iterate b from 1 to a reasonable bound (we'll use 1000)
3. Check if a*b divides a^2017 + b
4. Print valid pairs immediately when found

Note: Computing a^2017 directly would be inefficient, so we'll use modular arithmetic to check divisibility.

```python
def find_pairs(max_a=20, max_b=1000):
    for a in range(1, max_a + 1):
        for b in range(1, max_b + 1):
            # Compute (a^2017 + b) mod (a*b)
            # Using pow with modulus for efficiency
            mod = a * b
            if mod == 0:
                continue
            # Compute a^2017 mod mod
            a_pow = pow(a, 2017, mod)
            total = (a_pow + b) % mod
            if total == 0:
                print(f"Found pair: ({a}, {b})")

if __name__ == "__main__":
    find_pairs()
```
