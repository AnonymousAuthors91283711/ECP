[write_program]
This problem asks whether there exists a natural number n â‰¥ 2 and a polynomial P with natural number coefficients such that:
1. All coefficients from 0 to n-1 are positive
2. For all positive integers k, the sum of digits of k is odd if and only if the sum of digits of P(k) is odd

We'll write a Python program to search for such polynomials with small degrees and coefficients.

```python
from itertools import product

def digit_sum_odd(n):
    return sum(int(d) for d in str(n)) % 2 == 1

def test_polynomial(coeffs):
    """Test if polynomial with given coefficients satisfies the condition"""
    max_test = 20  # Test up to this value
    for k in range(1, max_test + 1):
        # Evaluate polynomial P(k) = c0 + c1*k + c2*k^2 + ...
        p_val = sum(c * (k**i) for i, c in enumerate(coeffs))
        if digit_sum_odd(k) != digit_sum_odd(p_val):
            return False
    return True

def search_polynomials(max_degree=3, max_coeff=3):
    """Search for polynomials up to given degree and coefficient size"""
    for degree in range(2, max_degree + 1):
        print(f"Searching degree {degree} polynomials...")
        # Generate all possible coefficient combinations
        for coeffs in product(range(1, max_coeff + 1), repeat=degree + 1):
            if test_polynomial(coeffs):
                print(f"Found candidate: P(x) = {' + '.join(f'{c}x^{i}' for i, c in enumerate(coeffs))}")

if __name__ == "__main__":
    search_polynomials()
```
