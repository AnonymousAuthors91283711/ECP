[write_program]
This problem asks for the minimal natural number x that can be expressed as a sum of three positive integers a, b, c where a/77 + b/91 + c/143 = 1. We'll write a Python program to find this minimal x by enumerating possible combinations.

The approach:
1. Find common denominator (LCM of 77, 91, 143) which is 1001
2. The equation can be rewritten as 13a + 11b + 7c = 1001
3. We'll search for minimal a+b+c by iterating through possible combinations

```python
import math

def lcm(a, b):
    return a * b // math.gcd(a, b)

def main():
    # Calculate LCM of denominators
    denoms = [77, 91, 143]
    common_denom = 1
    for d in denoms:
        common_denom = lcm(common_denom, d)
    
    # The equation becomes 13a + 11b + 7c = 1001
    min_sum = float('inf')
    
    # Iterate possible a values (since 13 is largest coefficient)
    max_a = common_denom // 77
    for a in range(1, max_a + 1):
        remaining = 1001 - 13 * a
        if remaining <= 0:
            continue
        
        # Iterate possible b values for current a
        max_b = remaining // 11
        for b in range(1, max_b + 1):
            rem = remaining - 11 * b
            if rem <= 0:
                continue
            
            # Check if remaining is divisible by 7
            if rem % 7 == 0:
                c = rem // 7
                if c >= 1:
                    current_sum = a + b + c
                    print(f"Found solution: a={a}, b={b}, c={c}, sum={current_sum}")
                    if current_sum < min_sum:
                        min_sum = current_sum
    
    print(f"Minimal sum found: {min_sum}")

if __name__ == "__main__":
    main()
```
