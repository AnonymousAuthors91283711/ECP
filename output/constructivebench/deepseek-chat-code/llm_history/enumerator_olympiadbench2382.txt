[write_program]
This problem involves counting the number of integer triples (a,b,c) such that:
1. a + b + c = n
2. a ≤ b ≤ c
3. a + b > c (triangle inequality)
for n = 10, 11, or 12.

We'll write a Python program to enumerate all valid triples for these values of n and count them. The program will:
1. Iterate through possible values of a, b, c for each n
2. Check the conditions a ≤ b ≤ c, a + b + c = n, and a + b > c
3. Count and print the valid triples for each n

```python
def count_triples(n):
    count = 0
    for a in range(1, n + 1):
        for b in range(a, n + 1):
            c = n - a - b
            if c >= b and a + b > c and c >= 1:
                count += 1
    return count

for n in [10, 11, 12]:
    print(f"n = {n}, T(n) = {count_triples(n)}")
```
