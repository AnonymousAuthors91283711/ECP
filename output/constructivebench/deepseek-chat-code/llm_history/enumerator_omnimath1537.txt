[write_program]
This problem asks for the number of integer lattice points (pairs (x,y)) inside or on the boundary of a circle centered at the origin with radius 2009. We'll write a Python program to count these points efficiently by only considering one quadrant and multiplying by 4 (accounting for symmetry), then adjusting for points on the axes.

The approach:
1. For x from 0 to 2009, compute the maximum y for each x such that x² + y² ≤ 2009²
2. Count the points in one quadrant (excluding axes)
3. Multiply by 4 for all quadrants
4. Add the 4 points on the axes (excluding origin)
5. Add 1 for the origin

```python
import math

radius = 2009
radius_sq = radius * radius

# Count points in first quadrant (x>0, y>0)
count = 0
for x in range(1, radius + 1):
    max_y = int(math.sqrt(radius_sq - x*x))
    count += max_y

# Multiply by 4 for all quadrants
total = 4 * count

# Add points on axes (4*radius) and origin (1)
total += 4 * radius + 1

print(total)
```
