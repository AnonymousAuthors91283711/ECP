[write_program]
This problem asks for the number of functions f from Fin 3 × Fin 3 → Bool (essentially 3×3 binary matrices) where:
1. Each row has exactly 2 True values
2. Each column has exactly 2 True values

We'll enumerate all possible 3×3 binary matrices satisfying these conditions. The solution involves checking all possible matrices and counting those that meet the criteria.

```python
from itertools import product

def count_valid_matrices():
    count = 0
    # Generate all possible 3x3 binary matrices
    for matrix in product([0,1], repeat=9):
        m = [list(matrix[i*3:(i+1)*3]) for i in range(3)]
        valid = True
        # Check row condition: exactly 2 True values per row
        for row in m:
            if sum(row) != 2:
                valid = False
                break
        if not valid:
            continue
        # Check column condition: exactly 2 True values per column
        for col in range(3):
            if sum(m[row][col] for row in range(3)) != 2:
                valid = False
                break
        if valid:
            count += 1
            # Print each valid matrix found
            print(f"Valid matrix #{count}:")
            for row in m:
                print(row)
    print(f"Total valid matrices: {count}")

count_valid_matrices()
```
