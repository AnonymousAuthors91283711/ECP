[write_program]
This problem involves solving a system of three nonlinear equations in three variables (x, y, z) and finding the value of x² + y² + z². We'll write a Python program to numerically search for solutions near reasonable starting points.

The approach will be:
1. Define the three equations as functions
2. Use scipy's root-finding to solve the system
3. Calculate x² + y² + z² for found solutions
4. Print all valid solutions found

```python
import numpy as np
from scipy.optimize import root

def equations(vars):
    x, y, z = vars
    eq1 = 2*x + y + 4*x*y + 6*x*z + 6
    eq2 = y + 2*z + 2*x*y + 6*y*z - 4
    eq3 = x - z + 2*x*z - 4*y*z + 3
    return [eq1, eq2, eq3]

# Try different initial guesses
initial_guesses = [
    [0, 0, 0],
    [1, 1, 1],
    [-1, -1, -1],
    [0.5, -2, 1],
    [-2, 3, -1]
]

for guess in initial_guesses:
    sol = root(equations, guess, method='hybr')
    if sol.success:
        x, y, z = sol.x
        # Check if solution satisfies equations with reasonable tolerance
        if all(abs(e) < 1e-6 for e in equations(sol.x)):
            norm_sq = x**2 + y**2 + z**2
            print(f"Solution found: x={x:.6f}, y={y:.6f}, z={z:.6f}")
            print(f"x² + y² + z² = {norm_sq:.6f}\n")
```
