[write_program]
This problem involves calculating the expected number of throws needed to hit a smaller concentric circle within a larger circle, starting with a certain number of darts. The key is to compute the probability of hitting the target area and use it to find the expected throws.

We'll write a Python program that:
1. Defines the given parameters (radius=20, target_radius=10, initial_darts=2020)
2. Calculates the probability p of hitting the target area
3. Computes the expected throws using the formula initial_darts * (1/p - 1)
4. Outputs the exact value (as it's computable directly)

```python
def main():
    radius = 20
    target_radius = 10
    initial_darts = 2020
    
    # Calculate probability p (area ratio)
    p = (target_radius ** 2) / (radius ** 2)
    
    # Compute expected throws
    expected_throws = initial_darts * (1 / p - 1)
    
    # Since all values are exact, we can print the exact integer result
    print(int(expected_throws))

if __name__ == "__main__":
    main()
```
