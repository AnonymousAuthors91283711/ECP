[write_program]
The problem asks for the number of natural numbers `p` such that `-1 < sqrt(p) - sqrt(100) < 1`. We can rewrite this inequality to find bounds on `p`:

1. From `sqrt(p) - sqrt(100) > -1`, we get `sqrt(p) > sqrt(100) - 1`
2. From `sqrt(p) - sqrt(100) < 1`, we get `sqrt(p) < sqrt(100) + 1`

Squaring both inequalities (since all terms are positive) gives:
1. `p > (sqrt(100) - 1)^2 = (10 - 1)^2 = 81`
2. `p < (sqrt(100) + 1)^2 = (10 + 1)^2 = 121`

Since `p` must be a natural number, we're looking for `p` in `82..120`. The count is `120 - 82 + 1 = 39`.

Here's a Python program to verify this by enumeration:

```python
import math

def count_p_values():
    lower_bound = (math.sqrt(100) - 1) ** 2
    upper_bound = (math.sqrt(100) + 1) ** 2
    count = 0
    
    # Iterate through possible p values
    for p in range(1, int(upper_bound) + 2):  # +2 to ensure we cover the upper bound
        if p > lower_bound and p < upper_bound:
            count += 1
            print(f"Valid p found: {p}")  # Stream partial results
    
    print(f"Total count: {count}")

count_p_values()
```

The program:
1. Calculates the bounds (81 and 121)
2. Counts integers strictly between these bounds
3. Prints each valid p as it's found
4. Finally prints the total count (39)

The output will show all p values from 82 to 120 inclusive, totaling 39 numbers.
