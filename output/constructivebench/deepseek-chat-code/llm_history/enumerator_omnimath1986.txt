[write_program]
This problem involves simplifying the expression (2016!^2)/(2015! * 2017!). We can write a Python program to compute this for smaller values of n (instead of 2016) to identify the pattern.

The key observation is that this simplifies to n/(n+1) when we replace 2016 with n, since:
n!^2 / ((n-1)! * (n+1)!) ) = n! * n! / ((n-1)! * (n+1)*n!) ) = n! / ((n-1)! * (n+1)) = n/(n+1)

Here's a Python program that verifies this pattern for smaller values:

```python
from math import factorial

def compute_ratio(n):
    """Compute (n!)^2 / ((n-1)! * (n+1)!)"""
    return (factorial(n) ** 2) / (factorial(n-1) * factorial(n+1))

# Test for small values of n to observe the pattern
for n in range(1, 10):
    exact = n / (n + 1)
    computed = compute_ratio(n)
    print(f"n={n}: computed={computed}, exact={exact}, match={abs(computed - exact) < 1e-10}")
```
