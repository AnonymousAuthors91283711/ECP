[write_program]
This problem asks for natural numbers n that are perfect cubes (k³ = n), not divisible by 10, and where n/1000 is also a perfect cube (m³ = n/1000). We'll write a Python program to find such numbers up to a reasonable threshold.

The approach:
1. Iterate possible values of m (since n = 1000*m³ must be ≤ threshold)
2. For each m, compute n = 1000*m³
3. Check if n is a perfect cube (k³ = n)
4. Verify n is not divisible by 10
5. Print valid n values

```python
def is_perfect_cube(x):
    # Check if x is a perfect cube
    k = round(x ** (1/3))
    return k * k * k == x

def find_numbers(threshold=10**8):
    m = 1
    while True:
        n = 1000 * m * m * m
        if n > threshold:
            break
        if is_perfect_cube(n) and n % 10 != 0:
            print(n)
        m += 1

print("Numbers satisfying the conditions:")
find_numbers()
```
