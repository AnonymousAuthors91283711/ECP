[write_program]
This problem involves counting configurations of red/blue cubes in a 3×3×3 grid where:
1. Exactly 2 cubes are red (others blue)
2. Exactly 4 faces of red cubes are visible from the outside (each red cube has 0-6 visible faces)

We'll enumerate all possible positions for 2 red cubes in a 3×3×3 grid and count those satisfying the visibility condition.

```python
from itertools import combinations

def is_visible(x, y, z):
    return x in {0, 2} or y in {0, 2} or z in {0, 2}

def count_visible_faces(pos1, pos2):
    x1, y1, z1 = pos1
    x2, y2, z2 = pos2
    faces = 0
    if is_visible(x1, y1, z1):
        faces += 6 - (x1 in {0, 2}) - (y1 in {0, 2}) - (z1 in {0, 2})
    if is_visible(x2, y2, z2):
        faces += 6 - (x2 in {0, 2}) - (y2 in {0, 2}) - (z2 in {0, 2})
    return faces

def main():
    positions = [(x, y, z) for x in range(3) for y in range(3) for z in range(3)]
    count = 0
    for pos1, pos2 in combinations(positions, 2):
        if count_visible_faces(pos1, pos2) == 4:
            count += 1
            print(f"Found pair: {pos1}, {pos2}")  # Print each valid configuration
    print(f"Total valid configurations: {count}")

if __name__ == "__main__":
    main()
```
