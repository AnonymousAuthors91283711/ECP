[write_program]
This problem involves a recursive sequence modulo 11 and asks for the product of specific terms. We'll write a Python program to compute the sequence values and find the required product.

The approach:
1. Implement the recursive sequence with memoization for efficiency
2. Compute terms up to 2022 (the maximum needed)
3. Calculate the product of terms 2018, 2020, and 2022 modulo 11
4. Since we're working modulo 11, the result will be between 0 and 10

```python
def compute_sequence_product():
    # Initialize memoization dictionary with base cases
    memo = {0: 2, 1: 5, 2: 8}
    
    def aime_sequence(n):
        if n in memo:
            return memo[n]
        # Recursive case: a(n+3) = 4*(a(n+2)+a(n+1)+a(n)) mod 11
        res = (4 * (aime_sequence(n-1) + aime_sequence(n-2) + aime_sequence(n-3))) % 11
        memo[n] = res
        return res
    
    # Compute up to 2022 (we could optimize by finding periodicity first)
    max_needed = 2022
    for i in range(3, max_needed + 1):
        aime_sequence(i)  # Populate memo
    
    # Calculate the required product mod 11
    product = (aime_sequence(2018) * aime_sequence(2020) * aime_sequence(2022)) % 11
    print(f"Product modulo 11: {product}")

compute_sequence_product()
```
