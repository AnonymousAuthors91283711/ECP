[write_program]
This problem involves solving the equation 3^(x-1) * 9^(3/(2x²)) = 27 for real x. We'll write a Python program to find all real solutions by:
1. Rewriting the equation in terms of base 3
2. Converting it to a polynomial equation
3. Numerically searching for roots within a reasonable range

The equation can be simplified to:
3^(x-1 + 3/x²) = 3³ ⇒ x-1 + 3/x² = 3 ⇒ x + 3/x² -4 = 0

We'll search for roots of f(x) = x + 3/x² -4 in the range (-10,10) excluding x=0.

```python
import numpy as np

def f(x):
    return x + 3/(x**2) - 4

# Search for roots in positive and negative ranges
search_ranges = [(0.1, 10), (-10, -0.1)]
tolerance = 1e-8
step_size = 0.0001

solutions = []
for r in search_ranges:
    x = r[0]
    while x < r[1]:
        if abs(f(x)) < tolerance:
            solutions.append(x)
            x += step_size * 10  # Skip ahead to avoid duplicate solutions
        x += step_size

# Print found solutions with 8 decimal places
print("Found solutions:")
for sol in solutions:
    print(f"x ≈ {sol:.8f}")

# Verification
print("\nVerification:")
for sol in solutions:
    lhs = 3**(sol-1) * 9**(3/(2*sol**2))
    print(f"For x ≈ {sol:.8f}, lhs = {lhs:.8f} (should be close to 27)")
```
