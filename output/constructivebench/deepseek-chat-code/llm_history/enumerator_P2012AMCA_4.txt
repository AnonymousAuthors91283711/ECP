[write_program]
This problem involves finding the fraction of red marbles after a transformation, given initial conditions. We'll enumerate possible values of b (blue marbles) and r (red marbles) that satisfy the given constraints, then compute the resulting fraction.

The constraints are:
1. b + r > 0 (total marbles positive)
2. b = 3*(b + r)/5 (blue marbles are 3/5 of total)
3. r = (b + r) - b (red marbles are the remainder)

We'll search for integer solutions where 3*(b+r) is divisible by 5 (since b must be integer).

```python
def find_marbles():
    # Search for b+r up to 100 (arbitrary reasonable limit)
    for total in range(1, 101):
        if (3 * total) % 5 != 0:
            continue  # b must be integer
        b = (3 * total) // 5
        r = total - b
        if r <= 0:
            continue  # must have some red marbles
        
        # After transformation
        new_b = b
        new_r = 2 * r
        new_total = new_b + new_r
        
        # Simplify fraction new_r/new_total
        def gcd(a, b):
            while b:
                a, b = b, a % b
            return a
        
        common_divisor = gcd(new_r, new_total)
        simplified_num = new_r // common_divisor
        simplified_den = new_total // common_divisor
        
        print(f"b={b}, r={r} -> {simplified_num}/{simplified_den}")

find_marbles()
```

The program will output all valid (b,r) pairs and their resulting fractions. The pattern shows the answer is consistently 4/7 for all valid inputs, though we let the program enumerate possibilities rather than stating this conclusion directly.
