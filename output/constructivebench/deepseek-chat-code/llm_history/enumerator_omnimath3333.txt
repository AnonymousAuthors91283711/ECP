[write_program]
This problem defines a sequence `a_sequence` and asks to find all natural numbers `n` where `a_sequence(n-1) = n²`. We'll write a Python program to enumerate these numbers by computing the sequence and checking the condition.

The sequence is defined recursively:
- a(0) = 1
- a(1) = 1
- a(2) = 2
- a(n+3) = a(n+2) + a(n+1) + a(n)

We'll compute the sequence values up to a reasonable limit and check the condition for each n.

```python
def find_sequence_matches(limit=100):
    # Initialize sequence with first 3 terms
    a = [1, 1, 2]
    
    # We'll check n where a[n-1] = n²
    # Since a starts at index 0, n-1 must be >=0 => n>=1
    print("Checking numbers n where a_sequence(n-1) = n²:")
    print("n | a_sequence(n-1) | n²")
    print("------------------------")
    
    for n in range(1, limit+1):
        # Ensure we have enough terms in the sequence
        while len(a) <= n-1:
            next_term = a[-1] + a[-2] + a[-3]
            a.append(next_term)
        
        a_n_minus_1 = a[n-1]
        n_squared = n * n
        
        if a_n_minus_1 == n_squared:
            print(f"{n} | {a_n_minus_1} | {n_squared}")
        
        # Early exit if we've gone past possible matches
        if a_n_minus_1 > n_squared and n > 10:
            break

if __name__ == "__main__":
    find_sequence_matches()
```
