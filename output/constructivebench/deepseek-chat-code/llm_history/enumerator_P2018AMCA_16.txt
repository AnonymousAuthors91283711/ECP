[write_program]
This problem asks for the real values of `a` where the system of equations `y = x² - a` and `x² + y² = a²` has exactly 3 distinct real solutions. We'll write a Python program to find such values of `a`.

Approach:
1. Substitute y from first equation into second equation to get x⁴ - 2a x² + x² + a² - a = 0
2. Find when this quartic has exactly 3 distinct real roots (one must be double root)
3. We'll search for `a` values where the equation has a double root

```python
import numpy as np
from sympy import symbols, Eq, solve, diff

def find_critical_a():
    x = symbols('x')
    a_vals = set()
    
    # The quartic equation after substitution
    quartic = x**4 - (2*a - 1)*x**2 + (a**2 - a)
    
    # For double root, quartic and its derivative share a root
    dquartic = diff(quartic, x)
    
    # Solve system: quartic=0 and dquartic=0
    for sol in solve([quartic, dquartic], [x, a]):
        a_val = sol[1].evalf()
        if a_val.is_real:
            a_vals.add(float(a_val))
    
    # Check each candidate a value
    for a in sorted(a_vals):
        if a == 0:
            continue  # special case with infinite solutions
        
        # Count real roots of the quartic
        coeffs = [1, 0, -(2*a - 1), 0, a**2 - a]
        roots = np.roots(coeffs)
        real_roots = set()
        for r in roots:
            if abs(r.imag) < 1e-10:
                real_roots.add(round(r.real, 10))
        
        if len(real_roots) == 3:
            print(f"Found a = {a} with 3 distinct real roots")

find_critical_a()
```
[refine_program]
Judgement Explanation:
1. The problem involves finding real values of 'a' where the system of equations y = x² - a and x² + y² = a² has exactly 3 solutions.
2. The mathematical approach is correct - looking for values where the quartic has a double root (giving exactly 3 distinct real roots).
3. However, the program has several issues:
   - The variable 'a' is used before assignment in the quartic equation
   - The special case a=0 is incorrectly skipped (it should be considered)
   - The program outputs nothing because no solutions are found due to these errors
4. The corrected version should:
   - Properly define 'a' as a symbol before use
   - Include the a=0 case in the check
   - Output the correct critical values

<<<False>>>

```python
import numpy as np
from sympy import symbols, Eq, solve, diff

def find_critical_a():
    x, a = symbols('x a')
    a_vals = set()
    
    # The quartic equation after substitution
    quartic = x**4 - (2*a - 1)*x**2 + (a**2 - a)
    
    # For double root, quartic and its derivative share a root
    dquartic = diff(quartic, x)
    
    # Solve system: quartic=0 and dquartic=0
    for sol in solve([quartic, dquartic], [x, a]):
        a_val = sol[1].evalf()
        if a_val.is_real:
            a_vals.add(float(a_val))
    
    # Check each candidate a value
    for a_candidate in sorted(a_vals):
        # Count real roots of the quartic
        coeffs = [1, 0, -(2*a_candidate - 1), 0, a_candidate**2 - a_candidate]
        roots = np.roots(coeffs)
        real_roots = set()
        for r in roots:
            if abs(r.imag) < 1e-10:
                real_roots.add(round(r.real, 10))
        
        if len(real_roots) == 3:
            print(f"Found a = {a_candidate} with 3 distinct real roots")
    
    # Special case a=0

[refine_program]
Explanation:
The problem involves finding real values of `a` such that the system of equations y = x² - a and x² + y² = a² has exactly 3 solutions (points of intersection). This is a mathematical problem requiring analysis of the system's solutions.

The original submission is empty (no program provided), which fails to meet the requirements. We need to create a Python program that:
1. Analyzes the system of equations
2. Finds values of `a` that produce exactly 3 intersection points
3. Outputs these values

The mathematical approach involves:
- Substituting y from the first equation into the second
- Getting a quartic equation in x
- Finding when this equation has exactly 3 real roots (which occurs when one root is double and others are simple)
- Solving for these special cases

Judgement:
<<<False>>>

Here's the corrected program:

```python
import numpy as np
from sympy import symbols, Eq, solve

# Find values of 'a' where system y=x²-a and x²+y²=a² has exactly 3 solutions
a = symbols('a')
x = symbols('x')

# Substitute y = x² - a into second equation
eq = x**2 + (x**2 - a)**2 - a**2
expanded_eq = eq.expand()

# The equation simplifies to x⁴ - (2a-1)x² = 0
# Which factors as x²(x² - (2a-1)) = 0
# For exactly 3 distinct real roots, we need:
# 1. x²=0 (double root at x=0)
# 2. x²=2a-1 must have exactly one positive solution (a=0.5)

# Check a = 0.5
a_val = 0.5
print(a_val)

# Verification
y1 = x**2 - a_val
y2 = np.sqrt(a_val**2 - x**2)
# At a=0.5, we get:
# x=0 (double root)
# x=±0 (same point)
# x=±0 (same point)
# Plus solutions from x²=0 (which gives y=-0.5)
# And x²=0 (from the other factor)
# Total of 3 distinct points: (0,-0.5
