[write_program]
This problem asks for the maximum value of (x + y)/x where x ∈ [-4, -2] and y ∈ [2, 4]. Since x is negative, we can rewrite the expression as 1 + y/x. To maximize this, we need to minimize y/x (since x is negative, smaller y/x means larger overall value).

The minimal y/x occurs when y is smallest and x is largest (since x is negative). So we take y=2 and x=-2.

The program will verify this by enumerating combinations of x and y at discrete intervals within their ranges.

```python
def main():
    # Sample discrete points in the ranges
    x_values = [-4.0, -3.5, -3.0, -2.5, -2.0]
    y_values = [2.0, 2.5, 3.0, 3.5, 4.0]
    
    max_z = -float('inf')
    
    for x in x_values:
        for y in y_values:
            z = (x + y) / x
            print(f"x={x}, y={y}, z={z}")
            if z > max_z:
                max_z = z
    
    print(f"\nMaximum value found: {max_z}")

if __name__ == "__main__":
    main()
```
