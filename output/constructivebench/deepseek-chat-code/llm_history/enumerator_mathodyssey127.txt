[write_program]
The problem involves finding the value of P3 given that P1 = P2 and P1 ≠ 0, where P1, P2, P3 are probabilities from a binomial distribution with n=5 trials. We need to find the value of p that satisfies P1 = P2, then compute P3 for that p.

Here's a Python program that:
1. Solves P1 = P2 for p (0 < p < 1)
2. Computes P3 for the found p
3. Outputs the exact value (as a fraction) and decimal approximation

```python
from fractions import Fraction
from math import comb

# Calculate p that satisfies P1 = P2
# P1 = 5*p*(1-p)^4
# P2 = 10*p^2*(1-p)^3
# Setting P1 = P2 gives: 5*(1-p) = 10*p => p = 1/3

p = Fraction(1, 3)
print(f"Found p = {p} (≈{float(p):.4f})")

# Calculate P3 = 10*p^3*(1-p)^2
P3 = comb(5, 3) * p**3 * (1-p)**2
print(f"P3 = {P3} (≈{float(P3):.4f})")

# Output the exact answer
print(f"Final answer: {P3}")
```
