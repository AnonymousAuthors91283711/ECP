[write_program]
This problem involves calculating the probability that Pedro sits either immediately to the left or right of David in a circular seating arrangement of 5 people. We'll enumerate all valid permutations where David is fixed in position 2 (0-indexed) and count cases where Pedro is in position 1 or 3.

```python
from itertools import permutations

def solve():
    people = ["Aristotle", "David", "Flora", "Munirah", "Pedro"]
    fixed_pos = 2  # David's fixed position (0-indexed)
    pedro_positions = {1, 3}  # Positions adjacent to David
    
    # Generate all permutations where David is in position 2
    valid = 0
    favorable = 0
    
    for perm in permutations(people):
        if perm[fixed_pos] != "David":
            continue
        valid += 1
        if perm[1] == "Pedro" or perm[3] == "Pedro":
            favorable += 1
            print(f"Favorable permutation: {perm}")  # Stream partial results
    
    print(f"Total valid permutations: {valid}")
    print(f"Favorable permutations: {favorable}")
    print(f"Probability: {favorable}/{valid} = {favorable/valid}")

if __name__ == "__main__":
    solve()
```
