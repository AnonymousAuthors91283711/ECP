[write_program]
This problem involves finding primes p where the function f(x) = x^k + x is injective modulo p. We need to enumerate primes p and exponents k to find patterns where this condition holds. The program will test small primes and exponents to find valid (p,k) pairs.

```python
def is_prime(n):
    if n < 2:
        return False
    for p in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31]:
        if n % p == 0:
            return n == p
    d = n - 1
    s = 0
    while d % 2 == 0:
        d //= 2
        s += 1
    for a in [2, 325, 9375, 28178, 450775, 9780504, 1795265022]:
        if a >= n:
            continue
        x = pow(a, d, n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(s - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True

def test_injective(p, k):
    seen = set()
    for x in range(p):
        val = (pow(x, k, p) + x) % p
        if val in seen:
            return False
        seen.add(val)
    return True

def main():
    max_p = 50  # Test primes up to this value
    max_k = 10   # Test exponents up to this value
    
    for p in range(2, max_p + 1):
        if not is_prime(p):
            continue
        for k in range(1, max_k + 1):
            if test_injective(p, k):
                print(f"Found valid pair: p={p}, k={k}")

if __name__ == "__main__":
    main()
```
