[write_program]
This problem involves a recurrence relation similar to the Tribonacci sequence (each term is the sum of the previous three terms). We need to compute the sum of the first 28 terms modulo 1000. The program will generate the sequence up to the 28th term, accumulate the sum, and output the result modulo 1000.

```python
def compute_sum_mod():
    # Initialize the first three terms
    a = [1, 1, 1]
    total = 3  # sum of first three terms
    
    # Generate terms up to a[27] (0-based index) since we need first 28 terms
    for i in range(3, 28):
        next_term = a[i-1] + a[i-2] + a[i-3]
        a.append(next_term)
        total += next_term
    
    # Compute the result modulo 1000
    result = total % 1000
    print(f"Sum of first 28 terms modulo 1000: {result}")

compute_sum_mod()
```
