[write_program]
This problem involves finding all integer-valued functions f: ℤ → ℤ that satisfy the given functional equation for all integers x, y. We'll enumerate possible solutions by testing simple function forms (linear, quadratic, etc.) and checking if they satisfy the equation.

The approach is:
1. Test constant functions f(x) = c
2. Test linear functions f(x) = kx + c
3. Test quadratic functions f(x) = ax² + bx + c
4. For each candidate, verify if it satisfies the functional equation

```python
def verify_solution(f):
    """Check if f satisfies the functional equation for small integer values."""
    for x in range(-3, 4):
        for y in range(-3, 4):
            left = f(4*x + 3*y)
            right = f(3*x + y) + f(x + 2*y)
            if left != right:
                return False
    return True

def test_constant():
    """Test constant functions f(x) = c."""
    for c in range(-5, 6):
        f = lambda x, c=c: c
        if verify_solution(f):
            print(f"Constant solution found: f(x) = {c}")

def test_linear():
    """Test linear functions f(x) = kx + c."""
    for k in range(-5, 6):
        for c in range(-5, 6):
            if k == 0:  # already covered by constant case
                continue
            f = lambda x, k=k, c=c: k*x + c
            if verify_solution(f):
                print(f"Linear solution found: f(x) = {k}x + {c}")

def test_quadratic():
    """Test quadratic functions f(x) = ax² + bx + c."""
    for a in range(-3, 4):
        for b in range(-5, 6):
            for c in range(-5, 6):
                if a == 0:  # already covered by linear case
                    continue
                f = lambda x, a=a, b=b, c=c: a*x*x + b*x + c
                if verify_solution(f):
                    print(f"Quadratic solution found: f(x) = {a}x² + {b}x + {c}")

print("Testing constant functions...")
test_constant()
print("\nTesting linear functions...")
test_linear()
print("\nTesting quadratic functions...")
test_quadratic()
```
