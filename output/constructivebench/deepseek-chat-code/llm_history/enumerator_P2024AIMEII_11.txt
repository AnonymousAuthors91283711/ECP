[write_program]
This problem asks for the number of triples (a, b, c) of natural numbers that satisfy a + b + c = 300. This is a classic stars and bars combinatorics problem. The solution is C(299, 2) since we're essentially placing 2 dividers between 300 stars to create 3 non-empty groups.

Here's a Python program that:
1. Computes the exact value using combinatorics
2. Verifies it by enumeration for smaller cases (to build intuition)
3. Outputs the final answer for n=300

```python
import math

def count_triples(n):
    # Using stars and bars: C(n-1, 2)
    return math.comb(n - 1, 2)

def verify_small_cases(max_n=10):
    print("Verifying small cases:")
    for n in range(3, max_n + 1):
        count = 0
        for a in range(1, n - 1):
            for b in range(1, n - a):
                c = n - a - b
                if c >= 1:
                    count += 1
        formula = math.comb(n - 1, 2)
        print(f"n={n}: enumerated={count}, formula={formula}")

def main():
    verify_small_cases()
    n = 300
    answer = count_triples(n)
    print(f"\nFor n={n}, the number of triples is: {answer}")

if __name__ == "__main__":
    main()
```
