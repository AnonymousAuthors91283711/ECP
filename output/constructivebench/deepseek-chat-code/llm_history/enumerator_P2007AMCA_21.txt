[write_program]
This problem involves finding complex numbers a, b, c (with a ≠ 0) where the sum of roots equals the product of roots equals the sum of coefficients, and all three are equal. We'll enumerate small integer values for these coefficients to find patterns.

The program will:
1. Iterate through small integer values for a, b, c (with a ≠ 0)
2. Check the conditions sum_zeros = prod_zeros = sum_coeffs
3. Print valid (a,b,c) tuples and their corresponding sum_zeros value

```python
def main():
    # Iterate through small integer coefficients
    for a in range(-5, 6):
        if a == 0:
            continue  # a must be nonzero
        for b in range(-5, 6):
            for c in range(-5, 6):
                sum_zeros = -b/a
                prod_zeros = c/a
                sum_coeffs = a + b + c
                
                # Check if all three values are equal (with floating point tolerance)
                if (abs(sum_zeros - prod_zeros) < 1e-9 and 
                    abs(prod_zeros - sum_coeffs) < 1e-9):
                    print(f"a={a}, b={b}, c={c}: sum_zeros={sum_zeros}")

if __name__ == "__main__":
    main()
```
