[write_program]
This problem asks for the sum of squares of all numbers between 1 and 10000 (inclusive) whose digits sum to exactly 2. We'll write a Python program to enumerate these numbers, compute their squares, and sum them up.

The approach:
1. Iterate through numbers 1 to 10000
2. For each number, calculate the sum of its digits
3. If the digit sum equals 2, add its square to the running total
4. Print the final sum

```python
def digit_sum(n):
    return sum(int(d) for d in str(n))

total = 0
for n in range(1, 10001):
    if digit_sum(n) == 2:
        total += n * n
print(total)
```
