[write_program]
The problem asks for the largest number below 1000 that is a palindrome in both base 10 and base 8. We'll write a Python program to enumerate all such numbers and identify the maximum one.

Approach:
1. Iterate numbers from 999 down to 0 (to find maximum faster)
2. For each number, check if it's a palindrome in base 10
3. If yes, check if it's also a palindrome in base 8
4. The first number satisfying both conditions is our answer (since we're descending)

```python
def is_palindrome(s):
    return s == s[::-1]

def check_palindromes():
    for n in range(999, 0, -1):
        dec_str = str(n)
        if is_palindrome(dec_str):
            oct_str = oct(n)[2:]  # oct() returns string like '0o...', we skip first 2 chars
            if is_palindrome(oct_str):
                print(n)
                return  # found maximum, exit immediately
    print(0)  # in case nothing found (shouldn't happen)

check_palindromes()
```
