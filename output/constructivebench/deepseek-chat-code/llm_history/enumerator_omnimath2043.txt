[write_program]
This problem asks for the number of injective functions from Fin 3 to Fin 4, which is equivalent to counting the number of ordered triples (a,b,c) where a,b,c are distinct elements from {0,1,2,3}.

We'll enumerate all possible injective functions by:
1. Selecting all possible first elements (a)
2. For each a, selecting possible second elements (b) that differ from a
3. For each (a,b), selecting possible third elements (c) that differ from both a and b

The count should match the permutation formula P(4,3) = 4×3×2 = 24.

```python
def count_injective_functions():
    count = 0
    domain_size = 3
    codomain_size = 4
    
    for a in range(codomain_size):
        for b in range(codomain_size):
            if b == a:
                continue
            for c in range(codomain_size):
                if c == a or c == b:
                    continue
                count += 1
                print(f"Injective function found: ({a}, {b}, {c})")
    
    print(f"Total number of injective functions: {count}")

count_injective_functions()
```
