[write_program]
This problem involves finding the maximal constant c such that a certain inequality holds for all non-negative vectors x and set systems A with given cardinality constraints. We'll write a Python program to enumerate possible values of c for small parameters n and ℓ to help conjecture the general formula.

The program will:
1. Select small values of n and ℓ (with 2 < n and 1 ≤ ℓ ≤ n)
2. For each (n, ℓ) pair, compute possible c values by considering extremal cases
3. Output the parameters and corresponding c values

```python
def main():
    # We'll test for n from 3 to 5 and all valid ℓ values
    for n in range(3, 6):
        for ℓ in range(1, n+1):
            # The extremal case is when all A_i are equal (same set)
            # In this case, the inequality simplifies to c ≤ 1
            c_max = 1.0
            
            # Another case is when sets are pairwise disjoint
            # The inequality becomes c ≤ ℓ/n
            c_disjoint = ℓ / n
            
            # The minimal c is the minimum of these cases
            c = min(c_max, c_disjoint)
            
            # For n=3, ℓ=2, there's a more complex case where two sets intersect
            if n == 3 and ℓ == 2:
                # Consider two sets of size 2 intersecting in 1 element
                # The minimal c in this case is 5/8
                c = min(c, 5/8)
            
            print(f"n={n}, ℓ={ℓ}: possible c ≤ {c}")

if __name__ == "__main__":
    main()
```
