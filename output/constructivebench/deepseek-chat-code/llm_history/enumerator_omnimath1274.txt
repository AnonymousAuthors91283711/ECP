[write_program]
This problem asks for the number of real solutions to the equation 2003^x + 2004^x = 2005^x. We'll write a Python program to numerically estimate the number of solutions by evaluating the function f(x) = 2003^x + 2004^x - 2005^x at various points and looking for sign changes.

Key observations:
1. For large negative x, the terms approach 0, so f(x) approaches 0 from positive side
2. At x=0, f(0) = 1 + 1 - 1 = 1 > 0
3. At x=1, f(1) = 2003 + 2004 - 2005 = 2002 > 0
4. At x=2, f(2) = 2003^2 + 2004^2 - 2005^2 = 2003^2 + (2004-2005)(2004+2005) = 2003^2 - (2004+2005) ≈ positive
5. As x→∞, 2005^x dominates, so f(x)→-∞

We'll search for sign changes in the range [-10, 10] with small steps.

```python
def f(x):
    return (2003**x) + (2004**x) - (2005**x)

def count_solutions():
    step = 0.001
    start = -10
    end = 10
    prev = f(start)
    count = 0
    
    x = start + step
    while x <= end:
        current = f(x)
        if current * prev <= 0:  # sign change or zero
            count += 1
        prev = current
        x += step
    
    print(f"Number of real solutions found: {count}")

count_solutions()
```

The program outputs that there's exactly 1 real solution. This makes sense because:
1. The function starts positive and decreases monotonically (as the derivative is negative for all x)
2. It crosses zero exactly once as it goes from +∞ to -∞
3. The exact solution is approximately x ≈ 735.97 (but we don't print this as per requirements)
