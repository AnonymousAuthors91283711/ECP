[write_program]
This problem asks to find three 2-digit numbers (a, b, c) whose product is 636405 and whose sum is minimized. We'll write a Python program to enumerate all possible triplets of 2-digit numbers that multiply to 636405, then find the triplet with the minimal sum.

The approach:
1. Factorize 636405 to understand possible combinations
2. Generate all possible triplets of 2-digit factors
3. Calculate their sums
4. Find the minimal sum

```python
import math

def find_triplets():
    target = 636405
    min_sum = float('inf')
    best_triplet = None
    
    # Factorize 636405 to understand possible factors
    factors = set()
    for i in range(10, 100):
        if target % i == 0:
            factors.add(i)
    
    # Check all possible triplets
    factors = sorted(factors)
    for i in range(len(factors)):
        a = factors[i]
        if target % a != 0:
            continue
        rem1 = target // a
        for j in range(i, len(factors)):
            b = factors[j]
            if rem1 % b != 0:
                continue
            c = rem1 // b
            if c < 10 or c >= 100:
                continue
            current_sum = a + b + c
            print(f"Found triplet: ({a}, {b}, {c}) with sum {current_sum}")
            if current_sum < min_sum:
                min_sum = current_sum
                best_triplet = (a, b, c)
    
    print(f"\nMinimal sum found: {min_sum} from triplet {best_triplet}")

find_triplets()
```
