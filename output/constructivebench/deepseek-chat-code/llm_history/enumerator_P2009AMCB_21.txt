[write_program]
This problem asks for the number of injective functions f from {0,...,9} to itself where each f(i) can be i-1, i, or i+1 (with wrap-around for 0-1=9 and 9+1=0). We'll enumerate all valid injective functions by backtracking.

```python
from itertools import product

def count_injective_functions():
    count = 0
    n = 10
    # Each position can have 3 possible values (i-1, i, i+1 mod 10)
    for candidate in product(*[(i-1, i, i+1) for i in range(n)]):
        # Mod 10 to handle wrap-around
        mod_candidate = tuple(x % n for x in candidate)
        # Check if all values are distinct (injective)
        if len(set(mod_candidate)) == n:
            count += 1
            print(f"Found injective function #{count}: {mod_candidate}")
    print(f"Total number of injective functions: {count}")

count_injective_functions()
```
