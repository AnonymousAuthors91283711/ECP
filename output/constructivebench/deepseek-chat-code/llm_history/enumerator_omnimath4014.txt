[write_program]
This problem asks to find all real-valued functions f: ℝ → ℝ that satisfy the functional equation:
f(x*f(x+y)) = f(y*f(x)) + x² for all x,y ∈ ℝ.

We'll enumerate potential solutions by testing common function forms (linear, quadratic, etc.) and checking if they satisfy the equation. For simplicity, we'll focus on polynomial solutions first.

```python
def check_function(f, x, y):
    """Check if the given function satisfies the functional equation."""
    lhs = f(x * f(x + y))
    rhs = f(y * f(x)) + x**2
    return abs(lhs - rhs) < 1e-9  # Account for floating point precision

def test_linear(a, b):
    """Test linear functions f(x) = a*x + b."""
    def f(x):
        return a*x + b
    # Test with various x and y values
    test_cases = [(1,1), (2,3), (0.5,-1), (-2,4)]
    return all(check_function(f, x, y) for x, y in test_cases)

def test_quadratic(a, b, c):
    """Test quadratic functions f(x) = a*x² + b*x + c."""
    def f(x):
        return a*x**2 + b*x + c
    test_cases = [(1,1), (2,0), (-1,3), (0.5,-2)]
    return all(check_function(f, x, y) for x, y in test_cases)

def main():
    print("Testing linear functions f(x) = a*x + b:")
    found = False
    # Test various linear coefficients
    for a in [-2, -1, 0, 1, 2]:
        for b in [-1, 0, 1]:
            if test_linear(a, b):
                print(f"Found solution: f(x) = {a}x + {b}")
                found = True
    if not found:
        print("No linear solutions found")
    
    print("\nTesting quadratic functions f(x) = a*x² + b*x + c:")
    found = False
    # Test various quadratic coefficients
    for a in [-1, 0, 1]:
        for b in [-1, 0, 1]:
            for c in [-1, 0, 1]:
                if test_quadratic(a, b, c):
                    print(f"Found solution: f(x) = {a}x² + {b}x + {c}")
                    found = True
    if not found:
        print("No quadratic solutions found")

if __name__ == "__main__":
    main()
```
