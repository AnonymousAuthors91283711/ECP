[write_program]
This problem asks for the number of positive integers n ≤ 240 that can be expressed as a sum of distinct factorials where no two factorials in the sum are equal (which is redundant since factorials are distinct). We'll write a Python program to enumerate all such numbers up to 240.

The approach is:
1. Generate all factorials ≤ 240 (which are 1!, 2!, 3!, 4!, 5! since 6! = 720 > 240)
2. Generate all possible subset sums of these factorials
3. Count unique sums that are ≤ 240 and positive

```python
import itertools

def main():
    # Generate factorials up to 240
    factorials = []
    n = 1
    current = 1
    while current <= 240:
        factorials.append(current)
        n += 1
        current *= n
    
    # Generate all possible subset sums
    sums = set()
    for r in range(1, len(factorials)+1):
        for subset in itertools.combinations(factorials, r):
            s = sum(subset)
            if 0 < s <= 240:
                sums.add(s)
    
    # Print all valid sums in sorted order
    for num in sorted(sums):
        print(num)
    
    # Print the count (final answer)
    print(f"Total count: {len(sums)}")

if __name__ == "__main__":
    main()
```
