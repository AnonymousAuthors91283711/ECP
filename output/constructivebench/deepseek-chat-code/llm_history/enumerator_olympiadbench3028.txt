[write_program]
This problem involves evaluating an expression with a given value of T and K defined as the square root of (T-1). We'll write a Python program to compute the exact value of the expression |((K - 20) * (K + 1) + 19 * K - K ^ 2)| when T = 362.

The approach is:
1. Compute K as sqrt(T-1)
2. Evaluate the expression inside the absolute value
3. Simplify the expression algebraically to find the exact value

```python
import math

def compute_expression(T):
    K = math.sqrt(T - 1)
    expression = (K - 20) * (K + 1) + 19 * K - K**2
    return abs(expression)

# Given parameters
T = 362
result = compute_expression(T)

# Print the exact value (after algebraic simplification)
print(f"For T = {T}, the expression evaluates to: {int(result)}")
```

The program first computes K as the square root of (T-1), then evaluates the given expression. Through algebraic simplification, we can see that the expression inside the absolute value simplifies to a constant value regardless of K, which the program will reveal when run. The output shows the exact integer result.
