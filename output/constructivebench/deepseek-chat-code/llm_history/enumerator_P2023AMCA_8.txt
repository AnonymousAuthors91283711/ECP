[write_program]
This problem involves solving a system of equations for the ratio s/n. We'll write a Python program to enumerate possible integer values of n and s that satisfy both equations, then compute s/n for valid pairs.

The approach:
1. Iterate through possible integer values of n (denominator)
2. For each n, compute s from the first equation
3. Check if this s also satisfies the second equation
4. If both equations are satisfied, print n, s, and s/n

```python
def solve_equations():
    # Iterate possible n values (avoid division by zero)
    for n in range(1, 1000):
        # Solve first equation for s: (s+11)/(n+1) = s/n + 1
        # Multiply both sides by n(n+1) to eliminate denominators
        # n(s+11) = (n+1)s + n(n+1)
        # ns + 11n = ns + s + n² + n
        # 11n = s + n² + n
        # s = 10n - n²
        
        s = 10 * n - n * n
        
        # Check second equation: (s+33)/(n+3) = s/n + 2
        # Multiply both sides by n(n+3)
        # n(s+33) = (n+3)s + 2n(n+3)
        # ns + 33n = ns + 3s + 2n² + 6n
        # 33n = 3s + 2n² + 6n
        # 27n = 3s + 2n²
        # 9n = s + (2/3)n²
        
        # Substitute s from first equation
        lhs = 9 * n
        rhs = (10 * n - n * n) + (2/3) * n * n
        if abs(lhs - rhs) < 1e-6:  # Floating point comparison tolerance
            print(f"n={n}, s={s}, s/n={s/n}")

solve_equations()
```
