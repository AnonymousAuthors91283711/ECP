[write_program]
This problem involves summing powers of cosine terms with specific angles. To gain intuition, we'll write a Python program to compute similar sums for smaller values than 1007 and 2014, looking for patterns.

The program will:
1. Use smaller parameters n (instead of 1007) and m (instead of 2014)
2. Compute the sum of cos(π*(k+1)/n)^m for k from 0 to n-2
3. Print results for various (n,m) pairs to observe patterns

```python
import math

def compute_sum(n, m):
    """Compute sum_{k=0}^{n-2} cos(π*(k+1)/n)^m"""
    total = 0.0
    for k in range(n-1):
        angle = math.pi * (k + 1) / n
        term = math.cos(angle) ** m
        total += term
    return total

# Test small cases to observe patterns
cases = [(3,2), (4,2), (5,2), (3,4), (4,4), (5,4)]
for n, m in cases:
    s = compute_sum(n, m)
    print(f"n={n}, m={m}: sum = {s}")

# Check if sum equals (n-1)/2^m for some cases
print("\nChecking potential pattern:")
for n, m in [(3,2), (5,2), (3,4)]:
    s = compute_sum(n, m)
    pattern_val = (n-1)/(2**m)
    print(f"n={n}, m={m}: computed={s}, pattern={pattern_val}, match? {abs(s-pattern_val) < 1e-9}")
```
