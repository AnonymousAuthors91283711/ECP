[check_equivalence] Problem: import Mathlib

open Nat

abbrev P2006AMCA_3_answer : ℕ → ℕ := sorry
theorem P2006AMCA_3 (aliceAge : ℕ) (h : aliceAge = 30) :
  ∃ maryAge, maryAge = P2006AMCA_3_answer aliceAge ∧ (maryAge : ℚ) / aliceAge = 3 / 5 := by sorry
Ground Truth Answer: fun aliceAge => (3 * aliceAge) / 5
Proposed Answer: fun aliceAge : ℕ => aliceAge * 3 / 5
<<<True>>>

Explanation: Both answers are equivalent. The ground truth answer is `(3 * aliceAge) / 5` while the proposed answer is `aliceAge * 3 / 5`. Due to the commutative property of multiplication, `3 * aliceAge` is the same as `aliceAge * 3`. The division by 5 is performed in the same way in both cases. Both expressions will produce the same result for any natural number input `aliceAge`.