[write_program]
This problem asks for a unique cubic polynomial P(x) that satisfies P(x) = 1/(1+x+x²) for x=1,2,3,4 and then evaluates P(5). We'll enumerate possible polynomials by constructing them from the given points.

The approach is:
1. Construct the polynomial using Lagrange interpolation for points (1,1/3), (2,1/7), (3,1/13), (4,1/21)
2. Verify it's degree ≤ 3
3. Compute P(5)

```python
from fractions import Fraction

def lagrange_basis(x_values, k, x):
    """Compute the k-th Lagrange basis polynomial evaluated at x"""
    result = Fraction(1, 1)
    for i, xi in enumerate(x_values):
        if i != k:
            result *= Fraction(x - xi, x_values[k] - xi)
    return result

def interpolate(x_values, y_values, x):
    """Compute the interpolating polynomial evaluated at x"""
    return sum(y * lagrange_basis(x_values, k, x) 
               for k, y in enumerate(y_values))

# Given data points
x_values = [1, 2, 3, 4]
y_values = [Fraction(1,3), Fraction(1,7), Fraction(1,13), Fraction(1,21)]

# Compute P(5)
P5 = interpolate(x_values, y_values, 5)

# Output the exact value
print(f"P(5) = {P5}")
print(f"Decimal approximation: {float(P5)}")
```
