[write_program]
This problem asks for positive integers a, b, c such that:
1. (a^(1/3) + b^(1/3) + 1)/c is a root of 8x³ - 3x² - 3x - 1 = 0
2. a + b + c = 98

We'll approach this by:
1. Finding the roots of the polynomial
2. For each real root, trying small integer values for c
3. For each c, solving for a and b that satisfy both conditions

```python
import math

def find_abc():
    # Find roots of 8x^3 - 3x^2 - 3x - 1 = 0
    # Using numpy's roots function for simplicity
    coeffs = [8, -3, -3, -1]
    
    # We'll test all real roots (there's only one real root)
    # The real root is approximately 0.87744
    real_root = 0.877438833119
    
    # Try possible c values (since a + b + c = 98 and a,b,c positive integers)
    for c in range(1, 97):
        x = real_root
        sum_cbrt = x * c
        # We know sum_cbrt = a^(1/3) + b^(1/3) + 1
        sum_ab_cbrt = sum_cbrt - 1
        
        # Try possible integer values for a and b
        for a in range(1, 98 - c):
            a_cbrt = a ** (1/3)
            b_cbrt = sum_ab_cbrt - a_cbrt
            if b_cbrt <= 0:
                continue
            b = round(b_cbrt ** 3)
            # Check if b is positive and sum matches
            if b > 0 and a + b + c == 98:
                # Verify the root condition with some tolerance
                test_x = (a**(1/3) + b**(1/3) + 1) / c
                if abs(8*test_x**3 - 3*test_x**2 - 3*test_x - 1) < 1e-6:
                    print(f"Found solution: a={a}, b={b}, c={c}")
                    return (a, b, c)
    
    print("No solution found")
    return None

find_abc()
```
