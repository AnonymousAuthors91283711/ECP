[write_program]
This problem involves finding coprime natural numbers a and b such that 100a + b equals some answer, with specific conditions related to triangle counts. We'll write a Python program to enumerate possible (a,b) pairs for small values of n (not just n=2020) to help identify the pattern.

The key steps are:
1. Compute total = n(n-1)(n-2)/6 (number of triangles)
2. Compute isosceles = n(n-1) (number of isosceles triangles)
3. Find gcd of these two numbers
4. Compute the reduced fractions a = isosceles/gcd, b = total/gcd
5. Check if a and b are coprime
6. Output valid (a,b) pairs and 100a + b

```python
import math

def find_pairs(max_n=10):
    for n in range(3, max_n + 1):
        total = n * (n - 1) * (n - 2) // 6
        isosceles = n * (n - 1)
        gcd_val = math.gcd(isosceles, total)
        
        a = isosceles // gcd_val
        b = total // gcd_val
        
        if math.gcd(a, b) == 1:
            answer = 100 * a + b
            print(f"n={n}: (a,b)=({a},{b}), 100a+b={answer}")

# Run for small values to observe pattern
find_pairs(10)
```
