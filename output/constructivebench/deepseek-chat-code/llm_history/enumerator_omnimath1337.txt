[write_program]
This problem involves finding the greatest natural number k ≤ 2010 where a recursively defined sequence S(k) equals 0. The sequence S depends on coefficients a(i) which are determined based on previous S values. We'll write a Python program to compute S(k) values up to k=2010 and identify all k where S(k)=0, then find the maximum such k.

The key observations:
1. S(0) = 0 (given)
2. For k ≥ 1, S(k) is the sum of i*a(i) from i=1 to k
3. Each a(i) is 1 if S(i-1) < i, otherwise -1
4. We need to track S(k) values up to k=2010

```python
def compute_max_k():
    max_k = 0
    S = [0]  # S[0] = 0
    a = [0]  # dummy value for a[0]
    
    for k in range(1, 2011):
        # Compute a[k] based on S[k-1]
        a_k = 1 if S[k-1] < k else -1
        a.append(a_k)
        
        # Compute S[k] = sum_{i=1}^k i*a[i]
        S_k = sum(i * a[i] for i in range(1, k+1))
        S.append(S_k)
        
        if S_k == 0:
            max_k = k
            print(f"Found k = {k} with S(k) = 0")
    
    print(f"Maximum k ≤ 2010 with S(k) = 0: {max_k}")

compute_max_k()
```
