[write_program]
This problem asks to find all integer pairs (x,y) that satisfy the equation x² - 2009y + 2y² = 0. We'll write a Python program to search for solutions by iterating through possible y values and checking if x² = 2009y - 2y² yields perfect squares.

The approach:
1. For each y in a reasonable range, compute 2009y - 2y²
2. Check if the result is non-negative (since it must equal x²)
3. If non-negative, check if it's a perfect square
4. If perfect square, output both (x,y) and (-x,y) solutions

We'll limit y to a range where 2009y - 2y² remains positive (approximately 0 to 1004).

```python
import math

def find_solutions():
    print("Searching for integer solutions to x² - 2009y + 2y² = 0")
    solutions = []
    max_y = 1005  # 2009y - 2y² becomes negative when y > 2009/2
    
    for y in range(0, max_y + 1):
        discriminant = 2009 * y - 2 * y * y
        if discriminant < 0:
            continue
        x_squared = discriminant
        x = int(math.isqrt(x_squared))
        if x * x == x_squared:
            solutions.append((x, y))
            if x != 0:  # avoid duplicate (0,y)
                solutions.append((-x, y))
            print(f"Found solution: ({x}, {y})")
            if x != 0:
                print(f"Found solution: ({-x}, {y})")
    
    print("\nAll found solutions:")
    for sol in sorted(solutions, key=lambda p: (abs(p[1]), abs(p[0]))):
        print(sol)

if __name__ == "__main__":
    find_solutions()
```
