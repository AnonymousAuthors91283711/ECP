[write_program]
This problem involves calculating the probability that two independent trials of a biased coin experiment result in the same number of heads. The coin has a probability p=4/7 for heads. We need to enumerate all possible outcomes (0-3 heads) and compute the squared probabilities for each case, then sum them to get the final probability.

Here's a Python program that calculates this probability exactly as a reduced fraction:

```python
from fractions import Fraction
from math import gcd

def main():
    p = Fraction(4, 7)  # Probability of heads
    q = 1 - p           # Probability of tails
    
    # Calculate probabilities for 0, 1, 2, 3 heads
    prob = [
        (q * q * q),                     # 0 heads (all tails)
        (q * q * p) + (q * p * q) + (p * q * q),  # 1 head
        (q * p * p) + (p * q * p) + (p * p * q),  # 2 heads
        (p * p * p)                      # 3 heads
    ]
    
    # Calculate probability of same number of heads
    total = Fraction(0, 1)
    for pr in prob:
        total += pr * pr
    
    # Reduce to simplest form
    m = total.numerator
    n = total.denominator
    d = gcd(m, n)
    m //= d
    n //= d
    
    print(f"Probability as fraction: {m}/{n}")

if __name__ == "__main__":
    main()
```

The program computes the exact probability by:
1. Using exact fractions to avoid floating-point inaccuracies
2. Calculating all possible outcomes for 0-3 heads in 3 flips
3. Squaring each probability (since both trials are independent)
4. Summing the squared probabilities
5. Reducing the final fraction to simplest form

The output will be the exact probability in reduced form m/n where gcd(m,n)=1.
