[write_program]
This problem involves counting the number of ways to tile a 3×5 grid using specific rectangular tiles (either horizontal strips of width 1 or vertical strips of height 1). The program will enumerate all possible tilings by systematically trying combinations of tiles that cover the grid exactly without overlaps.

```python
from itertools import product

def main():
    # Define all possible tiles (horizontal and vertical strips)
    horizontal_tiles = [{(0, y) for y in range(w)} for w in range(1, 6)]
    vertical_tiles = [{(x, 0) for x in range(h)} for h in range(1, 4)]
    all_tiles = horizontal_tiles + vertical_tiles
    
    count = 0
    
    # Try all combinations of 5 tiles (since we need to cover 15 cells with 5 tiles)
    for tile_combo in product(all_tiles, repeat=5):
        covered = set()
        valid = True
        
        # Check if tiles are pairwise disjoint and cover all cells
        for tile in tile_combo:
            if covered & tile:
                valid = False
                break
            covered.update(tile)
        
        if valid and len(covered) == 15:  # 3×5 grid has 15 cells
            count += 1
            print(f"Found valid tiling #{count}")
    
    print(f"Total number of tilings: {count}")

if __name__ == "__main__":
    main()
```
