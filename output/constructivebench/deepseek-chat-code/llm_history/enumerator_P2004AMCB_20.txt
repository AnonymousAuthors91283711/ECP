[write_program]
This problem involves counting valid colorings of a cube's faces under certain constraints. We'll enumerate all possible colorings (2^6 = 64) and check which ones satisfy the given condition about vertical faces sharing the same color. The program will count valid colorings and compute the probability.

```python
from itertools import product

def solve():
    # All possible face colorings (6 faces, each can be 0 or 1)
    all_colorings = list(product([0,1], repeat=6))
    valid_count = 0
    
    # For each coloring, check if it's valid
    for coloring in all_colorings:
        valid = False
        # Check all possible vertical face combinations (4 choose 2 = 6 possibilities)
        # Vertical faces must be any 4 adjacent faces sharing the same color
        # We can represent the cube's face adjacency by considering opposite faces
        # The valid vertical sets are any 4 faces that include both faces of at least one opposite pair
        for opposite_pair in [(0,5), (1,4), (2,3)]:
            # Check if all vertical faces (the 4 faces not in this opposite pair) have same color
            vertical_faces = [i for i in range(6) if i not in opposite_pair]
            if all(coloring[i] == coloring[vertical_faces[0]] for i in vertical_faces):
                valid = True
                break
        if valid:
            valid_count += 1
    
    total = len(all_colorings)
    print(f"Valid colorings: {valid_count}/{total}")
    print(f"Probability: {valid_count}/{total} = {valid_count/total}")

solve()
```
