[write_program]
The problem asks to find the sum of all numbers n ≤ 100 that satisfy two conditions:
1. n has exactly 6 divisors
2. For any two divisors a < b of n, b ≥ 2*a (called "loose" condition)

We'll write a Python program to:
1. Find all numbers ≤ 100 with exactly 6 divisors
2. Filter those that satisfy the loose condition
3. Sum the remaining numbers

The key insight is that numbers with exactly 6 divisors must be either:
- p^5 where p is prime
- p^2 * q where p,q are distinct primes
We'll generate these forms and check the conditions.

```python
def get_divisors(n):
    divisors = set()
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    return sorted(divisors)

def is_loose(n):
    divisors = get_divisors(n)
    if len(divisors) != 6:
        return False
    for i in range(len(divisors)):
        for j in range(i+1, len(divisors)):
            a, b = divisors[i], divisors[j]
            if b < 2 * a:
                return False
    return True

total = 0
print("Numbers satisfying conditions:")
for n in range(1, 101):
    if is_loose(n):
        print(n)
        total += n

print(f"Sum of all such numbers ≤ 100: {total}")
```
