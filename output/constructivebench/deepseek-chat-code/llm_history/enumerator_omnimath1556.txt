[write_program]
This problem asks to find a polynomial P with roots at 1/4, 1/2, 2, and 4, satisfying specific conditions on its coefficients and evaluations. We'll enumerate possible polynomials by constructing them from their roots and checking the conditions.

The key steps are:
1. Construct the polynomial from its roots (x-1/4)(x-1/2)(x-2)(x-4)
2. Scale it to satisfy the leading coefficient condition
3. Verify the evaluation conditions at x=1 and x=0

```python
from fractions import Fraction
from itertools import product
from math import prod

def main():
    roots = [Fraction(1,4), Fraction(1,2), Fraction(2,1), Fraction(4,1)]
    
    # Construct the polynomial as (x-r1)(x-r2)(x-r3)(x-r4)
    # We'll represent it as a list of coefficients [a0, a1, a2, a3, a4]
    
    # First compute the product of roots (for leading coefficient condition)
    product_roots = prod(roots)
    
    # The required leading coefficient is 1/product_roots
    leading_coeff = Fraction(1, product_roots)
    
    # Now expand the polynomial (x-r1)(x-r2)(x-r3)(x-r4)
    # Initialize with (x - r1)
    poly = [Fraction(-roots[0], 1), Fraction(1,1)]
    
    # Multiply by remaining (x - ri) terms
    for r in roots[1:]:
        new_poly = [Fraction(0,1)] * (len(poly)+1)
        for i in range(len(poly)):
            new_poly[i] += poly[i] * Fraction(-r,1)
            new_poly[i+1] += poly[i]
        poly = new_poly
    
    # Scale by leading coefficient
    poly = [c * leading_coeff for c in poly]
    
    # Evaluate at x=1 and x=0
    eval1 = sum(poly)
    eval0 = poly[0]
    
    print(f"Polynomial coefficients: {poly}")
    print(f"Evaluation at x=1: {eval1}")
    print(f"Evaluation at x=0: {eval0}")

if __name__ == "__main__":
    main()
```
