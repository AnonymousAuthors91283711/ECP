[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat Topology Filter

abbrev omnimath3609_answer : ℕ → ℚ := sorry
theorem omnimath3609
(n : ℕ)
(P : Polynomial ℚ)
(hPdeg : P.degree = n)
(hP : ∀ k ∈ Set.Icc 0 n, P.eval (k : ℚ) = (k / (k + 1)))
: P.eval ((n + 1 : ℚ)) = omnimath3609_answer n := by sorry. Enumerated answers: n=1: P(2) = 1 (1.000000)
n=2: P(3) = 1/2 (0.500000)
n=3: P(4) = 1 (1.000000)
n=4: P(5) = 2/3 (0.666667)
n=5: P(6) = 1 (1.000000)
n=6: P(7) = 3/4 (0.750000)
n=7: P(8) = 1 (1.000000)
n=8: P(9) = 4/5 (0.800000)
n=9: P(10) = 1 (1.000000)

Conjectured pattern:
n=1: conjectured 2/3
n=2: conjectured 3/4
n=3: conjectured 4/5
n=4: conjectured 5/6
n=5: conjectured 6/7
n=6: conjectured 7/8
n=7: conjectured 8/9
n=8: conjectured 9/10
n=9: conjectured 10/11. Expected Answer Type: ℕ → ℚ
<<<fun n : ℕ => if n % 2 = 1 then 1 else (n / 2 + 1) / (n / 2 + 2)>>>