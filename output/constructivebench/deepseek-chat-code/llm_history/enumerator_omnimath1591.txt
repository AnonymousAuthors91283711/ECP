[write_program]
This problem asks for the smallest natural number `n` that can be expressed as the sum of three distinct powers of 2 (i.e., `2^x + 2^y + 2^z` where x, y, z are distinct) such that there are exactly 99 smaller numbers with the same property.

We'll write a Python program to:
1. Generate all numbers expressible as sums of three distinct powers of 2
2. Count how many smaller numbers have this property
3. Find the smallest number where this count equals 99

```python
def find_solution():
    max_power = 20  # Sufficiently large to cover the solution
    numbers = set()
    
    # Generate all possible sums of three distinct powers of 2
    for x in range(max_power):
        for y in range(x + 1, max_power):
            for z in range(y + 1, max_power):
                n = (1 << x) + (1 << y) + (1 << z)
                numbers.add(n)
    
    # Convert to sorted list
    sorted_numbers = sorted(numbers)
    
    # Find the first number with exactly 99 smaller numbers in the set
    for i, n in enumerate(sorted_numbers):
        if i == 99:
            print(n)
            return
    
    print("No solution found within the given power range")

find_solution()
```
