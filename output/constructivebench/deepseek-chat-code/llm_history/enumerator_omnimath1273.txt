[write_program]
This problem asks for the maximum value of the expression (xy + yz + zx)/(x² + y² + z²) under the constraints x ≠ y ≠ z ≠ x and x + y + z = 0. We'll write a Python program to explore this numerically by sampling various (x,y,z) triples that satisfy the conditions.

The approach will:
1. Generate candidate triples (x,y,z) with x + y + z = 0
2. Ensure all elements are distinct
3. Compute the target expression
4. Track the maximum value found

```python
import itertools
import math

def generate_triples(max_magnitude=5, steps=100):
    """Generate (x,y,z) triples with x+y+z=0 and distinct values"""
    for x in [i * max_magnitude / steps for i in range(-steps, steps + 1)]:
        for y in [j * max_magnitude / steps for j in range(-steps, steps + 1)]:
            z = -x - y
            if x != y and y != z and z != x:
                yield (x, y, z)

def compute_expression(x, y, z):
    numerator = x*y + y*z + z*x
    denominator = x**2 + y**2 + z**2
    return numerator / denominator

def find_max_expression():
    max_value = -float('inf')
    best_triple = None
    
    for x, y, z in generate_triples(max_magnitude=5, steps=1000):
        current = compute_expression(x, y, z)
        if current > max_value:
            max_value = current
            best_triple = (x, y, z)
            print(f"New max: {max_value:.6f} at ({x:.3f}, {y:.3f}, {z:.3f})")
    
    print(f"\nFinal maximum found: {max_value}")

if __name__ == "__main__":
    find_max_expression()
```

The program samples points in a grid around zero, computes the expression for valid triples, and tracks the maximum value found. The output shows progressive maxima as they're discovered, converging toward the theoretical maximum. The final output shows the highest value found during the search.
