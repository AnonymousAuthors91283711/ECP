[write_program]
This problem asks whether there exists a quadratic polynomial f with integer coefficients such that for every natural number n, f(n) is a power of 2. We'll write a Python program to search for such polynomials and check the condition.

The approach:
1. Generate all quadratic polynomials f(n) = an² + bn + c with small integer coefficients
2. For each polynomial, test several natural number inputs to see if the output is always a power of 2
3. If any polynomial passes all tests, print it

```python
def is_power_of_two(m):
    return m != 0 and (m & (m - 1)) == 0

def test_polynomial(a, b, c, max_n=20):
    for n in range(1, max_n + 1):
        val = a * n * n + b * n + c
        if not is_power_of_two(val):
            return False
    return True

def search_quadratics(coeff_range=10):
    found = False
    for a in range(1, coeff_range + 1):
        for b in range(-coeff_range, coeff_range + 1):
            for c in range(-coeff_range, coeff_range + 1):
                if test_polynomial(a, b, c):
                    print(f"Found candidate: {a}n² + {b}n + {c}")
                    found = True
    if not found:
        print("No quadratic polynomial found where f(n) is always a power of 2")

search_quadratics()
```
