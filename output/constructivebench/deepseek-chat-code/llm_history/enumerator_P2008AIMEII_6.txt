[write_program]
This problem involves a recurrence relation for sequences a and b. We'll write a Python program to compute the sequences up to n=32 and print the ratio b_n/a_n at each step to observe the pattern.

The recurrence relations are:
- a₁ = 1, b₁ = 1
- For n ≥ 2: aₙ = aₙ₋₁ + 2bₙ₋₁
- For n ≥ 2: bₙ = -aₙ₋₁ + 4bₙ₋₁

We'll compute these using exact fractions (via Python's fractions module) to avoid floating-point inaccuracies.

```python
from fractions import Fraction

def compute_sequences():
    a = [None, Fraction(1, 1)]  # a[1] = 1
    b = [None, Fraction(1, 1)]  # b[1] = 1
    
    for n in range(2, 33):
        a_n = a[n-1] + 2 * b[n-1]
        b_n = -a[n-1] + 4 * b[n-1]
        a.append(a_n)
        b.append(b_n)
        ratio = b[n] / a[n]
        print(f"n={n}: {ratio} (exact: {ratio.numerator}/{ratio.denominator})")
    
    print("\nFinal ratio at n=32:")
    print(b[32]/a[32])

compute_sequences()
```
