[write_program]
This problem involves a recurrence relation with square roots. We'll write a Python program to compute the first few terms of the sequences a and b to identify any patterns. The recurrence relations are:
- aₙ₊₁ = aₙ + bₙ + √(aₙ² + bₙ²)
- bₙ₊₁ = aₙ + bₙ - √(aₙ² + bₙ²)
with initial conditions a₀ = -2, b₀ = 1.

We'll compute the first 10 terms to observe the pattern.

```python
import math

def compute_terms(max_n):
    a = -2.0
    b = 1.0
    print(f"n=0: a={a}, b={b}")
    
    for n in range(1, max_n + 1):
        sqrt_term = math.sqrt(a**2 + b**2)
        new_a = a + b + sqrt_term
        new_b = a + b - sqrt_term
        a, b = new_a, new_b
        print(f"n={n}: a={a}, b={b}")

# Compute first 10 terms
compute_terms(10)
```
