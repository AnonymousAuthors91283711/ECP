[write_program]
This problem asks to find the smallest positive integers (m, n) that satisfy the equation (1/n²) - (3/(2n³)) = (1/m²), and prove it's the unique solution. We'll write a Python program to search for such pairs.

The approach:
1. Iterate through possible n values starting from 1
2. For each n, compute the left side of the equation
3. Check if the result can be written as 1/m² for some integer m
4. Stop when we find the first valid pair (which will be minimal)

```python
import fractions
import math

def find_solution():
    max_n = 100  # Reasonable upper bound for search
    for n in range(1, max_n + 1):
        # Compute left side using exact fractions to avoid floating point errors
        term1 = fractions.Fraction(1, n*n)
        term2 = fractions.Fraction(3, 2*n*n*n)
        left = term1 - term2
        
        # Check if left is positive and can be written as 1/m^2
        if left > 0 and left.numerator == 1:
            m_squared = left.denominator
            m = int(math.isqrt(m_squared))
            if m * m == m_squared:
                print(f"Found solution: m={m}, n={n}")
                return (m, n)
    
    print("No solution found in search range")
    return None

if __name__ == "__main__":
    find_solution()
```
