[write_program]
This problem asks for the number of 4×4 binary matrices where each row and column contains exactly 2 True and 2 False values. We'll enumerate all possible matrices satisfying these constraints.

The approach:
1. Generate all possible 4×4 binary matrices
2. Filter those where each row and column has exactly 2 True values
3. Count the valid matrices

Since 4×4 matrices are small (2^16 = 65536 possibilities), we can brute-force enumerate them efficiently.

```python
from itertools import product

def count_valid_matrices():
    count = 0
    # Generate all possible 4x4 binary matrices
    for matrix in product([0,1], repeat=16):
        # Reshape as 4x4
        m = [matrix[i*4:(i+1)*4] for i in range(4)]
        valid = True
        # Check rows
        for row in m:
            if sum(row) != 2:
                valid = False
                break
        if not valid:
            continue
        # Check columns
        for j in range(4):
            if sum(m[i][j] for i in range(4)) != 2:
                valid = False
                break
        if valid:
            count += 1
            # Print each valid matrix found (optional)
            # print("\n".join(" ".join(str(x) for x in row) for row in m))
            # print()
    return count

print(count_valid_matrices())
```
