[write_program]
This problem asks for which positive integers n there exists an n×n matrix M with integer entries such that:
1. The dot product of each row with itself is even (mod 2)
2. The dot product of any two distinct rows is odd (mod 2)

We'll write a Python program to check small values of n to find patterns. The key observation is that this is equivalent to finding a set of n vectors in ℤⁿ where each vector has even norm and any two distinct vectors have odd inner product (mod 2).

```python
def is_valid_matrix(n):
    # Try all possible binary matrices up to size n
    # For small n, we can brute-force check all possibilities
    from itertools import product
    
    if n == 1:
        # Only need [0] which satisfies v.v = 0
        print(f"n={1}: Valid")
        return True
    
    # Generate all possible binary vectors of length n
    vectors = list(product([0,1], repeat=n))
    
    # Try all combinations of n distinct vectors
    from itertools import combinations
    for candidate in combinations(vectors, n):
        valid = True
        # Check all dot products
        for i in range(n):
            vi = candidate[i]
            # Check vi.vi ≡ 0 mod 2
            if sum(x*x for x in vi) % 2 != 0:
                valid = False
                break
            for j in range(i+1, n):
                vj = candidate[j]
                # Check vi.vj ≡ 1 mod 2
                if sum(x*y for x,y in zip(vi,vj)) % 2 != 1:
                    valid = False
                    break
            if not valid:
                break
        if valid:
            print(f"n={n}: Valid with matrix:")
            for row in candidate:
                print(row)
            return True
    print(f"n={n}: No valid matrix found")
    return False

# Check small values of n
for n in range(1, 6):
    is_valid_matrix(n)
```

The program checks all possible binary matrices (mod 2) for small n values. For each n, it:
1. Generates all possible binary vectors of length n
2. Checks all combinations of n distinct vectors to see if they satisfy the conditions
3. Prints the first valid matrix found (if any)

Note that for larger n, this brute-force approach becomes impractical, but for small values it helps identify patterns. The output will show which small n values admit such matrices.
