[write_program]
This problem asks for the maximum number of distinct points in a grid that can be arranged in a strictly increasing sequence (in both coordinates) where no two points share the same x-coordinate or same y-coordinate. This is equivalent to finding the maximum size of a permutation matrix where the 1s form a chain under the product order.

The solution is known to be n for an n×n grid, achieved by placing points on the main diagonal. We'll write a Python program to verify this for small values of n.

```python
def is_valid_sequence(points):
    # Check all points are distinct
    if len(set(points)) != len(points):
        return False
    # Check x and y coordinates are strictly increasing
    xs = [p[0] for p in points]
    ys = [p[1] for p in points]
    if xs != sorted(xs) or ys != sorted(ys):
        return False
    # Check all x coordinates are unique
    if len(set(xs)) != len(xs):
        return False
    # Check all y coordinates are unique
    if len(set(ys)) != len(ys):
        return False
    return True

def max_sequence_size(n):
    from itertools import permutations, combinations
    max_size = 0
    # Try all possible sizes from n down to 1
    for size in range(n, 0, -1):
        # Generate all possible sequences of 'size' distinct points
        for points in combinations([(x,y) for x in range(n) for y in range(n)], size):
            if is_valid_sequence(points):
                print(f"Found valid sequence of size {size}: {points}")
                return size  # Since we're checking from largest first
    return 0

# Test for small values of n
for n in range(2, 6):
    print(f"\nTesting n = {n}")
    result = max_sequence_size(n)
    print(f"Maximum sequence size for n={n}: {result}")
```

The program checks all possible point sequences in an n×n grid, starting from the largest possible size (n) and working downward. For each sequence, it verifies the conditions: strictly increasing coordinates with all x and y coordinates distinct. The output shows the maximum valid sequence size found for each n from 2 to 5.
