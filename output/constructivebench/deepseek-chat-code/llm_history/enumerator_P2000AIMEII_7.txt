[write_program]
The problem asks for the greatest integer k such that k < (100^2 * sqrt(2)) / 100 = 100 * sqrt(2). We need to find the largest integer less than 100√2.

Since √2 ≈ 1.41421356237, we can calculate 100√2 ≈ 141.421356237. The greatest integer less than this value is 141.

Here's a Python program that verifies this by calculating the exact value and checking the inequality:

```python
import math

def main():
    sqrt2 = math.sqrt(2)
    N = 100**2 * sqrt2
    k_max = int(N / 100)  # This gives floor(100*sqrt(2))
    
    # Verify it's the greatest integer satisfying the condition
    print(f"Checking k = {k_max}: {k_max} < {100*sqrt2}? {k_max < 100*sqrt2}")
    print(f"Next integer k+1 = {k_max+1}: {k_max+1} < {100*sqrt2}? {k_max+1 < 100*sqrt2}")
    
    # The answer is the largest k satisfying the condition
    print(f"\nThe greatest integer k satisfying k < 100*sqrt(2) is: {k_max}")

if __name__ == "__main__":
    main()
```
