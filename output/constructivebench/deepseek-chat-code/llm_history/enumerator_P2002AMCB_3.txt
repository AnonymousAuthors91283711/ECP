[write_program]
The problem asks to count the number of positive integers n for which n² - 3n + 2 is prime. We'll write a Python program to enumerate all such n up to a reasonable threshold (say 1000) and count them.

The expression n² - 3n + 2 can be factored as (n-1)(n-2), so for it to be prime, one of the factors must be ±1 and the other must be a prime number (with the same sign). We'll check all n where either n-1 or n-2 equals 1 or -1, and the other factor is prime.

```python
def is_prime(num):
    if num <= 1:
        return False
    if num == 2:
        return True
    if num % 2 == 0:
        return False
    for i in range(3, int(num**0.5) + 1, 2):
        if num % i == 0:
            return False
    return True

count = 0
max_n = 1000  # Reasonable threshold
for n in range(1, max_n + 1):
    # The expression factors as (n-1)(n-2)
    # For it to be prime, one factor must be ±1 and the other must be prime
    if (n-1 == 1 and is_prime(n-2)) or (n-2 == 1 and is_prime(n-1)):
        print(f"Found valid n: {n}")
        count += 1
    elif n-1 == -1 and is_prime(-(n-2)):  # n=0 case excluded since n>0
        pass  # Not possible with n>0
    elif n-2 == -1 and is_prime(-(n-1)):  # n=1 case
        pass  # n=1 gives 0 which isn't prime

print(f"Total count: {count}")
```
