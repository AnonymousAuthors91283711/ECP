[write_program]
This problem asks for all triples of prime numbers (p, q, r) such that p/q - 4/(r+1) = 1. We'll approach this by:

1. Rearranging the equation to p/q = 1 + 4/(r+1)
2. Enumerating small prime values for r (since r appears in denominator)
3. For each r, compute the right side and find primes p,q that satisfy the equation

We'll limit our search to primes below 100 for practicality.

```python
def is_prime(n):
    if n < 2:
        return False
    for p in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31]:
        if n % p == 0:
            return n == p
    d = n - 1
    s = 0
    while d % 2 == 0:
        d //= 2
        s += 1
    for a in [2, 325, 9375, 28178, 450775, 9780504, 1795265022]:
        if a >= n:
            continue
        x = pow(a, d, n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(s - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True

primes = [p for p in range(2, 100) if is_prime(p)]

for r in primes:
    denom = r + 1
    right = 1 + 4 / denom
    for q in primes:
        p = right * q
        if p.is_integer() and is_prime(int(p)):
            print(f"Found solution: p={int(p)}, q={q}, r={r}")
```
