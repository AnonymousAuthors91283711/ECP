[write_program]
This problem asks for the number of integer sequences of length 5 where each element is ≤ 1, and for every prefix sum (sum of first n elements), the sum is non-negative. We'll enumerate all possible sequences meeting these constraints.

The approach:
1. Generate all possible sequences of length 5 with elements in {-∞,...,1}
2. Filter sequences where each element ≤ 1
3. Filter sequences where all prefix sums are non-negative
4. Count the valid sequences

We'll use itertools.product to generate candidate sequences and check the constraints.

```python
import itertools

def is_valid(sequence):
    # Check all elements ≤ 1
    if any(x > 1 for x in sequence):
        return False
    # Check all prefix sums ≥ 0
    prefix_sum = 0
    for i, num in enumerate(sequence):
        prefix_sum += num
        if prefix_sum < 0:
            return False
    return True

def enumerate_sequences():
    count = 0
    # We limit elements to -2..1 since larger negatives would fail prefix sums quickly
    for seq in itertools.product(range(-2, 2), repeat=5):
        if is_valid(seq):
            count += 1
            print(seq)  # Print valid sequences as they're found
    print("Total valid sequences:", count)

enumerate_sequences()
```
