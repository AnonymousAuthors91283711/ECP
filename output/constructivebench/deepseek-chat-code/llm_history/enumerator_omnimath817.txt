[write_program]
This problem asks for the count of numbers n between 2 and 100 where (n-2)! mod n ≠ 0. According to Wilson's theorem, for prime p, (p-1)! ≡ -1 mod p, so (p-2)! ≡ 1 mod p. The only exceptions are n=4 where (4-2)! = 2 ≡ 2 mod 4 ≠ 0, and n=1 which is outside our range. We'll enumerate all numbers from 2 to 100 and count those where (n-2)! mod n ≠ 0.

```python
import math

def is_prime(n):
    if n < 2:
        return False
    for p in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31]:
        if n % p == 0:
            return n == p
    d = n - 1
    s = 0
    while d % 2 == 0:
        d //= 2
        s += 1
    for a in [2, 325, 9375, 28178, 450775, 9780504, 1795265022]:
        if a >= n:
            continue
        x = pow(a, d, n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(s - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True

count = 0
for n in range(2, 101):
    if n == 4:
        count += 1
        print(f"Found exception: {n}")
        continue
    if is_prime(n):
        # For primes, (n-2)! ≡ 1 mod n (from Wilson's theorem)
        count += 1
        print(f"Found prime: {n}")
print(f"Final count: {count}")
```
