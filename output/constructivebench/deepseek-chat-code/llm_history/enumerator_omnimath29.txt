[write_program]
This problem asks for all pairs of positive integers (m, n) where (m*n - 1) divides (m² + n²). We'll write a Python program to enumerate such pairs up to a reasonable threshold to help identify patterns.

The approach:
1. Iterate through possible m and n values up to a threshold (we'll use 100)
2. For each pair, check if (m² + n²) is divisible by (m*n - 1)
3. Print valid pairs as they're found
4. After enumeration, print the total count of found pairs

```python
def find_pairs(max_value=100):
    count = 0
    for m in range(1, max_value + 1):
        for n in range(1, max_value + 1):
            denominator = m * n - 1
            if denominator <= 0:
                continue
            numerator = m**2 + n**2
            if numerator % denominator == 0:
                print(f"Found pair: ({m}, {n})")
                count += 1
    print(f"Total pairs found: {count}")

find_pairs()
```
