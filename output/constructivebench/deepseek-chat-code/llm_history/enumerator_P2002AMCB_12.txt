[write_program]
The problem asks for the number of integer values `n` such that there exists an integer `k` where `n/(20 - n)` is a perfect square (and `20 - n ≠ 0`). We need to enumerate all possible integer `n` values satisfying this condition.

Approach:
1. Rearrange the equation `n/(20 - n) = k²` to `n = 20k²/(1 + k²)`.
2. For each integer `k`, compute `n` and check if it's an integer.
3. Since `k²` grows rapidly, we can limit `k` to a reasonable range (e.g., -100 to 100) to capture all possible solutions.
4. Collect all distinct valid `n` values and count them.

```python
def solve():
    solutions = set()
    # Iterate k from -100 to 100 (sufficient range for this problem)
    for k in range(-100, 101):
        if k == 0:
            # k=0 gives n=0, which is valid
            n = 0
            solutions.add(n)
            continue
        denominator = 1 + k*k
        numerator = 20 * k * k
        # Check if numerator is divisible by denominator
        if numerator % denominator == 0:
            n = numerator // denominator
            solutions.add(n)
    # Output all solutions found
    for n in sorted(solutions):
        print(n)
    # Print the count of distinct solutions
    print(f"Total solutions: {len(solutions)}")

solve()
```
