[write_program]
The problem asks for the smallest positive integer n such that:
1. The sum of its decimal digits equals 20
2. When 864 is added to n, the sum of the decimal digits of (n+864) also equals 20

We'll write a Python program to search for such numbers efficiently by:
1. Iterating through numbers in order
2. Checking the digit sum condition for n
3. For qualifying n, checking the digit sum condition for n+864
4. Stopping at the first valid number found (which will be minimal)

```python
def digit_sum(n):
    return sum(int(d) for d in str(n))

def find_min_n():
    n = 1
    while True:
        if digit_sum(n) == 20:
            if digit_sum(n + 864) == 20:
                print(f"Found candidate: {n}")
                return n
        n += 1
        # Prevent infinite loop in case no solution exists (though problem implies one does)
        if n > 10**6:
            print("Search limit reached")
            return None

if __name__ == "__main__":
    find_min_n()
```
