[write_program]
This problem is from IMO 2018 Shortlist N5, asking to find all positive integer quadruples (x,y,z,t) satisfying:
1. xy - zt = x + y
2. x + y = z + t
3. Neither xy nor zt is a perfect square

We'll write a program to enumerate small solutions and check these conditions. The program will search for all quadruples up to a reasonable bound (100) and print those satisfying the first two equations, while also checking the perfect square condition.

```python
import math

def is_square(n):
    if n < 0:
        return False
    root = math.isqrt(n)
    return root * root == n

max_n = 100  # Search bound

print("Searching for solutions (x,y,z,t) where x+y=z+t and xy-zt=x+y:")
for x in range(1, max_n + 1):
    for y in range(1, max_n + 1):
        s = x + y
        xy = x * y
        zt = xy - s
        if zt <= 0:
            continue
        # Find z,t such that z+t=s and z*t=zt
        # z and t are roots of T^2 - sT + zt = 0
        discriminant = s * s - 4 * zt
        if discriminant < 0:
            continue
        root_disc = math.isqrt(discriminant)
        if root_disc * root_disc != discriminant:
            continue
        z1 = (s + root_disc) // 2
        t1 = s - z1
        z2 = (s - root_disc) // 2
        t2 = s - z2
        for z, t in [(z1, t1), (z2, t2)]:
            if z > 0 and t > 0:
                xy_square = is_square(x * y)
                zt_square = is_square(z * t)
                if not (xy_square and zt_square):
                    print(f"({x},{y},{z},{t})", end=' ')
                    print(f"xy={x*y}", end=' ')
                    print(f"zt={z*t}", end=' ')
                    print(f"xy_square={xy_square}", end=' ')
                    print(f"zt_square={zt_square}")
```
