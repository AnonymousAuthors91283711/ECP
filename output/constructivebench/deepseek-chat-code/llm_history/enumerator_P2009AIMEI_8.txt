[write_program]
The problem asks to compute the sum of all differences (a - b) where a and b are distinct powers of 2 from 2^0 to 2^10, with a > b, and then find this sum modulo 1000. We'll enumerate all ordered pairs (a,b) where a > b and sum their differences.

```python
def main():
    S = [2**n for n in range(11)]  # Powers from 2^0 to 2^10
    total = 0
    
    # Iterate through all ordered pairs (a,b) where a > b
    for i in range(len(S)):
        for j in range(i):  # j < i ensures S[i] > S[j]
            total += S[i] - S[j]
    
    # Compute modulo 1000
    result = total % 1000
    print(f"Final result modulo 1000: {result}")

if __name__ == "__main__":
    main()
```
