[write_program]
This problem involves finding the greatest natural number `n` such that for a given `T`, the quadratic expression `2n² - (21 + 2T)n + 77` is both positive and prime. We'll write a Python program to enumerate possible values of `n` for small sample values of `T` and find the maximum `n` satisfying the conditions.

The approach:
1. Define the quadratic function f(n, T) = 2n² - (21 + 2T)n + 77
2. For sample T values (0 to 5), find all n where f(n, T) is positive and prime
3. Track the maximum n for each T that satisfies these conditions

```python
import math

def is_prime(num):
    if num <= 1:
        return False
    if num == 2:
        return True
    if num % 2 == 0:
        return False
    max_divisor = math.isqrt(num) + 1
    for d in range(3, max_divisor, 2):
        if num % d == 0:
            return False
    return True

def f(n, T):
    return 2 * n * n - (21 + 2 * T) * n + 77

def find_max_n_for_T(T, max_n=100):
    max_valid_n = 0
    print(f"\nFor T = {T}:")
    for n in range(1, max_n + 1):
        val = f(n, T)
        if val > 0 and is_prime(val):
            print(f"n = {n}, f(n) = {val}")
            max_valid_n = n
    if max_valid_n > 0:
        print(f"Maximum valid n for T={T}: {max_valid_n}")
    else:
        print(f"No valid n found for T={T} up to n={max_n}")

# Test for sample T values
for T in range(0, 6):
    find_max_n_for_T(T)
```
