[write_program]
This problem asks for the smallest integer `s ≥ 2012` that can be expressed as `a³ + b³ - 60ab(a+b)` for some integers `a,b`. We'll write a program to search for such pairs (a,b) and find the minimal s.

The approach:
1. Symmetry allows us to consider only a ≤ b
2. For each b, compute possible a values that might give s ≥ 2012
3. Track the minimal valid s found

```python
def compute_s(a, b):
    return a**3 + b**3 - 60*a*b*(a + b)

min_s = None
max_tried = 0

# Search for minimal s ≥ 2012
for b in range(0, 100):
    # Find a range that could potentially give s ≥ 2012
    for a in range(-b, b+1):
        s = compute_s(a, b)
        if s >= 2012:
            if min_s is None or s < min_s:
                min_s = s
                print(f"New candidate: s={s} at (a,b)=({a},{b})")
            break  # since s decreases as a moves away from b/2

    # Track maximum b tried for progress indication
    if b > max_tried:
        max_tried = b
        print(f"Progress: tested up to b={b}")

if min_s is not None:
    print(f"\nMinimal s ≥ 2012 found: {min_s}")
else:
    print("No solution found in search range")
```
