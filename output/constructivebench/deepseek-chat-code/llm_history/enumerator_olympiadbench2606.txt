[write_program]
This problem asks for the greatest integer k ≤ 1000 such that 7 divides the binomial coefficient C(1000, k). We'll write a Python program to find this by checking divisibility for each k from 1000 down to 0.

The approach:
1. Iterate k from 1000 down to 0
2. For each k, compute C(1000, k) modulo 7
3. Return the first k where the result is 0 (divisible by 7)
4. Use Lucas' Theorem for efficient computation of binomial coefficients modulo a prime

```python
def find_max_k():
    n = 1000
    p = 7
    
    def lucas_theorem(n, k, p):
        # Compute binomial(n,k) mod p using Lucas' Theorem
        res = 1
        while n > 0 or k > 0:
            ni = n % p
            ki = k % p
            if ki > ni:
                return 0
            # Multiply by C(ni, ki)
            res = (res * comb(ni, ki)) % p
            n = n // p
            k = k // p
        return res
    
    def comb(a, b):
        # Compute small binomial coefficient C(a,b)
        if b < 0 or b > a:
            return 0
        res = 1
        for i in range(b):
            res = res * (a - i) // (i + 1)
        return res
    
    for k in range(n, -1, -1):
        if lucas_theorem(n, k, p) == 0:
            print(f"Found k = {k}")
            return k
    
    return -1

if __name__ == "__main__":
    max_k = find_max_k()
    print(f"The greatest k ≤ 1000 with 7 dividing C(1000,k) is {max_k}")
```
