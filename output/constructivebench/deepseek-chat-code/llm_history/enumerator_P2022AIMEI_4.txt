[write_program]
This problem involves finding pairs of positive integers (r, s) where 1 ≤ r, s ≤ 100 such that i*w^r = z^s, with w and z given complex numbers. We'll convert this to polar form for easier computation.

The approach is:
1. Convert w and z to polar form (magnitude and angle)
2. Compute the angle condition modulo 2π
3. Find all (r, s) pairs satisfying the condition within bounds

```python
import math
import cmath

def solve():
    # Convert w and z to complex numbers
    w = (math.sqrt(3) + 1j) / 2
    z = (-1 + 1j * math.sqrt(3)) / 2
    
    # Precompute angles (in radians)
    angle_w = cmath.phase(w)
    angle_z = cmath.phase(z)
    angle_i = cmath.phase(1j)
    
    # We need i*w^r = z^s => angle_i + r*angle_w ≡ s*angle_z mod 2π
    # Also magnitudes must match (both sides have magnitude 1)
    
    count = 0
    for r in range(1, 101):
        lhs_angle = angle_i + r * angle_w
        for s in range(1, 101):
            rhs_angle = s * angle_z
            # Check if angles are congruent modulo 2π
            if abs((lhs_angle - rhs_angle) % (2 * math.pi)) < 1e-8:
                print(f"Found pair: r={r}, s={s}")
                count += 1
    
    print(f"Total solutions: {count}")

solve()
```
