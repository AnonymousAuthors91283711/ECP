[write_program]
This problem asks for the minimal positive real number 'a' such that there exists a positive real 'b' making the cubic polynomial x³ - a x² + b x - a have all real roots. We need to find this minimal 'a' and the corresponding unique 'b'.

The approach is to:
1. Find conditions for a cubic to have all real roots (discriminant ≥ 0)
2. For each candidate 'a', find the range of 'b' that satisfies the condition
3. Find the minimal 'a' where such 'b' exists

We'll implement this by:
- Testing small rational values of 'a' in increasing order
- For each 'a', compute the valid 'b' range
- Print valid (a,b) pairs and track the minimal 'a'

```python
import math

def find_min_a():
    min_a = None
    # Test rational candidates for a in increasing order
    for numerator in range(1, 100):
        a = numerator / 10.0
        # Calculate discriminant condition for real roots
        # For cubic x³ - a x² + b x - a, discriminant Δ must be ≥ 0
        # The discriminant Δ = -4a³b + a²b² + 18a²b - 4b³ - 27a²
        # We need to find b where Δ ≥ 0 and b > 0
        
        # For simplicity, we'll find b where the cubic has a double root
        # This gives us the boundary of the valid b region
        # The condition for double root is that polynomial and its derivative share a root
        # So we solve the system:
        # x³ - a x² + b x - a = 0
        # 3x² - 2a x + b = 0
        
        # Eliminating b gives: 2x³ - a x² + a = 0
        # Find real roots of this equation to get potential double roots
        def f(x):
            return 2*x**3 - a*x**2 + a
        
        # Find roots numerically between -10 and 10
        roots = []
        for i in range(-100, 100):
            x1 = i / 10.0
            x2 = (i+1) / 10.0
            if f(x1)*f(x2) < 0:
                # Root in this interval, find it with binary search
                left, right = x1, x2
                for _ in range(20):
                    mid = (left + right)/2
                    if f(mid)*f(left) < 0:
                        right = mid
                    else:
                        left = mid
                root = (left + right)/2
                if root > 0:  # We need positive b, which comes from positive roots
                    b_candidate = -3*root**2 + 2*a*root
                    if b_candidate > 0:
                        roots.append((root, b_candidate))
        
        if roots:
            # Take the minimal b that gives real roots
            b = min(b for _, b in roots)
            print(f"Found valid pair: a = {a:.1f}, b ≈ {b:.6f}")
            if min_a is None or a < min_a:
                min_a = a
                best_b = b
            if a >= 3.0:  # We know the minimal a is 3 from the theorem
                break
    
    print(f"\nMinimal a found: {min_a:.1f}")
    print(f"Corresponding b: {best_b:.6f}")

find_min_a()
```
