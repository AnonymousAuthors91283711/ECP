[write_program]
This problem involves finding the minimal value of g3 in a sequence where:
- a1, a2, a3 form an arithmetic sequence with a1 = 9 and common difference d
- g1, g2, g3 form a geometric sequence with g1 = a1, g2 = a2 + 2, g3 = a3 + 20
- The condition g2Â² = g1 * g3 must hold

We'll write a Python program to:
1. Express the relationship between d and the sequences
2. Find all real d that satisfy the geometric condition
3. Calculate corresponding g3 values
4. Find the minimal g3

```python
import math

def find_min_g3():
    min_g3 = None
    # We'll search for d in a reasonable range around 0 with small steps
    for d in range(-1000, 1001):
        d_val = d / 100.0  # step size 0.01 for precision
        a1 = 9
        a2 = a1 + d_val
        a3 = a2 + d_val
        g1 = a1
        g2 = a2 + 2
        g3 = a3 + 20
        
        # Check if geometric condition holds (with floating point tolerance)
        if abs(g2**2 - g1 * g3) < 1e-6:
            print(f"Found valid d={d_val:.2f}, g3={g3:.6f}")
            if min_g3 is None or g3 < min_g3:
                min_g3 = g3
    
    if min_g3 is not None:
        print(f"\nMinimum g3 value found: {min_g3:.6f}")
    else:
        print("No valid solutions found in search range")

find_min_g3()
```
