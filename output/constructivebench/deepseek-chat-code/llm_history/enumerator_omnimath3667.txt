[write_program]
This problem asks for all quadruples (p, q, a, b) where p and q are primes, a > 1, b > 0, and p^a = 1 + 5*q^b. We'll enumerate possible small values of b and q, then solve for p and a.

```python
import math

def is_prime(n):
    if n <= 1:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            return False
    return True

def solve():
    max_q = 100  # reasonable upper bound for q
    max_b = 5    # reasonable upper bound for b
    solutions = []
    
    for b in range(1, max_b + 1):
        for q in range(2, max_q + 1):
            if not is_prime(q):
                continue
            rhs = 1 + 5 * (q ** b)
            if rhs < 4:  # p must be at least 2
                continue
                
            # Try to find p^a = rhs
            max_p = int(math.sqrt(rhs)) + 2
            for p in range(2, max_p + 1):
                if not is_prime(p):
                    continue
                a = 1
                current = p
                while current <= rhs:
                    if current == rhs:
                        solutions.append((p, q, a, b))
                        print(f"Found solution: p={p}, q={q}, a={a}, b={b}")
                    current *= p
                    a += 1
                    
    print("\nAll solutions found:")
    for sol in solutions:
        print(sol)

if __name__ == "__main__":
    solve()
```
