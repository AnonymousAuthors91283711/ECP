[write_program]
This problem asks for all integer-valued functions f: ℤ → ℤ that satisfy the condition:
For all integers a, b, c where a + b + c = 0, we have f(a) + f(b) + f(c) = a² + b² + c².

We'll enumerate possible quadratic functions f(n) = An² + Bn + C that satisfy this condition, testing small integer coefficients A, B, C.

```python
def check_condition(A, B, C):
    # Test the condition for various a,b,c combinations where a+b+c=0
    test_cases = [
        (1, 1, -2), (2, -1, -1), (3, -2, -1), (0, 0, 0),
        (5, -3, -2), (-4, 2, 2), (10, -6, -4)
    ]
    for a, b, c in test_cases:
        lhs = (A*a**2 + B*a + C) + (A*b**2 + B*b + C) + (A*c**2 + B*c + C)
        rhs = a**2 + b**2 + c**2
        if lhs != rhs:
            return False
    return True

def enumerate_solutions():
    # Search for quadratic solutions f(n) = An² + Bn + C
    max_coeff = 2  # Reasonable range to search
    for A in range(-max_coeff, max_coeff + 1):
        for B in range(-max_coeff, max_coeff + 1):
            for C in range(-max_coeff, max_coeff + 1):
                if check_condition(A, B, C):
                    print(f"Found solution: f(n) = {A}n² + {B}n + {C}")

if __name__ == "__main__":
    enumerate_solutions()
```
