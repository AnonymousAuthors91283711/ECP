[write_program]
This problem asks for the number of positive integer triples (a, b, c) that satisfy the equation 6a + 10b + 15c = 3000. We'll write a Python program to enumerate all possible solutions efficiently by iterating through possible values of c first (since it has the largest coefficient), then b, and solving for a in each case.

The approach:
1. Iterate c from 1 to maximum possible (when b=1 and a=1)
2. For each c, iterate b from 1 to maximum possible given c
3. For each (b,c) pair, check if (3000 - 10b - 15c) is divisible by 6 and positive
4. Count all valid (a,b,c) triples

```python
def count_solutions():
    count = 0
    max_c = (3000 - 6 - 10) // 15  # maximum c when a=b=1
    for c in range(1, max_c + 1):
        remaining_after_c = 3000 - 15 * c
        max_b = (remaining_after_c - 6) // 10  # maximum b when a=1
        for b in range(1, max_b + 1):
            remaining = remaining_after_c - 10 * b
            if remaining > 0 and remaining % 6 == 0:
                a = remaining // 6
                count += 1
    print(count)

count_solutions()
```
