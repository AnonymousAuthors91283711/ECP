[write_program]
The problem involves finding combinations (n choose k) that equal 3003 (which is 3003 choose 1), and then computing a final expression involving these values. We'll write a Python program to:

1. Verify the given combinatorial identities
2. Find the values of a and b that satisfy the conditions
3. Compute the final expression a + b*(15-b)

We'll use Python's math.comb for combinatorial calculations and iterate through possible values.

```python
import math

def find_a():
    # Find a where comb(a,2) = 3003
    for a in range(2, 1000):
        if math.comb(a, 2) == 3003:
            return a
    return None

def find_b():
    # Find b where comb(15,b) = 3003
    for b in range(0, 16):
        if math.comb(15, b) == 3003:
            return b
    return None

def main():
    # Verify given identities
    assert math.comb(3003, 1) == 3003
    assert math.comb(3003, 1) == math.comb(3003, 3002)
    
    a = find_a()
    print(f"Found a = {a}")
    assert a is not None
    assert math.comb(a, 2) == 3003
    assert math.comb(a, a-2) == 3003
    
    b = find_b()
    print(f"Found b = {b}")
    assert b is not None
    assert math.comb(15, b) == 3003
    assert math.comb(15, 15-b) == 3003
    
    assert math.comb(14, 6) == 3003
    assert math.comb(14, 8) == 3003
    
    answer = a + b * (15 - b)
    print(f"Final answer: {answer}")

if __name__ == "__main__":
    main()
```
