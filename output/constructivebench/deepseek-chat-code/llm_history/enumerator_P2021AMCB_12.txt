[write_program]
This problem involves finding the average of all elements in a set S with specific conditions. We'll enumerate possible set sizes and verify the conditions to find valid configurations.

Key observations:
1. The difference between max and min is 72
2. Three different average conditions must be satisfied
3. We need to find the average of the full set

We'll iterate through possible set sizes and check the conditions.

```python
def solve():
    for n in range(3, 100):  # Try reasonable set sizes
        # Calculate required sums based on conditions
        sum_S_without_max = 32 * (n - 1)
        sum_S_without_both = 35 * (n - 2)
        sum_S_without_min = 40 * (n - 1)
        
        # Derive max and min values
        min_val = sum_S_without_max - sum_S_without_both
        max_val = min_val + 72
        
        # Calculate total sum
        total_sum = sum_S_without_min + min_val
        
        # Verify all conditions
        calculated_sum_without_max = total_sum - max_val
        calculated_sum_without_both = total_sum - max_val - min_val
        calculated_sum_without_min = total_sum - min_val
        
        if (calculated_sum_without_max == sum_S_without_max and
            calculated_sum_without_both == sum_S_without_both and
            calculated_sum_without_min == sum_S_without_min):
            average = total_sum / n
            print(f"Found valid set size {n}: average = {average}")
            if average.is_integer():
                print(f"Integer average found: {int(average)}")
            return  # Stop after first valid solution found

solve()
```
