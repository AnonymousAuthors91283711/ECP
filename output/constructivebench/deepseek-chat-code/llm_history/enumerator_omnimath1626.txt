[write_program]
This problem involves finding pairs of positive integers (a, b) such that the difference between two double sums equals 1200. The theorem suggests there's a special relationship when the answer equals 21. We'll write a Python program to enumerate possible (a, b) pairs and compute the difference to find candidates that satisfy the equation.

The key is to:
1. Compute both double sums efficiently
2. Calculate their difference
3. Check if it equals 1200
4. Output valid pairs and their corresponding difference

```python
def compute_difference(a, b):
    """Compute the difference between the two double sums."""
    sum1 = 0
    sum2 = 0
    for i in range(a):
        for j in range(b):
            sum1 += i * b + j + 1
            sum2 += (i + 1) * (j + 1)
    return sum1 - sum2

def find_pairs(max_a=50, max_b=50):
    """Find all (a,b) pairs where the difference equals 1200."""
    for a in range(1, max_a + 1):
        for b in range(1, max_b + 1):
            diff = compute_difference(a, b)
            if diff == 1200:
                print(f"Found pair: ({a}, {b}) with difference {diff}")

if __name__ == "__main__":
    print("Searching for pairs (a,b) where the difference equals 1200:")
    find_pairs()
```
