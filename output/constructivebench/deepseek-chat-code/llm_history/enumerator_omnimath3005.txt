[write_program]
The problem asks to find all 3-digit numbers N (100 ≤ N < 1000) that satisfy N ≡ 7 mod 10, N ≡ 7 mod 11, and N ≡ 7 mod 12. For each such number, we need to compute the sum of its digits. The final answer is the common digit sum for all valid numbers (which the theorem suggests is unique).

We'll:
1. Iterate through all 3-digit numbers ending with 7 (from 107 to 997 in steps of 10)
2. Check if they satisfy N ≡ 7 mod 11 and N ≡ 7 mod 12
3. For valid numbers, compute and print the digit sum
4. Since the theorem suggests a unique answer, we'll stop after finding the first valid number's digit sum (others should match)

```python
def digit_sum(n):
    return sum(int(d) for d in str(n))

# Find all 3-digit numbers ending with 7 that satisfy the conditions
for n in range(107, 1000, 10):
    if n % 11 == 7 and n % 12 == 7:
        ds = digit_sum(n)
        print(f"N={n}, digit sum={ds}")
        # According to the theorem, all valid N should have same digit sum
        # So we can break after first valid number
        break
```
