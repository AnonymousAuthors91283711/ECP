[write_program]
This problem involves finding the average score of juniors given the total students, seniors' average, and overall average. The key constraints are that total students must be divisible by 10, and the seniors' contribution must not exceed the total contribution.

We'll write a Python program to:
1. Take sample values for totalStudents, seniorsAvg, and overallAvg
2. Verify the constraints
3. Calculate the juniors' average score for valid cases

```python
def calculate_juniors_avg(totalStudents, seniorsAvg, overallAvg):
    if totalStudents % 10 != 0:
        print(f"Invalid: totalStudents {totalStudents} not divisible by 10")
        return
    
    seniorsCount = 9 * totalStudents // 10
    juniorsCount = totalStudents // 10
    
    totalScore = overallAvg * totalStudents
    seniorsTotal = seniorsAvg * seniorsCount
    
    if seniorsTotal > totalScore:
        print(f"Invalid: seniors' total {seniorsTotal} > overall total {totalScore}")
        return
    
    # Calculate juniors' average (must be integer)
    juniorsTotal = totalScore - seniorsTotal
    if juniorsTotal % juniorsCount != 0:
        print(f"Non-integer result for juniorsAvg with inputs: {totalStudents}, {seniorsAvg}, {overallAvg}")
        return
    
    juniorsAvg = juniorsTotal // juniorsCount
    print(f"totalStudents={totalStudents}, seniorsAvg={seniorsAvg}, overallAvg={overallAvg} -> juniorsAvg={juniorsAvg}")

# Sample cases
sample_cases = [
    (10, 80, 82),  # Simple case
    (20, 75, 78),  # Larger group
    (30, 90, 85),  # Seniors better than average
    (40, 60, 62),  # Another valid case
    (15, 70, 72),  # Invalid (not divisible by 10)
    (10, 90, 80),  # Invalid (seniors exceed total)
]

for case in sample_cases:
    calculate_juniors_avg(*case)
```
