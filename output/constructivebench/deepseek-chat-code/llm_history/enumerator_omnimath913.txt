[write_program]
This problem asks for the count of numbers `n` between 1 and 100 where the sum of `n/k` for `k` from 1 to `n` is odd. We'll write a Python program to compute this sum for each `n` and count how many times it's odd.

The key observation is that `n/k` in the sum is integer division, which counts how many times `k` divides `n`. So the sum is actually the sum of the number of divisors of each number from 1 to `n`. This is known as the divisor summatory function.

```python
def count_odd_sums():
    count = 0
    for n in range(1, 101):
        total = 0
        for k in range(1, n + 1):
            total += n // k
        if total % 2 == 1:
            print(f"n={n} has odd sum {total}")
            count += 1
    print(f"Total numbers with odd sum: {count}")

count_odd_sums()
```
