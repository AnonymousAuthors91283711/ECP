[write_program]
This problem involves finding all real-valued functions `f: ℝ → ℝ` that satisfy the functional equation `f(x^2 + f(x)*f(y)) = x*f(x + y)` for all real `x, y`. We'll write a Python program to enumerate possible polynomial solutions of low degree to help conjecture the answer.

The approach will be:
1. Assume `f` is a polynomial function
2. Test constant, linear, and quadratic polynomial forms
3. For each candidate, verify if it satisfies the functional equation for random test points

```python
import numpy as np

def test_function(f, verbose=True):
    """Test if f satisfies the functional equation for random x,y pairs"""
    for _ in range(10):  # Test 10 random pairs
        x = np.random.uniform(-5, 5)
        y = np.random.uniform(-5, 5)
        lhs = f(x**2 + f(x)*f(y))
        rhs = x * f(x + y)
        if not np.isclose(lhs, rhs, atol=1e-6):
            if verbose:
                print(f"Failed for x={x:.3f}, y={y:.3f}: lhs={lhs:.3f}, rhs={rhs:.3f}")
            return False
    if verbose:
        print("Passed all tests")
    return True

# Test constant function f(x) = c
print("Testing constant functions:")
for c in [0, 1, -1, 2, -2]:
    f = lambda x, c=c: c
    print(f"f(x) = {c}: ", end="")
    test_function(f)

# Test linear functions f(x) = a*x + b
print("\nTesting linear functions:")
for a in [0, 1, -1, 0.5, -0.5]:
    for b in [0, 1, -1]:
        f = lambda x, a=a, b=b: a*x + b
        print(f"f(x) = {a}x + {b}: ", end="")
        if test_function(f, verbose=False):
            print(f"f(x) = {a}x + {b}: Passed all tests")
        else:
            print(f"f(x) = {a}x + {b}: Failed")

# Test quadratic functions f(x) = a*x^2 + b*x + c
print("\nTesting quadratic functions:")
for a in [0, 1, -1, 0.5]:
    for b in [0, 1, -1]:
        for c in [0, 1, -1]:
            f = lambda x, a=a, b=b, c=c: a*x**2 + b*x + c
            print(f"f(x) = {a}x^2 + {b}x + {c}: ", end="")
            if test_function(f, verbose=False):
                print(f"f(x) = {a}x^2 + {b}x + {c}: Passed all tests")
            else:
                print(f"f(x) = {a}x^2 + {b}x + {c}: Failed")

print("\nSpecial case testing:")
# Test f(x) = 0
f_zero = lambda x: 0
print("f(x) = 0: ", end="")
test_function(f_zero)

# Test f(x) = x
f_identity = lambda x: x
print("f(x) = x: ", end="")
test_function(f_identity)
```
