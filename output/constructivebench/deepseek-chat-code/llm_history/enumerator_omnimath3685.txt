[write_program]
This problem asks to find numbers n with exactly d digits (where d is 2021 or 2022) where:
1. All digits in n are non-zero
2. All digits in n² are non-zero
3. The product of digits of n is a perfect square
4. The product of digits of n² is a perfect square

We'll write a program to search for small examples (with much smaller d values) to identify patterns or possible candidates.

```python
import math

def is_square(num):
    if num == 0:
        return False
    root = math.isqrt(num)
    return root * root == num

def check_number(n):
    digits_n = [int(d) for d in str(n)]
    if 0 in digits_n:
        return False
    n_squared = n * n
    digits_sq = [int(d) for d in str(n_squared)]
    if 0 in digits_sq:
        return False
    
    prod_n = 1
    for d in digits_n:
        prod_n *= d
    
    prod_sq = 1
    for d in digits_sq:
        prod_sq *= d
    
    return is_square(prod_n) and is_square(prod_sq)

def search_up_to_digits(max_digits):
    for d in range(1, max_digits + 1):
        print(f"Checking {d}-digit numbers...")
        lower = 10 ** (d - 1)
        upper = 10 ** d
        
        # We'll check numbers with digit products likely to be squares
        # First check numbers with all digits equal to 1 (product is 1, which is square)
        n = int('1' * d)
        if check_number(n):
            print(f"Found candidate: {n} (all 1s)")
        
        # Check numbers with digits that multiply to squares
        # For 2 digits: 11, 14, 19, 22, 28, 33, 44, 55, 66, 77, 88, 99
        if d == 2:
            for a in range(1, 10):
                for b in range(1, 10):
                    if is_square(a * b):
                        n = 10 * a + b
                        if check_number(n):
                            print(f"Found candidate: {n}")
        
        # For 3 digits: numbers with digit products that are squares
        if d == 3:
            for a in range(1, 10):
                for b in range(1, 10):
                    for c in range(1, 10):
                        if is_square(a * b * c):
                            n = 100 * a + 10 * b + c
                            if check_number(n):
                                print(f"Found candidate: {n}")

# Search for small examples up to 3 digits
search_up_to_digits(3)
```
