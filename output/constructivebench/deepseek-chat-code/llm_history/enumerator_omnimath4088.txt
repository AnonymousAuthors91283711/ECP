[write_program]
This problem asks for the maximum product x*y*z under given constraints. To find it empirically, we'll:
1. Minimize x and y (since they have lower bounds) to maximize z
2. Calculate the product for boundary cases
3. Verify if any interior points give higher products

```python
def find_max_product():
    min_x = 20
    min_y = 40
    min_z = 1675
    total = 2015
    
    # Boundary case 1: x and y at minimum, z maximized
    x1 = min_x
    y1 = min_y
    z1 = total - x1 - y1
    product1 = x1 * y1 * z1
    
    # Boundary case 2: x at minimum, y maximized (z at minimum)
    x2 = min_x
    z2 = min_z
    y2 = total - x2 - z2
    product2 = x2 * y2 * z2
    
    # Boundary case 3: y at minimum, x maximized (z at minimum)
    y3 = min_y
    z3 = min_z
    x3 = total - y3 - z3
    product3 = x3 * y3 * z3
    
    # Compare all boundary cases
    max_product = max(product1, product2, product3)
    
    print(f"Case 1 (x={x1}, y={y1}, z={z1}): product = {product1}")
    print(f"Case 2 (x={x2}, y={y2}, z={z2}): product = {product2}")
    print(f"Case 3 (x={x3}, y={y3}, z={z3}): product = {product3}")
    print(f"Maximum product found: {max_product}")

find_max_product()
```
