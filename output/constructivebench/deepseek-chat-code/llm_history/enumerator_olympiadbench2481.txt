[write_program]
The problem asks to compute the sum of binomial probabilities for k=4 to 6 with n=6 and p=1/2. This is equivalent to calculating P(4 ≤ X ≤ 6) where X ~ Binomial(6, 0.5).

We'll write a Python program to:
1. Compute the exact rational value of this probability
2. Compute its decimal approximation
3. Verify the calculation by comparing with the sum of individual terms

The exact value can be represented as a fraction, which we'll compute using Python's fractions module.

```python
from fractions import Fraction
from math import comb

def compute_probability():
    total = Fraction(0)
    n = 6
    p = Fraction(1, 2)
    for k in range(4, 7):
        binomial = comb(n, k)
        term = Fraction(binomial, 1) * (p ** n)
        total += term
        print(f"Term k={k}: {term} (≈{float(term):.6f})")
    
    print(f"\nExact sum: {total} = {total.numerator}/{total.denominator}")
    print(f"Decimal approximation: {float(total):.6f}")

compute_probability()
```
