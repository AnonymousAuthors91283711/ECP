[write_program]
This problem involves enumerating the number of triples \((a, b, c)\) of nonnegative integers such that \(a + b + c = 300\). This is a classic stars-and-bars (combinatorial) problem, where the total count is \(\binom{300 + 3 - 1}{3 - 1} = \binom{302}{2}\).

However, to assist in conjecturing and verifying the answer through enumeration, we'll generate all solutions via triple nested loops with constraints. Since the total is 300, we can iterate \(a\) and \(b\), then determine \(c = 300 - a - b\), ensuring \(c \ge 0\).

This code lists a minimal set of solutions, counts the total, and then compares with the known formula.

```python
# Enumerate all solutions to a + b + c = 300 with nonnegative integers
total_solutions = 0
for a in range(301):
    for b in range(301 - a):
        c = 300 - a - b
        # Print each solution
        print((a, b, c))
        total_solutions += 1

# Print total count for verification
print(f"Total solutions: {total_solutions}")
# Known count based on combinatorics
expected_count = (302 * 301) // 2  # C(302, 2)
print(f"Expected count (C(302,2)): {expected_count}")
```
