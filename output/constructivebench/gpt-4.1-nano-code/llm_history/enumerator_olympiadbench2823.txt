[write_program]
This problem involves finding a common difference `d` for an arithmetic sequence and then evaluating nested function calls. 

From the conditions:
- `a(n) = 10 + (n - 1) * d`.
- `a(a(2)) = 100`.
- `a(a(a(3))) = ???` (the answer we're to approximate).

Let's analyze:
- `a(2) = 10 + (2 - 1) * d = 10 + d`.
- `a(a(2)) = a(10 + d) = 10 + ((10 + d) - 1) * d = 10 + (9 + d) * d`.

We want `a(a(2)) = 100`, thus:
`10 + (9 + d) * d = 100`.

Solve for `d`:
`(9 + d) * d = 90`  
`d^2 + 9d = 90`  
`d^2 + 9d - 90 = 0`.

Solve quadratic:
discriminant `Δ = 81 + 360 = 441`.

Square root of discriminant: `√441 = 21`.

Solutions:
`d = [-9 ± 21] / 2`.

Possible:
- `d = (12) / 2 = 6`.
- `d = (-30) / 2 = -15`.

Now test both.

For `d=6`:
- `a(2) = 10 + 6 = 16`.
- `a(16) = 10 + (16 - 1) * 6 = 10 + 15 * 6 = 10 + 90 = 100`. Correct.

For `d=-15`:
- `a(2) = 10 + (-15) = -5`.
- `a(-5) = 10 + (-5 - 1)*(-15) = 10 + (-6)*(-15) = 10 + 90 =100`. Also correct.

Next, determine `a(a(a(3)))`:

Compute `a(3)`:
- For `d=6`: `a(3) = 10 + (3 - 1)*6 = 10 + 2*6=22`.
- For `d=-15`: `a(3) = 10 + 2*(-15) = 10 - 30 = -20`.

Now, `a(a(a(3)))`:

For `d=6`:
- `a(22)= 10 + (22 - 1)*6=10 + 21*6=10+126=136`.
- `a(136)=10 + (136-1)*6=10 + 135*6=10+810=820`.
- Therefore, `a(a(a(3)))=820`.

For `d=-15`:
- `a(-20)=10 + (-20 -1)*(-15)=10 + (-21)*(-15)=10+315=325`.
- `a(325)=10 + (325-1)*(-15)=10+324*(-15)=10-4860=-4850`.
- Therefore, `a(a(a(3)))=-4850`.

Thus:
- For `d=6`, answer is 820.
- For `d=-15`, answer is -4850.

Let's write a program that enumerates these solutions explicitly.

```python
# Enumerate possible `d` values from quadratic solutions and compute `a(a(a(3)))`
# based on the calculated `d`.
d_candidates = [6, -15]
answers = []

for d in d_candidates:
    # Compute a(3)
    a3 = 10 + (3 - 1) * d
    # Compute a(a(3))
    a_a3 = 10 + (a3 - 1) * d
    # Compute a(a(a(3)))
    result = 10 + (a_a3 - 1) * d
    answers.append(result)
    print(result)
```
