[write_program]
This problem involves finding the least positive integer \( n = 1000a + 100b + 10c + d \) where the digits \( a, b, c, d \) are strictly decreasing positive integers, and the sum of four complex 13th roots of unity raised to these powers has magnitude \(\sqrt{3}\).

To approach this:
- The roots are \( e^{2\pi i / 13} \), so each power is a 13th root of unity.
- The sum involves 4 powers with decreasing digits.
- The magnitude condition is exact, so we look for sums with magnitude exactly \(\sqrt{3}\).

Given the constraints, a brute-force search over all decreasing quadruples \( a > b > c > d > 0 \) with \( a, b, c, d \leq 12 \) (since exponents mod 13) is feasible.

We will:
- Loop over all decreasing quadruples \( a, b, c, d \) in \( 1..12 \).
- For each, compute the sum of the four roots.
- Check if the magnitude matches \(\sqrt{3}\).
- If so, compute \( n = 1000a + 100b + 10c + d \), and print if it is minimal.

Because the problem asks for the least such \( n \), we will track it and print immediately to stream partial results, but only output the minimal solution at the end.

```python
import math
import cmath

# 13th primitive root of unity
omega = cmath.exp(2 * math.pi * 1j / 13)

min_n = None

# Loop over all decreasing quadruples (a > b > c > d > 0)
for a in range(12, 0, -1):
    for b in range(a - 1, 0, -1):
        for c in range(b - 1, 0, -1):
            for d in range(c - 1, 0, -1):
                sum_roots = (omega ** a) + (omega ** b) + (omega ** c) + (omega ** d)
                mag = abs(sum_roots)
                # Check if magnitude equals sqrt(3)
                if math.isclose(mag, math.sqrt(3), rel_tol=1e-9, abs_tol=1e-9):
                    n = 1000 * a + 100 * b + 10 * c + d
                    print(f"Found candidate: a={a}, b={b}, c={c}, d={d}, n={n}")
                    if (min_n is None) or (n < min_n):
                        min_n = n

# After search, print the minimal n found
if min_n is not None:
    print(f"Least n satisfying conditions: {min_n}")
else:
    print("No solution found within the search bounds.")
```
