[write_program]
The problem involves finding the number of positive natural numbers \(a > 0\) such that the quadratic equation \(x^2 - a x + a = 0\) has an integer solution \(x\). To analyze this, we note that the quadratic discriminant must be a perfect square for solutions to be integers:

\[
\Delta = a^2 - 4a
\]

which must be a perfect square, say \(k^2\). Also, \(a > 0\), and for the discriminant:

\[
a^2 - 4a = k^2
\]

we can rewrite as:

\[
a^2 - 4a - k^2 = 0
\]

which is quadratic in \(a\):

\[
a^2 - 4a - k^2 = 0
\]

The solutions for \(a\):

\[
a = \frac{4 \pm \sqrt{16 + 4k^2}}{2}
\]

Since \(a\) is integer, the discriminant inside the square root must be a perfect square:

\[
16 + 4k^2 = m^2
\]

for some integer \(m\), and:

\[
a = \frac{4 \pm m}{2}
\]

Now, \(a\) positive implies:

\[
a = \frac{4 + m}{2} > 0 \quad \text{or} \quad a = \frac{4 - m}{2} > 0
\]

which constrains \(m\). Also, \(m^2 = 16 + 4k^2 \Rightarrow m^2 - 4k^2 = 16\).

This is a difference of squares:

\[
(m - 2k)(m + 2k) = 16
\]

We can enumerate all divisor pairs of 16, as \(m - 2k\) and \(m + 2k\), then solve for \(m, k\) and consequently \(a\), counting positive \(a\).

Below is the code that enumerates possible solutions by iterating over divisor pairs of 16:

```python
# Enumerate divisor pairs of 16 to find all integer solutions for (m, k)
# The key is m^2 - 4k^2 = 16, factor as (m - 2k)(m + 2k) = 16
# For each divisor pair, solve for m, k, then for a
# Count all valid positive a

answers = set()

# Divisors of 16
for d1 in [-16, -8, -4, -2, -1, 1, 2, 4, 8, 16]:
    for d2 in [16 // d1] if d1 != 0 else []:
        # Only consider pairs (d1, d2)
        if d1 * d2 != 16:
            continue
        # m - 2k = d1, m + 2k = d2
        # So m = (d1 + d2) / 2
        # and 2k = (d2 - d1) / 2
        if (d1 + d2) % 2 != 0 or (d2 - d1) % 2 != 0:
            continue
        m = (d1 + d2) // 2
        two_k = (d2 - d1) // 2
        # For m to be integer, above implies conditions are satisfied
        # Now, a = (4 + m) / 2 or (4 - m) / 2, only if integers
        for candidate_a in [(4 + m) // 2, (4 - m) // 2]:
            if candidate_a > 0 and (4 + m) % 2 == 0 and (4 - m) % 2 == 0:
                # Check if discriminant is perfect square
                discriminant = candidate_a**2 - 4 * candidate_a
                sqrt_disc = int(discriminant**0.5)
                if sqrt_disc * sqrt_disc == discriminant:
                    # Verify solutions
                    answers.add(candidate_a)
                    print(candidate_a)

# Count of solutions satisfying the conditions
print("Total solutions for a:", len(answers))
```
