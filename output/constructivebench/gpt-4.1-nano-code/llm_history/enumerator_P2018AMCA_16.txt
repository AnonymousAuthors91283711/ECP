[write_program]
This problem involves analyzing a set of points in the real plane tied to a parameter \( a \). To assist in conjecturing the answer, I'll write a Python program that enumerates values of \( a \) (say, within a small range) and checks the number of solutions \((p_1, p_2)\) satisfying the given conditions.

Given the conditions:
- \( p = (p_1, p_2) \in \mathbb{R}^2 \)
- \( p_2 = p_1^2 - a \)
- \( p_1^2 + p_2^2 = a^2 \)

Substitute \( p_2 \):
\[ p_1^2 + (p_1^2 - a)^2 = a^2 \]
Simplify:
\[ p_1^2 + p_1^4 - 2a p_1^2 + a^2 = a^2 \]
\[ p_1^4 + (1 - 2a) p_1^2 = 0 \]

Factor:
\[ p_1^2 (p_1^2 + 1 - 2a) = 0 \]
Solutions:
- \( p_1^2 = 0 \Rightarrow p_1 = 0 \)
- \( p_1^2 = 2a - 1 \)

Since \( p_1^2 \ge 0 \),
- For \( p_1^2 = 0 \), always one \( p_1=0 \), then \( p_2 = -a \). So one solution always exists.
- For \( p_1^2 = 2a - 1 \), real solutions exist if \( 2a - 1 \ge 0 \Rightarrow a \ge 0.5 \).

Number of solutions:
- For \( a < 0.5 \): only 1 solution (from \( p_1=0 \))
- For \( a \ge 0.5 \):
  - \( p_1 = 0 \): 1 solution
  - \( p_1 = \pm \sqrt{2a - 1} \): 2 solutions if \( 2a - 1 > 0 \); 1 more solution at \( p_1= \pm 0 \) if equal

Total solutions:
- At \( a=0.5 \): 1 (for \( p_1=0 \))
- For \( a > 0.5 \): 3 solutions (signs of \( p_1 \))
  
Now, write code to verify this pattern across sampled \( a \), and identify where the count equals 3, matching the condition in the original problem.

```python
# Enumerate values of a in a small range and count solutions to the equations
# to find when the set has exactly 3 points.

import math

# Range of a to test, small and centered around the critical point 0.5
a_values = [a/10 for a in range(0, 71)]  # from 0.0 to 7.0 in steps of 0.1

answers = []

for a in a_values:
    solutions = set()
    # Solution at p1=0
    p2 = -a  # from p2 = p1^2 - a
    solutions.add(((0), p2))
    # Solutions at p1 = Â±sqrt(2a -1) if 2a -1 >=0
    if 2*a -1 >= 0:
        root = math.sqrt(2*a -1)
        for p1 in [root, -root]:
            p2 = p1**2 - a
            solutions.add((p1, p2))
    count = len(solutions)
    if count == 3:
        print(f"a = {a:.2f} yields exactly {count} solutions.")
        answers.append(a)

# Print the identified a values where exactly 3 solutions exist
print("Values of a where the set has exactly 3 points:", answers)
```
