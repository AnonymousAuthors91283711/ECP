[write_program]
This problem is from the 2021 AIME II, problem 9, involving finding pairs of integers (m, n) between 1 and 30 for which \(\gcd(2^m + 1, 2^n - 1) \neq 1\). The task is to enumerate all possible answers for such pairs, focusing on the non-trivial gcd. We're asked to generate all such pairs, perhaps to observe a pattern or conjecture the answer.

Approach:
- Enumerate all pairs (m, n) with 1 ≤ m, n ≤ 30
- For each pair, compute gcd(2^m + 1, 2^n - 1)
- If gcd > 1, output the pair, streaming answers

We'll implement efficient calculations, avoiding unnecessary complexity, and stop after enumerating all pairs within the ranges.

```python
import math

# Enumerate all pairs (m, n) with 1 ≤ m, n ≤ 30
for m in range(1, 31):
    for n in range(1, 31):
        gcd_value = math.gcd(2**m + 1, 2**n - 1)
        # Check if gcd is not 1
        if gcd_value != 1:
            print(f"m={m}, n={n}, gcd={gcd_value}")
```
