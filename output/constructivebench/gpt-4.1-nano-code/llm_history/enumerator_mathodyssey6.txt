[write_program]
The problem asks for the least natural number n such that both 3n + 1 and 5n + 1 are perfect squares. We want to find all solutions and identify the minimal one, but without hardcoding answers.

Approach:
- Iterate over natural numbers n.
- For each n, check if 3n+1 and 5n+1 are perfect squares.
- When both conditions are satisfied, print n.
- Stop after finding the first such n to identify the least.

Efficiency considerations:
- Since the problem is from a competition and small search space is expected, set a reasonable upper limit (e.g., n â‰¤ 10000).
- Use integer square root to verify perfect squares.

Here's the code:

```python
import math

# Set an upper limit for search
upper_limit = 10000

for n in range(1, upper_limit + 1):
    if (3 * n + 1)**0.5 == int((3 * n + 1)**0.5) and (5 * n + 1)**0.5 == int((5 * n + 1)**0.5):
        print(n)
        break  # found the minimal n
```
