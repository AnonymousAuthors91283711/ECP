[write_program]
The problem asks to find all natural numbers \( n \) such that \( \phi(n) = 2002^2 - 1 \). First, compute the target value:

\[ 2002^2 - 1 = (2002)^2 - 1 = (2002 - 1)(2002 + 1) = 2001 \times 2003 .\]

We aim to enumerate possible \( n \) with \( \phi(n) = 2001 \times 2003 \).

Since \(\phi(n)\) for a product of distinct primes is multiplicative, and for prime \( p \), \(\phi(p) = p - 1\), we can find primes \( p \) with \( p - 1 \) dividing our target or examine potential factorizations for \( n \).

To efficiently find solutions, test small candidate \( n \) with \(\phi(n)\) matching the value, or factor the target into possible prime power forms, then test.

```python
# Python program to enumerate possible n with phi(n) = 2001 * 2003
# 2002^2 - 1 = 2001 * 2003, factorization gives prime candidates p where p-1 divides target.
# For simplicity, we'll test n up to some small bounds to find candidates.

import math

target = 2002**2 - 1
print(f"Target phi value: {target}")

# Function to compute phi(n) for small n
def phi(n):
    result = n
    p = 2
    while p * p <= n:
        if n % p == 0:
            while n % p == 0:
                n //= p
            result -= result // p
        p += 1 if p == 2 else 2
    if n > 1:
        result -= result // n
    return result

# For small n, check if phi(n) equals target
for n in range(1, 20000):
    if phi(n) == target:
        print(f"Found n = {n} with phi(n) = {target}")
```
