[write_program]
The problem involves positive integers \(A, R, M, L\) satisfying the equations:

\[
A^2 + R^2 = 20 \\
M^2 + L^2 = 10
\]

with all being positive, and asks to compute \(A \times R \times M \times L\).

Given the small sums, we can brute-force candidate positive integers for \(A, R\) and \(M, L\) within reasonable limits:

- Since \(A^2 + R^2 = 20\), and both are positive integers, possible pairs are:

  \[
  (A, R) \in \{(2, 4), (4, 2), ( \text{if } (1, \ldots) )\}
  \]
  
  Let's verify candidates for \(A, R\) (since \(1^2=1, 2^2=4, 3^2=9, 4^2=16\)):
  
  For \(A^2+R^2=20\):

  - \(A=2\): \(4 + R^2=20 \Rightarrow R^2=16 \Rightarrow R=4\)
  - \(A=4\): \(16 + R^2=20 \Rightarrow R^2=4 \Rightarrow R=2\)

- Similarly for \(M, L\) with sum 10:

  - \(M=1\): \(1 + L^2=10 \Rightarrow L^2=9 \Rightarrow L=3\)
  - \(M=3\): \(9 + L^2=10 \Rightarrow L^2=1 \Rightarrow L=1\)

Thus, the solutions for \((A,R)\) are \((2,4)\) and \((4,2)\), and for \((M,L)\) are \((1,3)\) and \((3,1)\).

Possible pairs:

\[
(2,4) \text{ with } (1,3) \Rightarrow 2 \times 4 \times 1 \times 3 = 24 \\
(2,4) \text{ with } (3,1) \Rightarrow 2 \times 4 \times 3 \times 1 = 24 \\
(4,2) \text{ with } (1,3) \Rightarrow 4 \times 2 \times 1 \times 3 = 24 \\
(4,2) \text{ with } (3,1) \Rightarrow 4 \times 2 \times 3 \times 1 = 24
\]

All yield \(24\).

```python
# Enumerate possible solutions based on sums of squares
possible_A_R = [(2,4), (4,2)]  # from A^2+R^2=20
possible_M_L = [(1,3), (3,1)]  # from M^2+L^2=10

# Collect results
results = set()

for A, R in possible_A_R:
    for M, L in possible_M_L:
        product = A * R * M * L
        print(product)  # Stream the answer as asked
        results.add(product)

# Answer is constant 24 for all solutions; no further extremization needed.
abbrev_olympiadbench2922_answer = 24
```
