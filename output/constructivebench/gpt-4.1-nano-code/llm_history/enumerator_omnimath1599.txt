[write_program]
This problem asks us to find \(\cos(A-B)\) given:
\[
\sin A + \sin B = 1,\quad \cos A + \cos B = \frac{3}{2}.
\]
We can approach this by parametrizing \(A\) and \(B\) and searching for solutions that satisfy these equations, then compute \(\cos(A-B)\). As direct algebraic solving might be complex, we'll sample a small domain of \(A, B \in [0, 2\pi)\) and identify candidate solutions.

Here's the Python program that enumerates pairs \((A,B)\), checks the conditions within a tolerance, then outputs \(\cos(A - B)\). It searches over a fine grid to approximate solutions and finds the \(\cos(A - B)\) values corresponding to candidates.

```python
import numpy as np

# Set sampling resolution
num_points = 1000
A_vals = np.linspace(0, 2*np.pi, num_points)
B_vals = np.linspace(0, 2*np.pi, num_points)

# Tolerance for checking equations
tol = 1e-2

# List to store candidate solutions for cos(A - B)
results = []

for A in A_vals:
    sinA = np.sin(A)
    cosA = np.cos(A)
    for B in B_vals:
        sinB = np.sin(B)
        cosB = np.cos(B)
        sum_sin = sinA + sinB
        sum_cos = cosA + cosB
        if abs(sum_sin - 1) < tol and abs(sum_cos - 1.5) < tol:
            # Compute cos(A - B)
            cos_diff = np.cos(A - B)
            print(cos_diff)  # stream the answer
```
