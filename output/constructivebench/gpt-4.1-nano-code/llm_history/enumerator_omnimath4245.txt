[write_program]
This problem involves analyzing two 2-digit numbers \(a = 10c + d\) and \(b = 10d + c\), with single-digit \(c, d\). The key equation is:

\[
a \times (10d + c) = b \times (10c + d)
\]

which simplifies to:

\[
(10c + d)(10d + c) = (10d + c)(10c + d)
\]

Notice that the two sides are symmetric, so this equation simplifies to an identity unless more restrictions are given. To find all solutions, we can systematically explore all digit pairs \(c, d\) where \(0 \leq c, d \leq 9\), with the constraints that \(a, b\) are two-digit numbers (so \(c, d \neq 0\)).

We write a Python program that enumerates all valid digit pairs \(c, d\), constructs \(a, b\), tests the condition, and outputs solutions immediately as they are found.

```python
# Enumerate all pairs of digits c, d satisfying the constraints
# and check the given equation. Print solutions immediately.
for c in range(1, 10):
    for d in range(1, 10):
        a = 10 * c + d
        b = 10 * d + c
        # Avoid division by zero, but here no division occurs
        lhs = a * (10 * d + c)
        rhs = b * (10 * c + d)
        if lhs == rhs:
            print((a, b))
```

This code tests all digit pairs \(c, d\) with \(1 \leq c, d \leq 9\), constructs \(a, b\), and outputs pairs where the equation holds. This approach ensures all solutions are found and streamed immediately.
