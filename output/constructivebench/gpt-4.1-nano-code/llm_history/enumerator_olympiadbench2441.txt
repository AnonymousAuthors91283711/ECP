[write_program]
The problem asks to find the number of integers n between 1 and 300 inclusive such that n is divisible by 3 or 5, but not divisible by 10 or 15. We need to enumerate all such n to determine how many satisfy these conditions, then provide that count.

Conditions:
- 1 ≤ n ≤ 300
- (3 ∣ n or 5 ∣ n)
- and not (10 ∣ n or 15 ∣ n)

Note:
- multiples of 10 are multiples of 2 and 5; again, for 15, multiples of 3 and 5.
- Since 10 ∣ n ↔ 10 divides n, then such n are multiples of 10.
- Similarly, 15 divides n for multiples of 15.
- The ultimate goal: count n satisfying all conditions.

Let's enumerate candidates, check conditions, and count matches.

```python
# Count and list numbers n in [1, 300] satisfying:
# (n divisible by 3 or 5) and not divisible by 10 or 15
count = 0
for n in range(1, 301):
    if (n % 3 == 0 or n % 5 == 0) and not (n % 10 == 0 or n % 15 == 0):
        print(n)  # print valid n immediately
        count += 1

print("Total count:", count)
```
