[write_program]
The problem involves finding the minimal (or least) value of the expression \((a - b) * (b - c) * (c - d) * (d - a)\) for real numbers \(a, b, c, d\) satisfying \(a^2 + b^2 + c^2 + d^2 = 1\). To explore possible candidate values (especially minimal ones), we can enumerate all quadruples \((a, b, c, d)\) where each variable takes on a small set of sample values, compute the expression, and collect the minimal result uncovered.

This approach aims to produce candidate answers, which can then be analyzed or used as conjectures for the true minimal value.

```python
import itertools
import math

# Small sample points on the sphere: values from -1 to 1, normalized
sample_points = [-1, -0.5, 0, 0.5, 1]

min_value = float('inf')
candidates = []

# Generate all quadruples (a, b, c, d) with sample points
for a, b, c, d in itertools.product(sample_points, repeat=4):
    norm = math.sqrt(a**2 + b**2 + c**2 + d**2)
    # Only consider points on or close to the sphere of radius 1
    if abs(norm - 1) < 1e-9:
        value = (a - b) * (b - c) * (c - d) * (d - a)
        print(f"Sample ({a:.2f}, {b:.2f}, {c:.2f}, {d:.2f}) -> value = {value:.4f}")
        if value < min_value:
            min_value = value
            candidates = [(a, b, c, d, value)]

# Output the minimal candidate(s)
print("\nCandidate minimal values found:")
for c in candidates:
    a, b, c_, d, val = c
    print(f"({a:.2f}, {b:.2f}, {c_:.2f}, {d:.2f}) with value {val:.4f}")

# Set the approximate minimal value found as an answer
print(f"\nEstimated minimal value: {min_value:.4f}")
```
