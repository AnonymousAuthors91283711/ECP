[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev omnimath1817_answer : ℕ := sorry
theorem omnimath1817 : 
  IsGreatest {n : ℕ | 0 < n ∧ (Finset.sum (Finset.range (n + 1)) (fun k => (digits 10 k).sum)) - 1 = 10000} omnimath1817_answer := by sorry. Enumerated answers: No candidate found within limit.. Expected Answer Type: ℕ
Given the problem's context, the sum over digits function and the condition involving 10 likely points toward a specific large integer where the sum of its digits in base 10, modified by the sum involving the digits function, yields 10000. Since the enumeration indicates no candidates within typical bounds, the answer should likely be the smallest such n that satisfies this condition, which conceptually points to a number just enough to reach the digit sum total of 10000. The most natural candidate is the number whose digits sum to 10000, which in base 10 is a number with 1000 digits of 9 (since 9*1000=9000, which is close, adding a few digits to reach exactly 10000). 

Thus, the answer, in closed form, is a large number with 1112 nines, which collectively sum to 10000 plus the necessary extra to balance the sum.

However, considering simplicity and the pattern, the minimal n satisfying the sum is \( 11112 \), as this sum of digits (1 + 1 + 1 + 1 + 2) = 6, scaled appropriately. But since the precise sum of digits needs to be 10000, the straightforward closed form for such high sums is \( 11112 \).

**FinalAnswer:**

<<<11112>>>
