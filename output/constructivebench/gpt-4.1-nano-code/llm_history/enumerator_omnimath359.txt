[write_program]
This problem involves large integer calculations of the form:  
\[ (2011 \times 20122012 \times 201320132013) - (2013 \times 20112011 \times 201220122012) \]

Given the similarity between the terms, it suggests potential algebraic simplification. To better understand, I will compute the two huge products explicitly and then subtract, checking for any pattern or potential simplification.

This code explicitly calculates both large products and their difference, printing the intermediate products for verification. It avoids hardcoding, and since the numbers are fixed, it directly computes the results efficiently.

```python
# Calculate the large products directly
def main():
    # First large product
    prod1 = 2011 * 20122012 * 201320132013
    print(f"First product: {prod1}")
    # Second large product
    prod2 = 2013 * 20112011 * 201220122012
    print(f"Second product: {prod2}")
    # Final difference
    result = prod1 - prod2
    print(f"Difference: {result}")
    # Output the answer
    print(f"Answer: {result}")

if __name__ == "__main__":
    main()
```
