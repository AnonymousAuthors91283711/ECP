[write_program]
The problem involves summing binomial coefficients multiplied by a power of 1/2 for k ≥ 4, specifically from 0 to 8. The sum simplifies since terms for k < 4 are zero and for k ≥ 4 are given by (choose 8 k) * (1/2)^8. The total sum is the tail sum of a Binomial distribution with p = 1/2.

Because the sum is from k = 4 to 8, we can explicitly compute the binomial coefficients for n=8, then sum the relevant terms. The key is to generate all binomial coefficients for k=4..8, multiply each by (1/2)^8, and output each intermediate result to help with conjecture.

```python
from math import comb

# Parameters
n = 8
p = 1/2
tail_start = 4

# Compute the total sum by summing from k=4 to 8
for k in range(tail_start, n + 1):
    coeff = comb(n, k)
    term = coeff * (p ** n)
    print(f"k={k}: C({n},{k})={coeff} * (1/2)^{n} = {term}")

# Sum over k=4..8 for verification
total_sum = sum(comb(n, k) * (p ** n) for k in range(tail_start, n + 1))
print(f"Total sum from k=4 to 8: {total_sum}")
```
