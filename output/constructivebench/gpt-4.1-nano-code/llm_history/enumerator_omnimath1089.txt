[write_program]
The problem involves counting the number of distinct multisets of size 3 with positive integers summing to 2002. Since the order does not matter, this is equivalent to counting the solutions to x + y + z = 2002 with x, y, z ≥ 1, where (x,y,z) are unordered.

We can systematically generate all solutions with x ≤ y ≤ z to avoid duplicates. For each x from 1 to 2000, y from x to (2002 - x - 1), and z can be derived as 2002 - x - y, ensuring z ≥ y ≥ x.

Below is a Python program that enumerates all such multisets, prints each one immediately, and counts the total number of solutions.

```python
# Enumerate all unordered triples (x,y,z) with x ≤ y ≤ z, x + y + z = 2002, x,y,z ≥ 1
count = 0
for x in range(1, 2001):
    for y in range(x, 2002 - x):
        z = 2002 - x - y
        if z >= y:  # ensure y ≤ z
            print({x, y, z})  # print as a set to reflect unordered nature
            count += 1
print("Total number of solutions:", count)
```
