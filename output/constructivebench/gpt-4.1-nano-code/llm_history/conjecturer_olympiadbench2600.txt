[conjecture_answer] Formal Problem Statement: import Mathlib

open List

abbrev olympiadbench2600_answer : ℕ := sorry
theorem olympiadbench2600 :
  Fintype.card {l : List String // 
    l.Permutation ["Bobby", "Peter", "Greg", "Cindy", "Jan", "Marcia"] ∧
    l.indexOf "Greg" < l.indexOf "Peter" ∧
    l.indexOf "Peter" < l.indexOf "Bobby" ∧
    l.indexOf "Marcia" < l.indexOf "Jan" ∧
    l.indexOf "Jan" < l.indexOf "Cindy"} = olympiadbench2600_answer := by sorry. Enumerated answers: Valid permutation #1: ('Greg', 'Peter', 'Bobby', 'Marcia', 'Jan', 'Cindy')
Valid permutation #2: ('Greg', 'Peter', 'Marcia', 'Bobby', 'Jan', 'Cindy')
Valid permutation #3: ('Greg', 'Peter', 'Marcia', 'Jan', 'Bobby', 'Cindy')
Valid permutation #4: ('Greg', 'Peter', 'Marcia', 'Jan', 'Cindy', 'Bobby')
Valid permutation #5: ('Greg', 'Marcia', 'Peter', 'Bobby', 'Jan', 'Cindy')
Valid permutation #6: ('Greg', 'Marcia', 'Peter', 'Jan', 'Bobby', 'Cindy')
Valid permutation #7: ('Greg', 'Marcia', 'Peter', 'Jan', 'Cindy', 'Bobby')
Valid permutation #8: ('Greg', 'Marcia', 'Jan', 'Peter', 'Bobby', 'Cindy')
Valid permutation #9: ('Greg', 'Marcia', 'Jan', 'Peter', 'Cindy', 'Bobby')
Valid permutation #10: ('Greg', 'Marcia', 'Jan', 'Cindy', 'Peter', 'Bobby')
Valid permutation #11: ('Marcia', 'Greg', 'Peter', 'Bobby', 'Jan', 'Cindy')
Valid permutation #12: ('Marcia', 'Greg', 'Peter', 'Jan', 'Bobby', 'Cindy')
Valid permutation #13: ('Marcia', 'Greg', 'Peter', 'Jan', 'Cindy', 'Bobby')
Valid permutation #14: ('Marcia', 'Greg', 'Jan', 'Peter', 'Bobby', 'Cindy')
Valid permutation #15: ('Marcia', 'Greg', 'Jan', 'Peter', 'Cindy', 'Bobby')
Valid permutation #16: ('Marcia', 'Greg', 'Jan', 'Cindy', 'Peter', 'Bobby')
Valid permutation #17: ('Marcia', 'Jan', 'Greg', 'Peter', 'Bobby', 'Cindy')
Valid permutation #18: ('Marcia', 'Jan', 'Greg', 'Peter', 'Cindy', 'Bobby')
Valid permutation #19: ('Marcia', 'Jan', 'Greg', 'Cindy', 'Peter', 'Bobby')
Valid permutation #20: ('Marcia', 'Jan', 'Cindy', 'Greg', 'Peter', 'Bobby')
Total number of valid permutations: 20. Expected Answer Type: ℕ
<<<20>>>