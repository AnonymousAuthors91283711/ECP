[write_program]
The problem appears to involve pairs of positive integers `(a, b)` satisfying certain conditions related to their gcd and lcm. The goal is to find all such pairs or potential candidates, particularly those that meet the equations:
- \( a > 0 \), \( b > 0 \)
- \( a + b + (\gcd a b)^2 = \operatorname{lcm} a b \)
- \( \operatorname{lcm} a b = 2 \times \operatorname{lcm} (a - 1, b) \)

Since the conditions are quite specific, and the search space is large, we will:
- Fix small sample values for `a` and `b`.
- Compute gcd and lcm.
- Check the equations.
- Output all candidates fully, streaming results as soon as they are found.

Here's a Python script that enumerates small pairs `(a, b)` with `a, b` from 1 to 20 (small enough for quick computation and capturing possible solutions), and prints those satisfying the given conditions:

```python
# Enumerate pairs (a, b) with small bounds to find solutions satisfying the conditions
import math

def enumerate_pairs():
    for a in range(1, 21):
        for b in range(1, 21):
            gcd_ab = math.gcd(a, b)
            lcm_ab = abs(a * b) // gcd_ab
            # Compute lcm for (a-1, b) if a > 1
            if a > 1:
                gcd_a1_b = math.gcd(a - 1, b)
                lcm_a1_b = abs((a - 1) * b) // gcd_a1_b
            else:
                # For a=1, a-1=0, treat gcd and lcm with 0 (which is simple: gcd(0, b)=b, lcm(0,b)=0)
                gcd_a1_b = b
                lcm_a1_b = 0
            # Check the conditions
            if a > 0 and b > 0:
                sum_condition = a + b + gcd_ab ** 2
                lcm_condition = lcm_ab
                # Check if the first condition holds
                if sum_condition == lcm_condition:
                    # Check the second condition
                    if lcm_ab == 2 * lcm_a1_b:
                        print(f"Pair: (a={a}, b={b}), gcd={gcd_ab}, lcm={lcm_ab}")
                        yield (a, b)

if __name__ == "__main__":
    for candidate in enumerate_pairs():
        pass  # streaming output as candidates are found
```
