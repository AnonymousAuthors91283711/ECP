[write_program]
This problem asks for the set of primes \( p \) for which there exists a *unique* element \( a \) in the finite field \( \mathbb{Z}/p\mathbb{Z} \) satisfying the equation \( a^3 - 3a + 1 \equiv 0 \pmod{p} \). Our goal is to find all such primes \( p \).

Approach:
- For small primes \( p \), enumerate all \( a \in \mathbb{Z}_p \) (from 0 to p-1).
- Check the solutions of the polynomial \( a^3 - 3a + 1 \equiv 0 \pmod{p} \).
- Count solutions for each prime \( p \).
- Collect primes where exactly one solution exists.

This will help conjecture which primes satisfy the condition.

```python
# Enumerate small primes and test the polynomial for solutions
from math import isqrt

def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

primes = [p for p in range(2, 50) if is_prime(p)]  # small sample of primes
result_primes = []

for p in primes:
    solutions = []
    for a in range(p):
        val = (a**3 - 3*a + 1) % p
        if val == 0:
            solutions.append(a)
    # Check if exactly one solution
    if len(solutions) == 1:
        print(f"Prime p={p} with solution a={solutions[0]}")
        result_primes.append(p)

# Output all primes satisfying the condition
print("Primes with exactly one solution:", result_primes)
```
