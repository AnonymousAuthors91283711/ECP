[write_program]
Let's analyze the problem step by step. We are given 8 variables `A, B, C, D, E, F, G, H` and 6 equations with a fixed value `C = 5`. The equations involve sums of triplets, all equal to 30, and we want to find the value of `A + H`.

The key equations:
- `A + B + C = 30`
- `B + C + D = 30`
- `C + D + E = 30`
- `D + E + F = 30`
- `E + F + G = 30`
- `F + G + H = 30`

Given that `C = 5`, let’s use these equations to express all variables in terms of `A` and some pattern discovered by the relations. We will then enumerate possible solutions by choosing a small range for `A`, since the constraints are symmetric, and compute corresponding `H`.

**Summary of logic:**
- From `A + B + 5 = 30`, so `B = 25 - A`.
- From `B + 5 + D = 30`, so `D = 25 - B = 25 - (25 - A) = A`.
- From `D + E + 5 = 30`, so `E = 30 - D - 5 = 20 - A`.
- From `E + F + G = 30`, so `F + G = 30 - E = 10 + A`.
- From `F + G + H = 30`, so `H = 30 - F - G = 30 - (F + G) = 20 - A`.

Note that:
- `D = A`
- `E = 20 - A`
- `H = 20 - A`
- `F + G = 10 + A`

Since `F + G = 10 + A`, and `F, G` are non-negative integers (`ℕ`), we can enumerate all pairs `(F, G)` such that:
- `F, G ≥ 0`
- `F + G = 10 + A`

And for each pair, we get different values; but `H` depends only on `A`, and for the solution to be valid, all variables must be non-negative:
- `A ≥ 0`
- `E = 20 - A ≥ 0 ⇒ A ≤ 20`
- `H = 20 - A ≥ 0 ⇒ A ≤ 20`
- For `F`, `G`: since `F, G ≥ 0` and `F + G = 10 + A`, with `A ≥ 0`, so maximum `A` is 20 (to keep all variables ≥ 0).

We will enumerate `A` from 0 to 20, for each compute `H = 20 - A`, and list solutions.

```python
# Enumerate possible values of A from 0 to 20
for A in range(21):
    H = 20 - A  # Derived from equations
    F_plus_G = 10 + A  # Since F + G = 10 + A
    # Find all pairs (F, G) with F,G >= 0 and F+ G = F_plus_G
    for F in range(F_plus_G + 1):
        G = F_plus_G - F
        # Check non-negativity (F,G >= 0) is guaranteed by loop
        print(f"A = {A}, H = {H}, F = {F}, G = {G}")
```
