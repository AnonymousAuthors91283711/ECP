[write_program]
The problem involves computing the definite integral of a piecewise function over the interval [0, 2]. To approximate the integral, we can discretize the interval into small steps and sum the function values, paying attention to the piecewise conditions. Since the function is piecewise linear on subintervals, we can directly evaluate the integrals over each segment.

The function:
- is 50 * (1/2) = 25 over [0, 0.25]
- decreases linearly from 25 to 0 over [0.25, 0.5]
- is 0 over [0.5, 2]

We'll approximate the integral by summing these parts precisely:

```python
# Approximate the integral of the given piecewise function over [0, 2]
# Function details:
# f(t) = 50 if 0 ≤ t ≤ 0.25
# f(t) = 50 - 60*(t - 0.25) if 0.25 < t ≤ 0.5
# f(t) = 0 if t > 0.5

# Compute integrals over each relevant interval
# For [0, 0.25], function is constant
area_first = 25 * 0.25

# For [0.25, 0.5], function decreases linearly from 25 to 0
# Linear function: f(t) = 50 - 60*(t - 0.25)
# Integral over [a, b]: (average value) * (b - a)
# Average height: (f(a) + f(b)) / 2 = (25 + 0) / 2 = 12.5
area_second = 12.5 * (0.5 - 0.25)

# For [0.5, 2], function is 0, so area is 0
area_rest = 0

# Total integral multiplied by 1/2 as per the integrand
total_area = (area_first + area_second + area_rest) * (1/2)

print("Approximate integral:", total_area)
```
