[write_program]
This problem involves a double sum over pairs (a, b) where a and b are integers from 1 to 17, with specific conditions on the sum a + b equal to 12 or 20. The function p(n) takes values based on n: 1/2 for n=17, 1/32 for 1 ≤ n ≤ 16, and 0 otherwise.

We need to compute:
\[
\sum_{a=1}^{17} \sum_{b=1}^{17} \text{if } (a + b = 12 \text{ or } a + b = 20) \text{ then } p(a) p(b) \text{ else } 0
\]

To do this, we will:
- Enumerate all pairs (a, b) with a, b between 1 and 17.
- For each pair, check if a + b = 12 or 20.
- Sum up p(a)*p(b) for these pairs.
- Since we only need to find the sum, we will directly compute and output the result.

Below is a Python script that carries out this enumeration efficiently, considering only relevant pairs based on the sums:

```python
# Enumerate all pairs (a, b) with a and b from 1 to 17
# Check if sum is 12 or 20
# Compute p(a) and p(b) based on rules
# Sum the products for qualifying pairs
sum_total = 0.0

def p(n):
    if n == 17:
        return 0.5
    elif 1 <= n <= 16:
        return 1/32
    else:
        return 0

for a in range(1, 18):
    for b in range(1, 18):
        s = a + b
        if s == 12 or s == 20:
            sum_total += p(a) * p(b)

print(sum_total)
```
