[write_program]
The problem involves a degree-10 polynomial with symmetric coefficients, suggesting possible roots or sums of roots with special structure. To assist with conjecturing, we'll numerically approximate roots of the polynomial and verify the sum of their squares. Enumerating roots numerically will provide insight into the exact value of the sum of squares.

The polynomial:
\[ p(x) = 4x^{10} - 7x^9 + 5x^8 - 8x^7 + 12x^6 - 12x^5 + 12x^4 - 8x^3 + 5x^2 - 7x + 4. \]

The approach:
- Use numpy to find roots of the polynomial coefficients.
- Compute the sum of squares of these roots.
- Immediately print each root and the sum for partial results.
- Handle both real and complex roots.

This will help form a conjecture about the exact sum of the roots squared.

```python
import numpy as np

# Polynomial coefficients in decreasing order
coeffs = [4, -7, 5, -8, 12, -12, 12, -8, 5, -7, 4]

# Find roots numerically
roots = np.roots(coeffs)

# Stream roots and accumulate sum of squares
sum_squares = 0
for i, z in enumerate(roots):
    print(f"Root {i+1}: {z}")
    sum_squares += z**2
    print(f"Partial sum of squares: {sum_squares}")

# Final sum of squares
print(f"Total sum of roots squared: {sum_squares}")
```
