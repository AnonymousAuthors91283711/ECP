[write_program]
This problem involves solving a system of two equations:
1. \( x^2 = x + y + 4 \)
2. \( y^2 = y - 15x + 36 \)

We need to find all solutions \((x, y)\) satisfying both and then sum the \(x\)-coordinates of these solutions.

---

First, from the first equation:
\[ y = x^2 - x - 4 \]

Substitute into the second:
\[ y^2 = y - 15x + 36 \]
becomes
\[ (x^2 - x - 4)^2 = (x^2 - x - 4) - 15x + 36 \]

Simplify:
```python
# We will symbolically solve for x using substitution and then find y
# and sum all such x's.

# The approach:
# 1. Express y in terms of x.
# 2. Plug into the second equation to get a polynomial in x.
# 3. Find roots of this polynomial.
# 4. For each root, compute y.
# 5. Sum all x-values.

import sympy as sp

# Define x as symbol
x = sp.symbols('x')

# y in terms of x
y_expr = x**2 - x - 4

# Left side of second equation
lhs = y_expr**2

# Right side of second equation
rhs = y_expr - 15*x + 36

# Form the equation
equation = sp.Eq(lhs, rhs)

# Expand and simplify
eq = sp.simplify(equation)

# Convert to polynomial in x
polynomial = sp.expand(lhs - rhs)

# Collect coefficients
poly = sp.Poly(polynomial, x)

# Find roots numerically
roots = sp.solve(equation, x)

# Filter real solutions (since numeric roots may be complex)
real_roots = [r.evalf() for r in roots if sp.im(r) == 0]

# For each real root, compute y and sum x
x_values = []
for root in real_roots:
    val_x = float(root)
    val_y = float(y_expr.subs(x, val_x))
    print(f"Solution: x={val_x}, y={val_y}")
    x_values.append(val_x)

# Sum of all x-coordinates
total_sum = sum(x_values)
print("Total sum of x-coordinates:", total_sum)
```
