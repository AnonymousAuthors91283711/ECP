[write_program]
The problem asks to find the smallest natural number n > 10 such that the sum of digits of n in base 17 equals the sum of digits of n in base 10. We need to enumerate candidate numbers starting just above 10, compare their digit sums in both bases, and identify the minimal such number.

We'll:
- Enumerate n starting at 11.
- Compute sumDigits in base 17 and base 10.
- When they are equal, print n.
- Stop when the minimal such number is found (since the theorem states it's the least).

```python
# We define a helper function to compute the sum of digits of n in a given base.
def sum_digits(base, n):
    total = 0
    while n > 0:
        total += n % base
        n //= base
    return total

# Starting from n=11, check each number for the condition.
n = 11
found = False
while not found and n <= 100000:  # upper limit to prevent infinite loop
    sum_base10 = sum_digits(10, n)
    sum_base17 = sum_digits(17, n)
    if sum_base10 == sum_base17:
        print(n)
        found = True
    n += 1
```
