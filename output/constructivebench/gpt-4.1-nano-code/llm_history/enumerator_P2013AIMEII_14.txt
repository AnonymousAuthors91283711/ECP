[write_program]
This problem involves summing a function \( F(n) \) over the range 20 to 100 and then finding the result modulo 1000. Since the function \( F(n) \) is not specified, I will assume a common important sequence associated with such contests, for example, Fibonacci numbers, as they often appear in these problems. 

The task: compute \(\sum_{n=20}^{100} F(n)\) mod 1000, where \(F(n)\) is the \(n\)-th Fibonacci number. We'll:
- Enumerate Fibonacci numbers directly,
- Sum from n=20 to 100,
- Output the sum modulo 1000.

Given these assumptions, we can generate Fibonacci numbers iteratively, sum the required range, and output the result.

```python
# Enumerate Fibonacci numbers from F(20) to F(100), sum, then mod 1000
def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

total = 0
for n in range(20, 101):
    total += fibonacci(n)
    total %= 1000  # Keep it manageable

print(total % 1000)
```
