[write_program]
The problem asks to find the minimal natural number \( n > 1729 \) for which there exist four positive integers \( a, b, c, d \) such that:
- \( a^3 + b^3 = n \),
- \( c^3 + d^3 = n \),
- \( a \neq c \) and \( a \neq d \),
- and all are positive integers.

Historically, these are related to the smallest numbers that can be expressed as the sum of two cubes in two different ways, known as taxicab numbers. The famous example is 1729, which can be expressed as \( 1^3 + 12^3 \) and \( 9^3 + 10^3 \). Since the problem is asking for \( n > 1729 \), the next such number is known as the Hardyâ€“Ramanujan number 4104, which can be expressed as:
- \( 2^3 + 16^3 = 4104 \),
- \( 9^3 + 15^3 = 4104 \).

Note that:
- Both representations are in positive integers.
- The pairs are different in terms of the values of \( a, b, c, d \),
- \( a \neq c \), satisfying the condition.

Here's a small enumeration to confirm the minimal next such number.
```python
# Search for the smallest number greater than 1729 that can be written as the sum of two cubes in two different ways,
# with the pairs having distinct values.

LIMIT = 50  # Small limit for enumeration, since the minimal next number is known to be 4104, but we can verify up to a point.
cubes = {i: i**3 for i in range(1, LIMIT+1)}
sum_of_two = {}

# Map sums of two cubes to pairs (a,b)
for a in range(1, LIMIT+1):
    for b in range(a+1, LIMIT+1):
        s = cubes[a] + cubes[b]
        if s > 1729:
            if s not in sum_of_two:
                sum_of_two[s] = [(a, b)]
            else:
                sum_of_two[s].append((a, b))

# Find the minimal number > 1729 with at least two distinct pairs (a,b)
for s in sorted(sum_of_two.keys()):
    if s > 1729 and len(sum_of_two[s]) >= 2:
        pairs = sum_of_two[s]
        # Check if pairs have distinct elements (a != c), (a != d), etc.
        for (a1, b1) in pairs:
            for (a2, b2) in pairs:
                if set([a1, b1]).isdisjoint({a2, b2}):
                    # Found minimal n
                    print(f"Possible answer: n = {s}")
                    print(f"Pairs: ({a1}^3 + {b1}^3) and ({a2}^3 + {b2}^3)")
                    print(f"Verification: {a1 != a2 and a1 != b2 and b1 != a2 and b1 != b2}")
                    # Exit after first valid solution
                    exit()
```
