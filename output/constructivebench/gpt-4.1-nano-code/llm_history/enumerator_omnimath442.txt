[write_program]
This problem asks to count the number of positive integers (a, b, c) such that 6a + 10b + 15c = 3000. To assist in conjecturing and proving, we'll generate all solutions for small positive integers and count them, printing each solution immediately when found. We will restrict the search bounds based on maximum feasible values for each variable to keep computations efficient.

Since all variables are positive, minimally start from 1, and for each variable, calculate bounds for the other variables accordingly. We choose upper bounds based on dividing 3000 by the smallest coefficient (6), but also refine bounds based on each variable's contribution.

```python
# Enumerate all positive integer solutions (a, b, c) to 6a + 10b + 15c = 3000
# We'll iterate over possible c, then over b, then compute a directly.

max_c = 3000 // 15  # maximum c possibly up to 200
count = 0

for c in range(1, max_c + 1):
    remaining_after_c = 3000 - 15 * c
    if remaining_after_c <= 0:
        continue
    max_b = remaining_after_c // 10
    for b in range(1, max_b + 1):
        remaining_after_b = remaining_after_c - 10 * b
        if remaining_after_b <= 0:
            continue
        # a must satisfy 6a = remaining_after_b
        if remaining_after_b % 6 == 0:
            a = remaining_after_b // 6
            if a > 0:
                print((a, b, c))
                count += 1

print("Total solutions:", count)
```
