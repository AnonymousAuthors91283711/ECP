[write_program]
This problem involves finding the number of non-negative integers \(k\) such that there exist integers \(c, d\) with \(c + d = 2000\) and \(c = k \cdot d\). 

Analyzing the conditions:
- \( c = k \cdot d \)
- \( c + d = 2000 \)

Substitute \( c = k d \) into the second:
\[ k d + d = 2000 \implies d (k + 1) = 2000 \]

Since \(d\), \(k\) are integers, and \(k \geq 0\), we have:
- \( d \) is a divisor of 2000
- \( d \neq 0 \) (as \(c, d\) are integers; \(d = 0\) gives \(c=0\), but then \( c + d = 0 + 0 = 0 \neq 2000 \))
- \( d \neq -\infty \), but since \(d\) divides 2000, and \(k \geq 0\):

From \(d (k+1) = 2000\):
- \(k + 1 = \frac{2000}{d}\)
- \(k = \frac{2000}{d} - 1\)

We need \(k \geq 0 \Rightarrow \frac{2000}{d} - 1 \geq 0 \Rightarrow \frac{2000}{d} \geq 1 \Rightarrow d \leq 2000\)

Also, since \(d\) is an integer divisor of 2000, and \(k \geq 0\), \(d\) must be a positive divisor of 2000:

- For each positive divisor \( d \) of 2000:
  - \(k = \frac{2000}{d} - 1 \geq 0\)

Therefore, the number of such \(k\) is equal to the number of positive divisors \(d\) of 2000 that satisfy \(d \leq 2000\), which is all positive divisors of 2000.

Hence:

Number of solutions \(= |\{ d \in \mathbb{N} : d \mid 2000, d \leq 2000 \} | \)

Which is all positive divisors of 2000.

Let's enumerate all positive divisors of 2000.

Prime factorization:
\[ 2000 = 2^4 \times 5^3 \times 2^0 \]
Actually, more precisely:
\[ 2000 = 2^4 \times 5^3 \]
since \(2^4=16\), \(5^3=125\),
\[ 16 \times 125 = 2000 \].

Number of divisors:
\[ (4+1) \times (3+1) = 5 \times 4=20 \]

Enumerate all positive divisors and calculate corresponding \(k\).

```python
# Enumerate divisors of 2000
factors_of_2000 = []
for d in range(1, 2001):
    if 2000 % d == 0:
        factors_of_2000.append(d)

# For each divisor d, compute k = (2000/d) - 1 and print if k >= 0
answers = []
for d in factors_of_2000:
    k = 2000 // d - 1
    answers.append(k)
    print(k)
```
