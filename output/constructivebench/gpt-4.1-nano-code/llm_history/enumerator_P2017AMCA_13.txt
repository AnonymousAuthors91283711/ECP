[write_program]
This problem involves solving a system of equations modeling a real-world scenario. The key equations relate to the variables \(d\) and \(v\), with some constraints. We want to find the unique \(d\) satisfying these equations, especially focusing on the relations:

\[
\frac{180}{60} = \frac{d}{v} \quad\text{and}\quad \frac{276}{60} = \frac{d/3}{v} + \frac{2d/3}{v-20}
\]

Given the constraints, we'll sample small \(d\) and \(v\) values consistent with the physical constraints (\(d > 0\), \(v > 0\)), then verify the equations. We'll search for the \(d\) that satisfies both equations, focusing on approximate solutions to identify the likely unique answer. 

Here's the Python code that searches over plausible \(d\) values, computes the corresponding \(v\), and checks if the second equation approximately holds; then outputs matching solutions immediately.

```python
import numpy as np

# Constants from the equations
time1 = 180 / 60  # = 3
time2 = 276 / 60  # = 4.6

# Search over plausible d values
for d_int in np.arange(1, 1000, 0.1):
    d = d_int
    # From the first equation: v = d / time1 = d / 3
    v = d / time1
    if v <= 0:
        continue
    # Check the second equation:
    # (d/3)/v + (2d/3)/(v - 20) ≈ time2
    left_side = (d/3) / v + (2*d/3) / (v - 20) if v - 20 != 0 else None
    if left_side is None or v - 20 <= 0:
        continue
    # Compare with desired time, allow small tolerance
    if abs(left_side - time2) < 0.01:
        print(f"d ≈ {d:.2f}, v ≈ {v:.2f}")
```
