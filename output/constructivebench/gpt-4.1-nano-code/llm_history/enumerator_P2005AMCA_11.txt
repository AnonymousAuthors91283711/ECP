[write_program]
This problem involves finding all three-digit numbers \( n \) (from 100 to 999) such that the digit in the tens place equals the average of the hundreds digit and the units digit. Formally:  
\[ 
\text{If } n = 100h + 10t + u, \text{ then } t = \frac{h + u}{2}.
\]

Since \( t \), \( h \), \( u \) are digits, \( h \in [1,9] \), \( t, u \in [0,9] \), and \( t \) must be an integer. Therefore, \( h + u \) must be even, and \( 2t = h + u \).

We will enumerate all possible triples \((h, t, u)\) that satisfy these conditions and print valid \( n = 100h + 10t + u \).

```python
# Enumerate all 3-digit numbers with digits h (hundreds), t (tens), u (units)
# where t = (h + u)/2, with h in 1..9, u in 0..9, ensure t is integer
for h in range(1, 10):  # hundreds digit
    for u in range(0, 10):  # units digit
        sum_digits = h + u
        if sum_digits % 2 == 0:  # check if sum is even for t to be integer
            t = sum_digits // 2
            if 0 <= t <= 9:
                n = 100 * h + 10 * t + u
                print(n)
```
