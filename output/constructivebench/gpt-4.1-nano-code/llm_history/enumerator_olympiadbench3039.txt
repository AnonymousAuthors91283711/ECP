[write_program]
This problem involves solving a system of equations involving integers \(a, b, c, d\):

\[
\begin{cases}
a b c = 12000 \\
b c d = 24000 \\
c d a = 36000
\end{cases}
\]

Our goal: Find all integer solutions \((a, b, c, d)\), then count them, and assign this count to `olympiadbench3039_answer`.

Approach:
- Use the equations to express variables in terms of others.
- Since all equations involve products, factorization-by-divisors makes sense.
- Enumerate plausible divisors based on the magnitudes of the products.
- For simplicity, fix small bounds on \(a, b, c, d\), then check for solutions.
- Count solutions that satisfy the equations exactly.

Let's choose:
- bounds: \(-100 \leq a, b, c, d \leq 100\), since the products are reasonably sized.

Here's the code:

```python
# Enumerate all integer solutions to the given system
solutions = []
for a in range(-100, 101):
    for b in range(-100, 101):
        for c in range(-100, 101):
            # Check if a*b*c matches 12000
            if a * b * c != 12000:
                continue
            for d in range(-100, 101):
                # Check second and third equations
                if b * c * d == 24000 and c * d * a == 36000:
                    solutions.append((a, b, c, d))
                    print((a, b, c, d))
# Count solutions and assign
ab_count = len(solutions)
ab_count
```
