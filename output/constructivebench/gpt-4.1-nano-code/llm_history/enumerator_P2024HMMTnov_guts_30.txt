[write_program]
This problem involves finding subsets of a 4-by-4 grid with exactly 4 points, where no two points are adjacent horizontally, vertically, or diagonally (since the condition involving absolute differences greater than 1 prevents immediate neighbors in all directions).

To enumerate all such 4-point subsets, we will:
- Generate all combinations of 4 points from the grid.
- For each combination, check if all pairs satisfy the non-adjacency condition.
- Print each valid subset immediately.

We will limit to small grid (4Ã—4) for efficiency, generating all combinations of size 4, and verifying the distance constraints.

```python
from itertools import combinations

def is_valid(s):
    s_list = list(s)
    for i in range(len(s_list)):
        for j in range(i+1, len(s_list)):
            p, q = s_list[i], s_list[j]
            # Check if points are adjacent (including diagonals)
            if abs(p[0] - q[0]) <= 1 and abs(p[1] - q[1]) <= 1:
                return False
    return True

grid_points = [(i, j) for i in range(4) for j in range(4)]
count = 0
for combo in combinations(grid_points, 4):
    if is_valid(combo):
        # Output the valid set immediately
        print(sorted(combo))
        count += 1
print(f"Total valid sets: {count}")
```
