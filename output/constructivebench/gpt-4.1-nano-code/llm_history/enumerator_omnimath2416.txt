[write_program]
This problem involves a function \( S(m, n) = \sum_{i=1}^{m} i \times n \). We are given two conditions:
- \( S(m, n) = 120 \)
- \( S(m^3, n^3) = 4032000 \)

Our goal is to find \( S(m^2, n^2) \).

Observations:
- \( S(m, n) = n \times \sum_{i=1}^m i = n \times \frac{m(m+1)}{2} \)
- Similarly, \( S(m^3, n^3) = n^3 \times \frac{m^3 (m^3 + 1)}{2} \)

Thus:
\[
n \frac{m(m+1)}{2} = 120 \\
n^3 \frac{m^3 (m^3 + 1)}{2} = 4032000
\]

We can try small positive integers \( m, n \) satisfying the first equation, then check the second.

Here's a Python program to:
- Iterate over small \( m \) and calculate \( n \) from the first condition.
- Verify if \( n \) is integer and if the second condition holds.
- When both are satisfied, compute and print \( S(m^2, n^2) \).

```python
# Enumerate small positive integers m
for m in range(1, 20):
    # Calculate n from the first equation S(m, n) = 120
    numerator = 2 * 120
    denominator = m * (m + 1)
    if numerator % denominator == 0:
        n = numerator // denominator
        if n > 0:
            # Verify second condition S(m^3, n^3)
            left = n**3 * (m**3 * (m**3 + 1) // 2)
            if left == 4032000:
                # Compute S(m^2, n^2)
                answer = n**2 * (m**2 * (m**2 + 1) // 2)
                print(f"m={m}, n={n} -> S(m^2, n^2)={answer}")
```
