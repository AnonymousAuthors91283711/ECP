[write_program]
This problem involves counting the number of successful free throws in a basketball shooting scenario, with given attempts and success formulas. The key constraints are:

- Total attempts: `three_pt_attempts + two_pt_attempts = 30`
- Three-pointers made: `three_pt_made = three_pt_attempts / 5`
- Two-pointers made: `two_pt_made = 3 * two_pt_attempts / 10`
- Total points: `3 * three_pt_made + 2 * two_pt_made`

Since attempts are integers, and the makes involve divisions, we need to consider only attempts where the divisions produce integers. Specifically:

- `three_pt_attempts` divisible by 5,
- `two_pt_attempts` divisible by 10.

Let's choose small, sample values for attempts within the constraints, iterate over valid combinations, compute makes and total points, and print all possible totals.

```python
# Enumerate all possible attempt combinations where attempts are divisible by required divisors
for three_attempts in range(0, 31, 5):  # multiples of 5 up to 30
    two_attempts_max = 30 - three_attempts
    for two_attempts in range(0, two_attempts_max + 1, 10):  # multiples of 10
        # Calculate makes
        three_made = three_attempts // 5
        two_made = (3 * two_attempts) // 10
        # Compute total points
        total_points = 3 * three_made + 2 * two_made
        print(total_points)
```
