[check_equivalence] Problem: import Mathlib.Data.Nat.Factorial.Basic
import Mathlib.Data.Nat.Digits

open Nat

abbrev P2010AMCA_23_answer : ℕ := sorry
theorem P2010AMCA_23 : 
  let digits := (factorial 90).digits 10;
  let lastNonZero := digits.reverse.dropWhile (· = 0);
  let lastTwoNonZero := if lastNonZero.length ≥ 2 then lastNonZero.take 2 else lastNonZero;
  lastTwoNonZero.foldr (fun d acc => d + 10 * acc) 0 = P2010AMCA_23_answer := by sorry
Ground Truth Answer: 12
Proposed Answer: 21
<<<False>>>