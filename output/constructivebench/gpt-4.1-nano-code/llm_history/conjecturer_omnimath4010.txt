[conjecture_answer] Formal Problem Statement: import Mathlib

open Polynomial

abbrev omnimath4010_answer : Set (ℤ[X]) := sorry
theorem omnimath4010 (P : ℤ[X]) :
  (∀ (s t : ℝ), (∃ (m n : ℤ), eval₂ (algebraMap ℤ ℝ) s P = m ∧ eval₂ (algebraMap ℤ ℝ) t P = n) → 
    ∃ (k : ℤ), eval₂ (algebraMap ℤ ℝ) (s * t) P = k) ↔ P ∈ omnimath4010_answer := by sorry. Enumerated answers: Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-2.0, t=-2.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-2.0, t=-1.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-2.0, t=0.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-2.0, t=1.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-2.0, t=2.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-1.0, t=-2.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-1.0, t=-1.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-1.0, t=0.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-1.0, t=1.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=-1.0, t=2.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approximated by function: <function <lambda> at 0x7f88d9190540>
At s=0.0, t=-2.0: eval = (-2.00), (-2.00), product eval=-2.00 -> integers (-2,-2,-2)
Polynomial with coefficients approxima
Output cuts off here.. Expected Answer Type: Set (ℤ[X])
<<<{P : ℤ[X] | ∀ a b : ℝ, (∃ m n : ℤ, eval₂ (algebraMap ℤ ℝ) a P = m ∧ eval₂ (algebraMap ℤ ℝ) b P = n) → ∃ k : ℤ, eval₂ (algebraMap ℤ ℝ) (a * b) P = k}>>>

This set contains polynomials where product evaluations of any real s,t with integer evaluations always produce an integer. The enumerated examples suggest that only polynomials with integer coefficients satisfy this for all real s,t.