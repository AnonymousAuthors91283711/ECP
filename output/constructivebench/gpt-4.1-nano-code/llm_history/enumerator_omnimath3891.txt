[write_program]
Given the problem context, we need to find all triples \((a, b, c)\) of integers such that:

- \(1 < a < b < c\),
- \((a - 1)(b - 1)(c - 1)\) divides \(a b c - 1\).

This is a number-theoretic divisibility problem involving inequalities. To assist in conjecturing the answer, we'll enumerate over small values of \(a, b, c\) with the constraints, check the divisibility condition, and print solutions immediately when found.

We will limit \(a\) to small values (say up to 10), and similarly search for \(b, c\) with some upper bounds (say up to 15) for efficiency. 

---

```python
# Enumerate potential solutions for the divisibility condition
# with small values of a, b, c satisfying the constraints.
# Print solutions as soon as found.

max_a = 10
max_b = 15
max_c = 20

for a in range(2, max_a + 1):
    for b in range(a + 1, max_b + 1):
        for c in range(b + 1, max_c + 1):
            divisor = (a - 1) * (b - 1) * (c - 1)
            numerator = a * b * c - 1
            if numerator % divisor == 0:
                print(f"Solution found: a={a}, b={b}, c={c}")
```
