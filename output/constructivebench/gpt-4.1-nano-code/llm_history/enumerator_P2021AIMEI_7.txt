[write_program]
This problem asks for the number of pairs \((m, n)\) of natural numbers with \(1 \leq m < n \leq 30\), such that there exists a real \(x\) satisfying \(\sin(mx) + \sin(nx) = 2\). Since the sum of two sine functions reaches 2 only when both are individually equal to 1, the key is to find when \(\sin(mx) = 1\) and \(\sin(nx) = 1\) simultaneously.

Recall that \(\sin(\theta) = 1 \iff \theta = \pi/2 + 2k\pi\) for some integer \(k\). Therefore, for some \(x\),
\[
mx = \frac{\pi}{2} + 2k\pi \quad \text{and} \quad nx = \frac{\pi}{2} + 2l\pi,
\]
for integers \(k, l\). Dividing both by \(x\),
\[
m = \frac{\pi/2 + 2k\pi}{x}, \quad n = \frac{\pi/2 + 2l\pi}{x}.
\]

For these to be equal for some \(x\), the ratio \(m/n\) must be rational, specifically,
\[
\frac{m}{n} = \frac{\frac{\pi}{2} + 2k\pi}{\frac{\pi}{2} + 2l\pi}.
\]

Since \(m, n\) are integers, for the sum to reach 2, we need both \(\sin(m x)\) and \(\sin(n x)\) to be 1 simultaneously, which requires both \(m x\) and \(n x\) to be \(\pi/2 + 2k\pi\) for some integers \(k\). Equivalently, \(m x \equiv n x \equiv \pi/2 \pmod{2\pi}\).

This simplifies to the condition that \(m\) and \(n\) are such that there exists \(x\) with
\[
m x \equiv \frac{\pi}{2} \pmod{2\pi} \quad \text{and} \quad n x \equiv \frac{\pi}{2} \pmod{2\pi}.
\]
Subtracting, we get
\[
(m - n) x \equiv 0 \pmod{2\pi}.
\]
So, \(x\) can satisfy these simultaneously only if \(m \equiv n \pmod{0}\), but with initial constraints \(m < n\), the key is that for some \(x\), both \(\sin(mx)\) and \(\sin(nx)\) can be 1 at the same time, which occurs if \(m\) divides \(n\) or vice versa.

Indeed, the only way for \(\sin(mx) + \sin(nx) = 2\) is when both are equal to 1 at the same \(x\), which occurs when \(m\) divides \(n\) or \(n\) divides \(m\).

Thus, for \(1 \leq m < n \leq 30\), the pairs \((m, n)\) satisfying the condition are those where one divides the other.

```python
# Enumerate all pairs (m, n) with 1 <= m < n <= 30
# and where m divides n, implying sum of sine functions can be 2 at some x.
result_pairs = []

for m in range(1, 31):
    for n in range(m+1, 31):
        if n % m == 0:
            print((m, n))
            result_pairs.append((m, n))

# Output the total count
print("Total pairs:", len(result_pairs))
```
