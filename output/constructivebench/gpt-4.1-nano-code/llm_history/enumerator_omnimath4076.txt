[write_program]
The problem involves an inequality involving three real numbers \(a, b, c\):  
\[
|a b (a^2 - b^2) + b c (b^2 - c^2) + c a (c^2 - a^2)| \leq M (a^2 + b^2 + c^2)^2
\]

We aim to find the minimal constant \(M\) such that this inequality always holds for all real \(a, b, c\).

Given the symmetry, a typical approach in such problems is to try specific simple values of \(a, b, c\) to find candidate extremal constants, such as setting some variables to zero, equal, or small values.

The plan:
- Explore combinations where some variables are zero.
- Explore symmetric cases where variables are equal.
- Explore cases with variables scaled proportionally to get larger bounds.

Since the problem asks for stream-like enumeration and checking for minimal constants, we'll try small values, then see if larger ones produce smaller bounds.

Let's proceed with small testing points to find candidate maxima for the numerator:

```python
# We will test specific triplets (a, b, c) to evaluate the numerator's absolute value 
# and estimate the minimal M by dividing numerator by (a^2 + b^2 + c^2)^2.
# We'll record the maximum ratio found, as this will suggest the minimal M satisfying the inequality.

max_ratio = 0

# Define a small epsilon to avoid division by zero
epsilon = 1e-8

# Test points:
test_points = [
    (1, 0, 0),
    (1, 1, 0),
    (1, 1, 1),
    (2, 1, 0),
    (1, 2, 3),
    (-1, 1, 0),
    (1, -1, 1),
    (0.5, 0.5, 0.5),
    (10, 0, 0),
    (1, 10, 1),
    (1, 1, 10),
]

import math

for a, b, c in test_points:
    numerator = abs(a*b*(a**2 - b**2) + b*c*(b**2 - c**2) + c*a*(c**2 - a**2))
    denom = (a**2 + b**2 + c**2)**2
    if denom > epsilon:
        ratio = numerator / denom
        print(f"a={a}, b={b}, c={c} => ratio={ratio}")
        if ratio > max_ratio:
            max_ratio = ratio

# Output the maximum ratio found as an estimate for the minimal M
print("Estimated minimal M:", max_ratio)
```

This script tests various small points, computes the ratio of numerator to denominator, and finds an upper bound for the minimal constant \(M\). The maximum ratio across samples approximates the minimal \(M\).

This process helps conjecture the value of \(M\) or at least provide a candidate for further rigorous proof.

```python
# The code above is the complete enumeration logic, designed to be executed directly.
```
