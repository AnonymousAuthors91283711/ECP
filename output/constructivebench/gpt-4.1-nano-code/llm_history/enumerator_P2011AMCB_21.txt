[write_program]
The problem asks to find a unique natural number `d` such that there exist two positive integers `x` and `y`, with `x â‰  y`, satisfying certain conditions involving their arithmetic and geometric means, as well as the difference `d`. Specifically:

- `am` (average of `x` and `y`) is between 10 and 100.
- `gm` (geometric mean of `x` and `y`) is equal to a two-digit number formed by the digits of `am`.
- `d` is the absolute difference `|x - y|`.
- The solution should be unique.

We interpret `gm = (am % 10) * 10 + (am / 10)` as the two-digit integer formed by the digits of the average.

Let's set up a small program to explore candidate pairs `(x, y)` within feasible ranges, compute the values, and check the conditions to find the unique `d`.

```python
# We will enumerate pairs (x, y) with positive integers, x != y
# and average between 10 and 100.
# For each pair, check the geometric mean, form the two-digit number, 
# and verify conditions. Collect all solutions for d, then identify the unique one.

def main():
    results = {}
    for x in range(1, 200):
        for y in range(x + 1, 200):  # ensure x < y for simplicity
            am = (x + y) / 2
            if not (10 <= am < 100):
                continue
            # Compute geometric mean
            gm = (x * y) ** 0.5
            # Form two-digit number from am's digits
            am_int = int(round(am))
            digit1 = am_int // 10
            digit2 = am_int % 10
            gm_int = int(round(gm))
            formed_number = digit1 * 10 + digit2
            if gm_int != formed_number:
                continue
            d = abs(x - y)
            results[d] = results.get(d, 0) + 1

    # Check for the unique solution
    for d, count in results.items():
        if count == 1:
            print(f"Unique difference d = {d}")
            print("Corresponding pair (x, y) could be found by reverse search.")
            break
    else:
        print("No unique solution found for the explored range.")

if __name__ == "__main__":
    main()
```

This program searches within a reasonable range (x,y < 200), checks all conditions, and identifies if there's a unique `d`. Adjust the range as needed for completeness.

```
