[write_program]
The problem asks for the smallest positive integer \( n \) such that:
- The number of odd divisors of \( n \) (less than or equal to \( n \)) is exactly 6.
- The number of even divisors of \( n \) (less than or equal to \( n \)) is exactly 12.

The divisors are counted via filtering the range \( 1 \) to \( n \). To find the minimal such \( n \), we can systematically test small candidates, counting their divisors accordingly.

Below is a Python script that enumerates candidate values of \( n \), counting their odd and even divisors, and then outputs those meeting the conditions. It searches up to a certain limit to find the minimal \( n \) matching the criteria.

```python
# Enumerate candidate n values starting from 1 upwards
limit = 2000  # upper bound to find minimal n, adjustable if needed

for n in range(1, limit + 1):
    # Count odd divisors
    odd_divisors = sum(1 for d in range(1, n + 1) if n % d == 0 and d % 2 == 1)
    # Count even divisors
    even_divisors = sum(1 for d in range(1, n + 1) if n % d == 0 and d % 2 == 0)
    # Check conditions
    if odd_divisors == 6 and even_divisors == 12:
        print(n)
        break  # minimal, so stop at first match
```
