[write_program]
This problem asks for counting the number of four-digit integers \( N \) satisfying the condition \( N / 10 = 9 \times (N \bmod 1000) \). Our goal is to enumerate all such \( N \) to find their count. The key steps are:

- Understand the condition: \( N / 10 = 9 \times (N \bmod 1000) \).
- Since \( N \) is a 4-digit number: \( 1000 \leq N < 10000 \).
- Express \( N \) as \( N = 1000a + 100b + 10c + d \), with \( a \in [1, 9] \), \( b, c, d \in [0, 9] \).

But simplified, it appears the problem involves the relationship between \( N \), its last three digits, and how dividing and modulating relate.

Because:
- \( N / 10 = \lfloor N/10 \rfloor \)
- \( N \bmod 1000 \) is the last three digits of \( N \)

The key is to iterate over possible last three digits and check if the condition holds, then verify if \( N \) is four digits.

Let's implement:

```python
# Enumerate N in [1000, 9999]
# For each N, check if N//10 == 9 * (N % 1000)
# If true, count it
count = 0
for N in range(1000, 10000):
    if N // 10 == 9 * (N % 1000):
        print(N)
        count += 1
print("Total count:", count)
```

This enumerates all valid solutions with immediate output, consistent with the constraints.
