[write_program]
This problem involves analyzing a linear recurrence sequence defined similarly to Fibonacci, with initial conditions a and b, and establishing the 7th term given that the 6th term is 120. We want to determine seq 7 based on these constraints.  
Since the sequence resembles a Fibonacci-like recurrence: `seq n = seq n-2 + seq n-1` with known `seq 6`, we can express `seq 7` directly in terms of previous terms. The sequence follows:

```
seq 2 = b
seq 3 = a + b
seq 4 = a + 2b
seq 5 = 2a + 3b
seq 6 = 3a + 5b
seq 7 = 5a + 8b
```

Given `seq 6 = 120`, we have:  
`3a + 5b = 120`.  
We want to find `seq 7 = 5a + 8b`.

We can parametrize solutions to `3a + 5b = 120`, with `a, b > 0`. Let's choose small integer values for `b`, solve for `a`, and then compute `seq 7`.

```python
# Enumerate small positive integer pairs (a, b) satisfying 3a + 5b = 120
for b in range(1, 25):
    # Check if (120 - 5b) divisible by 3 to get integer a
    numerator = 120 - 5 * b
    if numerator % 3 == 0:
        a = numerator // 3
        if a > 0:
            seq_7 = 5 * a + 8 * b
            print(f"a = {a}, b = {b} => seq 7 = {seq_7}")
```

This code searches for feasible small positive integer solutions and prints the corresponding sequence 7 values immediately, assisting in conjecture formation.
