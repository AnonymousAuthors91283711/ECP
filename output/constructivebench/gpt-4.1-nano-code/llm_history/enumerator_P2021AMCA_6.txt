[write_program]
The problem asks to find the least natural number n > 0 such that there exist natural numbers r, b with r + b = n satisfying two fractional equations: r/(r + b) = 1/3 and r/(r + b + 4) = 1/4. To solve this, we can enumerate small pairs (r, b) that meet these conditions and find the minimal n = r + b.

Approach:
- Iterate over possible r, b values with some reasonable upper bound.
- Check the fractional conditions for each pair.
- When conditions are satisfied, compute n = r + b.
- Keep track of the minimal n found.

This allows for an efficient, streaming enumeration and helps conjecture the least n satisfying the conditions.

```python
# Enumerate candidate pairs (r, b) with r, b >0 and find minimal n = r + b satisfying the fractional conditions
min_n = None
for r in range(1, 100):  # small sample upper bound
    for b in range(1, 100):
        total = r + b
        # Check the first condition: r / (r + b) = 1/3 => r = (r + b) / 3
        if 3 * r != total:
            continue
        # Check the second condition: r / (r + b + 4) = 1/4 => 4 * r = r + b + 4
        if 4 * r != total + 4:
            continue
        # Conditions satisfied
        n = total
        print(n)  # stream answer
        if min_n is None or n < min_n:
            min_n = n
print(f"Minimal n: {min_n}")
```
