[write_program]
The problem asks to characterize all integer pairs \((m, n)\) satisfying the equation \((m^2 + n)(m + n^2) = (m - n)^3\), given that \(m \neq 0\) and \(n \neq 0\).

Given that, I will write a Python script to systematically enumerate small integer values of \(m\) and \(n\), check the equation, and output solutions. This helps in conjecturing the form of the solutions, especially since the domain is integers and the equation involves quadratic and cubic terms.

I will choose small ranges like \(-10 \dots 10\) for both \(m, n\), check all pairs, and print solutions immediately when found within these bounds.

```python
# Enumerate small integer pairs (m, n) to find solutions to the equation:
# (m^2 + n) * (m + n^2) = (m - n)^3, with m != 0, n != 0
# This helps in conjecturing the full solution set.

solutions = []
for m in range(-10, 11):
    if m == 0:
        continue
    for n in range(-10, 11):
        if n == 0:
            continue
        left = (m**2 + n) * (m + n**2)
        right = (m - n)**3
        if left == right:
            print(f"Solution found: m={m}, n={n}")
            solutions.append((m, n))
```
