[write_program]
The problem involves a recursive sequence \( S(n) \) defined for \( n \geq 3 \), with the recurrence \( S(n) = S(n-1) + S(n-2) \), specified values at \( S(4), S(7), S(9) \). We need to find \( S(4) \).

Since the sequence follows Fibonacci-like recursion from \( n \geq 3 \), with known values at certain points, we can parametrize the sequence by initial conditions \( S(3) \) and \( S(4) \), then derive later terms from those.

Given:
- \( S(7) = 42 \)
- \( S(9) = 110 \)

Express \( S(7) \) and \( S(9) \) in terms of \( S(3) \) and \( S(4) \), then solve for \( S(4) \).

```python
# Enumerate possible initial values S(3) and S(4), then compute S(7) and S(9)
# based on the recursive relation, to find S(4).

# Since the sequence from n>=3:
# S(3) = S3 (unknown)
# S(4) = S4 (unknown)
# S(5) = S4 + S3
# S(6) = S5 + S4 = (S4 + S3) + S4 = S3 + 2*S4
# S(7) = S6 + S5 = (S3 + 2*S4) + (S4 + S3) = 2*S3 + 3*S4
# S(8) = S7 + S6 = (2*S3 + 3*S4) + (S3 + 2*S4) = 3*S3 + 5*S4
# S(9) = S8 + S7 = (3*S3 + 5*S4) + (2*S3 + 3*S4) = 5*S3 + 8*S4

# Known:
# S7 = 42
# S9 = 110

# Set up equations:
# 2*S3 + 3*S4 = 42
# 5*S3 + 8*S4 = 110

# Solve for S3 and S4:
# From the first: S3 = (42 - 3*S4)/2
# Substitute into second:
# 5*( (42 - 3*S4)/2 ) + 8*S4 = 110
# Multiply both sides by 2:
# 5*(42 - 3*S4) + 16*S4 = 220
# 210 - 15*S4 + 16*S4 = 220
# S4 = 220 - 210 = 10
# Then S3 = (42 - 3*10)/2 = (42 - 30)/2 = 12/2=6

# Now, S(4) is explicitly given as 10 in this solution.

print("S(4) =", 10)
```
