[write_program]
This problem involves summing binomial probabilities over the range k=4 to 6 with parameters n=6 and p=1/2, i.e., sum_{k=4}^6 C(6, k) * (1/2)^6. The sum over all k=0 to 6 of C(6, k)*(1/2)^6 is 1 (since it's a binomial distribution probability), and summing from 4 to 6 gives the upper tail probability for kâ‰¥4. 

To enumerate possible answers, I'll compute the exact sum of the binomial probabilities for k=4, 5, 6. Given it's a small n, full enumeration is feasible and straightforward.

```python
from math import comb

# Total sum over all possible k from 0 to 6
n = 6
p = 0.5

# Compute cumulative probability from k=4 to 6
answers = []

# Sum of P(X=k) for k=4,5,6
for k in range(4, 7):
    prob = comb(n, k) * (p ** k) * ((1 - p) ** (n - k))
    print(f"Probability for k={k}: {prob}")
    answers.append(prob)

# Sum over the range
cumulative_answer = sum(answers)
print(f"Sum of probabilities from k=4 to 6: {cumulative_answer}")
```
