[write_program]
The problem involves computing a sum over combinations of probabilities for English and History exam scores, with a conditional term based on the average of their scores. The goal is to evaluate the sum for all possible score pairs, considering the scores in the provided probability distributions. We will approximate the sum by enumerating all relevant combinations explicitly, then sum over those satisfying the condition \((4 + 4 + e.fst + h.fst)/4 \ge 7/2\).

To do this efficiently:
- Iterate over all pairs from each list.
- Check the condition for each pair.
- Sum the product of probabilities when the condition holds.
- Print all partial results immediately as they are computed.
- Use small sample sets to keep computations manageable.

Given that the exact answer is a rational (â„š), the program will compute fractional sums exactly, using Python's fractions.

```python
from fractions import Fraction

# Lists of score probabilities for English and History
english_probs = [(4, Fraction(1,6)), (3, Fraction(1,4)), (2, Fraction(5,12))]
history_probs = [(4, Fraction(1,4)), (3, Fraction(1,3)), (2, Fraction(5,12))]

total_sum = Fraction(0,1)

# Iterate over all pairs
for e_score, e_prob in english_probs:
    for h_score, h_prob in history_probs:
        total_score = 4 + 4 + e_score + h_score  # sum before dividing by 4
        # Check the condition
        if Fraction(total_score, 4) >= Fraction(7,2):
            partial = e_prob * h_prob
            total_sum += partial
            print(f"Score pair (English: {e_score}, History: {h_score}) with probs {float(e_prob):.3f}, {float(h_prob):.3f} -> sum contribution: {partial}")
print(f"Final sum: {float(total_sum):.6f} ({total_sum})")
```
