[write_program]
The problem involves solving the equation:

\[ \sqrt{3} \cos \left(\frac{10\pi}{180}\right) = \cos \left(\frac{40\pi}{180}\right) + \sin \left(\frac{x\pi}{180}\right) \]

for \(x\) in \((0, 360)\).

Let's convert angles to degrees for understanding, then to radians for calculations:
- \(\cos(10^\circ)\),
- \(\cos(40^\circ)\),

Using approximate trigonometric computations, we find the right side involves \(\sin(x^\circ)\).

The equation simplifies to:

\[ \sin(x^\circ) = \sqrt{3} \cos(10^\circ) - \cos(40^\circ) \]

Calculating the RHS numerically to find the approximate value of \(\sin(x^\circ)\). Then, find all solutions \(x\) in \((0, 360)\) where:

\[ \sin(x^\circ) \approx \text{value} \]

which can be addressed by enumerating \(x\) from 1 to 359 degrees, and checking if \(\sin(x^\circ)\) is close enough (considering floating-point precision) to the RHS value.

Here's the code:

```python
import math

# Compute known parts
cos_10 = math.cos(math.radians(10))
cos_40 = math.cos(math.radians(40))
rhs_value = math.sqrt(3) * cos_10 - cos_40

# The sine function has solutions where sin(x) = rhs_value
# in the interval (0, 360). For each x in degrees, check if sin(x) is close enough.
threshold = 1e-4  # tolerance for floating point comparison

for x_deg in range(1, 360):
    sin_x = math.sin(math.radians(x_deg))
    if abs(sin_x - rhs_value) < threshold:
        print(f"x = {x_deg} degrees")
```
