[write_program]
The problem asks to find all positive integers (a, b, c) such that a^3 + b^3 + c^3 = 2001, and then possibly identify extremal solutions or a specific set of answers. Since the problem is at a high-school competition level and involves positive integers, we can proceed by enumerating plausible values for a, b, c, given the sum constraint.

- The smallest positive cube is 1^3=1, and the largest cube less than or equal to 2001 is 12^3=1728 because 13^3=2197 > 2001.
- So, a, b, c are in the range 1..12.
- We iterate over all combinations (a, b, c) in this range, check for the sum, and print matches. The enumeration is ordered so that solutions are discovered as soon as they exist, enabling streaming.

```python
# Enumerate all positive integers a, b, c in range 1..12
# and print solutions where a^3 + b^3 + c^3 == 2001

for a in range(1, 13):
    a_cub = a**3
    for b in range(1, 13):
        b_cub = b**3
        for c in range(1, 13):
            c_cub = c**3
            if a_cub + b_cub + c_cub == 2001:
                print((a, b, c))
```
