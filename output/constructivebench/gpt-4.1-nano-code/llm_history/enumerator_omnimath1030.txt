[write_program]
Let's analyze the recurrence:

Given:
- \( a(1) = 3 \)
- \( a(n+1) = (n+1) \times a(n) - n \) for \( n \ge 1 \)

We need to find the least \( m \ge 2005 \) such that:
- \( m+1 \) divides \( a(m)^2 - 1 \)

---

Our plan:

- Generate terms \( a(n) \) for \( n \) starting from 1 up to a certain limit.
- For each \( m \ge 2005 \), check if \( (a(m)^2 - 1) \) is divisible by \( m+1 \).
- Since the problem asks for the least such \( m \), we will keep track and print every valid candidate until we've found the minimal one.

We will limit the enumeration to, say, \( m \) up to around 2100, considering the problem's likely scope and constraints.

```python
# Python program to determine the least m >= 2005 satisfying the divisibility condition
# based on the recurrence relation:
# a(1) = 3
# a(n+1) = (n+1)*a(n) - n

def generate_sequence(limit):
    a = [0, 3]  # 1-based indexing: a[1] = 3
    for n in range(1, limit):
        a.append((n+1)*a[n] - n)
    return a

def find_least_m(start=2005, end=2100):
    a = generate_sequence(end)
    for m in range(start, end+1):
        numerator = a[m]**2 - 1
        denominator = m + 1
        if numerator % denominator == 0:
            print(f"Found for m={m}: (a({m})^2 -1) divisible by {m+1}")
            return m
    print("No solution found in the given range")
    return None

if __name__ == "__main__":
    m_found = find_least_m()
    print(f"Least m satisfying the condition is: {m_found}")
```
