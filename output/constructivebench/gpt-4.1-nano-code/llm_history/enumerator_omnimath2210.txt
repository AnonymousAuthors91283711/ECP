[write_program]
The problem involves counting integer pairs (p₁, p₂) satisfying two conditions:
1. p₁² + p₂² < 2019
2. p₁² + min(p₁, p₂) = p₂² + max(p₁, p₂)

Let's analyze the second condition to understand possible pairs.

- For p₁, p₂ ∈ ℤ.
- The equation can be split into cases based on whether p₁ ≤ p₂ or p₂ ≤ p₁.

Suppose p₁ ≤ p₂:

p₁² + p₁ = p₂² + p₂  
→ p₁² - p₂² = p₂ - p₁  
→ (p₁ - p₂)(p₁ + p₂) = p₂ - p₁.

Note that p₂ - p₁ = -(p₁ - p₂), so:

(p₁ - p₂)(p₁ + p₂) = -(p₁ - p₂)

If p₁ ≠ p₂, divide both sides by (p₁ - p₂):

p₁ + p₂ = -1

Similarly, if p₂ ≤ p₁, the analogous analysis yields the same.

So the solutions satisfy:

- Either p₁ = p₂, or
- p₁ + p₂ = -1

Now, for each case, we need to find integer pairs (p₁, p₂) satisfying p₁² + p₂² < 2019 and the relation.

We will code:

- Generate pairs where p₁ = p₂, check the sum of squares.
- Generate pairs where p₁ + p₂ = -1, for integer p₁, p₂.

In each case, limit p₁ and p₂ to a manageable small range (e.g., -45 to 45) since 45² ≈ 2025, close to 2019, so no larger values need consideration.

Let's implement the enumeration.

```python
# Enumerate all pairs satisfying the conditions
# bounds for p₁ and p₂
limit = 45

# Collect all solutions
solutions = set()

# Case 1: p₁ = p₂
for p in range(-limit, limit + 1):
    if p * p + p * p < 2019:
        p1, p2 = p, p
        solutions.add((p1, p2))
        print((p1, p2))

# Case 2: p₁ + p₂ = -1
for p1 in range(-limit, limit + 1):
    p2 = -1 - p1
    if abs(p2) > limit:
        continue
    if p1 * p1 + p2 * p2 < 2019:
        solutions.add((p1, p2))
        print((p1, p2))
```
