[write_program]
This problem involves counting the proportion of seatings where either "Aristotle" or "Flora" is seated in position 1 or 3, with "David" fixed in position 2. We must find the ratio of favorable seatings to valid seatings, considering all bijective arrangements of 5 people onto 5 chairs, with constraints.

To approach this efficiently:
- Fix "David" at position 2.
- Count valid bijections satisfying this.
- Count how many among them have "Pedro" at position 1 or 3.
- Enumerate all permutations satisfying the constraints for a sample set of solutions.
- Output the ratio as a rational number.

```python
import math
from itertools import permutations

# Define constants
people = ["Aristotle", "David", "Flora", "Munirah", "Pedro"]
fixed_position = 1  # 0-based index for seat 2 (Python indexing)
david_pos = 1

# Positions of interest for Pedro (0-based): 0 and 2
interest_positions = [0, 2]

# Count total valid seatings where David is at position 1
valid_seatings = 0
# Count favorable seatings where Pedro is at position 1 or 3
favorable_seatings = 0

# Remaining people exclude David
remaining_people = [p for p in people if p != "David"]

for perm in permutations(remaining_people):
    # Construct seating arrangement
    seating = list(perm)
    seating.insert(david_pos, "David")
    # seating now has length 5
    # Check constraints
    if seating[fixed_position] == "David":
        valid_seatings += 1
        if seating[0] == "Pedro" or seating[2] == "Pedro":
            favorable_seatings += 1

# Output ratio as a fraction (since both counts are integers)
ratio = favorable_seatings / valid_seatings if valid_seatings > 0 else 0
print(f"Total valid seatings: {valid_seatings}")
print(f"Favorable seatings: {favorable_seatings}")
print(f"Ratio: {favorable_seatings}/{valid_seatings} = {ratio}")
```
