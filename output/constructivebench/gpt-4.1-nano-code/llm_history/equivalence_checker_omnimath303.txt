[check_equivalence] Problem: import Mathlib

open Nat Topology Filter

abbrev omnimath303_answer : ℕ → ℕ → ℕ → ℕ → Prop := sorry
theorem omnimath303 (n : ℕ) (hn : n > 0) :
  (∀ a b c : ℕ, omnimath303_answer n a b c ↔ (∃ x y z : ℤ, |x| ≤ 2*n ∧ |y| ≤ 2*n ∧ |z| ≤ 2*n ∧ ¬(x = 0 ∧ y = 0 ∧ z = 0) ∧ a*x + b*y + c*z = 0)) :=
sorry

Ground Truth Answer: sorry
Proposed Answer: fun n a b c => 
  ∃ x y z : ℤ, |x| ≤ 2 * n ∧ |y| ≤ 2 * n ∧ |z| ≤ 2 * n ∧ ¬ (x = 0 ∧ y = 0 ∧ z = 0) ∧ a * x + b * y + c * z = 0
<<<True>>>
The proposed answer exactly matches the logical structure and conditions specified in the problem statement. Both define a predicate (omnimath303_answer) that holds true when there exist integers x, y, z within the specified bounds (|·| ≤ 2n), not all zero, that satisfy the linear equation a*x + b*y + c*z = 0. The proposed answer is a direct implementation of the right-hand side of the biconditional in the theorem statement.