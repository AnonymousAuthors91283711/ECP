[write_program]
This problem involves searching for natural numbers \( n \) such that the sum of fractional parts \(\sum_{i=0}^{k-1} \operatorname{fract}\left(\frac{(i+1)n}{202}\right)\) equals \(k/2\), for given \(k\). We want to find all such \(k\) less than 202, and possibly gather the set of all \(k\) for which this is possible.

Approach:
- For each \(k\) from 1 to 201, try small \(n\) values to see if the sum of the fractional parts equals \(k/2\).
- Since the sum depends on fractional parts, and fractional parts have periodicity, we can restrict exploration to small \(n\).
- For each \(k\), scan \(n\) in a small range (say 1 to 50), compute the sum, and check if it equals exactly \(k/2\).

This brute-force enumeration should reveal which \(k\) have solutions.

```python
# Enumerate all k in [1, 201], and for each k, try n in a small range
# to find solutions where sum of fractional parts equals k/2.
result_set = set()

for k in range(1, 202):
    found = False
    for n in range(1, 51):
        total = 0.0
        for i in range(k):
            val = ((i + 1) * n) / 202
            total += val - int(val)  # fractional part
        if abs(total - k / 2) < 1e-9:
            print(k)
            result_set.add(k)
            found = True
            break  # stop once a solution for this k is found
```
