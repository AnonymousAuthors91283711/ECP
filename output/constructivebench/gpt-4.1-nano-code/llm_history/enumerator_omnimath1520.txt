[write_program]
The problem is asking for the number of integer 7-tuples (n1, ..., n7) such that the sum of their sixth powers equals 96957. This is a challenging enumeration problem that involves examining integer solutions for the sum of powers.

Since the code uses theoretical constructs, and the original question is high-school level but complex, I'll create a Python script that searches for integer solutions within a reasonable small range, systematically enumerating candidates. To avoid an enormous search space, I'll limit n_i to some small range based on approximate 6th root considerations.

Here's the plan:
- For each n_i from -k to k, check if the sum of their sixth powers equals 96957.
- Prioritize simplicity and efficiency.
- Immediately print each solution found.

Now, I'll write the script:

```python
# Enumerate small integer solutions to sum of 7 sixth powers equal to 96957
# We approximate the bounds based on sixth roots of 96957

import math

# Approximate maximum absolute value for n_i
max_val = int(round(96957 ** (1/6))) + 1  # Add 1 for safety

for n1 in range(-max_val, max_val + 1):
    n1_pow = n1 ** 6
    for n2 in range(-max_val, max_val + 1):
        n2_pow = n2 ** 6
        sum_2 = n1_pow + n2_pow
        for n3 in range(-max_val, max_val + 1):
            n3_pow = n3 ** 6
            sum_3 = sum_2 + n3_pow
            for n4 in range(-max_val, max_val + 1):
                n4_pow = n4 ** 6
                sum_4 = sum_3 + n4_pow
                for n5 in range(-max_val, max_val + 1):
                    n5_pow = n5 ** 6
                    sum_5 = sum_4 + n5_pow
                    for n6 in range(-max_val, max_val + 1):
                        n6_pow = n6 ** 6
                        sum_6 = sum_5 + n6_pow
                        n7_target = 96957 - sum_6
                        # Check if n7_target is an integer and within bounds
                        # Since n7 is integer, check if its sixth power matches n7_target
                        # n7 should satisfy n7^6 == n7_target
                        # For small range, try directly
                        for n7 in range(-max_val, max_val + 1):
                            if n7 ** 6 == n7_target:
                                print((n1, n2, n3, n4, n5, n6, n7))
```
