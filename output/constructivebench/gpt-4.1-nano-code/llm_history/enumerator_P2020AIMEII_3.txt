[write_program]
This problem involves solving a logarithmic equation where the variable \( x \) is a rational number, expressed as a reduced fraction \( m/n \). The goal is to find the unique \( x \) satisfying the equation, and find coprime positive integers \( m, n \) such that the sum matches the sum \( m + n \).

Given the log expressions:

\[
\frac{\log 3^{20}}{\log 2^{x}} = \frac{\log 3^{2020}}{\log 2^{x+3}}
\]

which simplifies to:

\[
\frac{20 \log 3}{x \log 2} = \frac{2020 \log 3}{(x+3) \log 2}
\]

Cancelling \( \log 3 \) and \( \log 2 \):

\[
\frac{20}{x} = \frac{2020}{x+3}
\]

Cross-multiplied:

\[
20(x + 3) = 2020 x
\]

\[
20x + 60 = 2020 x
\]

\[
60 = 2000 x
\]

\[
x = \frac{60}{2000} = \frac{3}{100}
\]

The unique solution is \( x = \frac{3}{100} \). Since the problem asks for coprime integers \( m, n \) with \( x = \frac{m}{n} \):

```python
# Since x = 3/100, coprime numerator and denominator are (3, 100)
# and sum is 103.
# No need for enumeration; directly output the answer for verification.
print((3, 100))
print("Sum:", 3 + 100)
```
