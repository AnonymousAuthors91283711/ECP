[write_program]
This problem involves analyzing conditions on integers \(a, b\) such that there exist integers \(m, n\) satisfying certain quadratic equations. The logical statement relates the existence of such \(m, n\) to membership in a set, which suggests that we can tabulate all integer pairs \((a, b)\) within certain bounds and check the conditions efficiently.

Given the constraints, we'll choose a small range for \(a, b\) (for example, \(-10 \leq a, b \leq 10\)) to enumerate all pairs. For each pair, we'll check if there exist integers \(m, n\) satisfying:

1. \(a^2 + 4b = m^2\)
2. \(b^2 + 4a = n^2\)

We will store and print pairs that meet both conditions immediately upon discovery, to assist in conjecture formation. This enumeration provides empirical evidence toward understanding the structure of solutions.

```python
import math

# Set bounds for enumeration
BOUND = 10

# Function to check if a number is a perfect square
def is_square(x):
    if x < 0:
        return False
    root = int(math.isqrt(x))
    return root * root == x

# Iterate over all pairs (a, b) within bounds
for a in range(-BOUND, BOUND + 1):
    for b in range(-BOUND, BOUND + 1):
        # Check if a^2 + 4b is a perfect square
        left_sq = a**2 + 4*b
        # Check if b^2 + 4a is a perfect square
        right_sq = b**2 + 4*a
        if is_square(left_sq) and is_square(right_sq):
            print((a, b))
```
