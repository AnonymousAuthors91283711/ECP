[write_program]
The problem asks to find the least natural number n > 1 such that the average of the squares from 1^2 to n^2 is a perfect square. Formally:

\[
\frac{\sum_{i=1}^n i^2}{n} = k^2
\]
for some integer k, with n > 1.

The sum of the first n squares is well-known:
\[
\sum_{i=1}^n i^2 = \frac{n(n+1)(2n+1)}{6}
\]

So the condition simplifies to:
\[
\frac{\frac{n(n+1)(2n+1)}{6}}{n} = \frac{(n+1)(2n+1)}{6} = k^2
\]

We must find the smallest n > 1 such that:
\[
k^2 = \frac{(n+1)(2n+1)}{6}
\]
and k is an integer.

To find candidates, we'll iterate n from 2 upwards, compute the right side, check if it is a perfect square, and if so, identify k. We stop once we find the first such n.

```python
import math

def is_perfect_square(x):
    if x < 0:
        return False
    root = int(math.isqrt(x))
    return root * root == x

# Starting from n=2, as n>1
n = 2
while True:
    value = (n + 1) * (2 * n + 1) / 6
    # Check if value is an integer
    if value.is_integer():
        value_int = int(value)
        if is_perfect_square(value_int):
            print(n, value_int, int(math.isqrt(value_int)))  # approximate k
            break
    n += 1
```
