[write_program]
The problem involves finding natural numbers \( r, q, p \) such that:
- \( q = 2r \)
- \( q = p - 4 \)
- \( (p + q + r)/3 = 13 \)

Combining the first two:
- \( p - 4 = 2r \Rightarrow p = 2r + 4 \).

Substituting into the third:
- \( (p + q + r)/3 = 13 \),
- \( (2r + 4 + 2r + r)/3 = 13 \),
- \( (5r + 4)/3 = 13 \),
- \( 5r + 4 = 39 \),
- \( 5r = 35 \),
- \( r = 7 \).

Then:
- \( q = 2r = 14 \),
- \( p = 2r + 4 = 18 \).

Verify the solution:
- \( q = 14 \),
- \( p = 18 \),
- \( r = 7 \),
- \( (p + q + r)/3 = (18 + 14 + 7)/3 = 39/3 = 13 \).

This matches all conditions. The solution set is unique for the given conditions. To demonstrate the process via enumeration, we can test small ranges, but since it's straightforward, we just print the found values.

```python
# Python program to find solutions for the algebraic conditions
# Conditions:
# q = 2 * r
# q = p - 4
# (p + q + r) / 3 = 13

# Combining the conditions:
# p = 2r + 4

# Since p must be such that all variables are natural numbers (non-negative integers), 
# we can iterate over reasonable small r values.

for r in range(0, 20):
    q = 2 * r
    p = q + 4  # from q = p - 4
    total = p + q + r
    if total % 3 == 0 and total // 3 == 13:
        print(f"r={r}, q={q}, p={p}")
```
