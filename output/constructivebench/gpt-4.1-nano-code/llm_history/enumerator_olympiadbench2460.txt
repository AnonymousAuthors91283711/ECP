[write_program]
The problem involves finding all positive integer pairs (a, b) satisfying the equation:

\[ a^3 + 2a b = 2013 \]
with \( a > 0, b > 0 \).

To find solutions, we can:
1. Iterate over small positive values of \( a \),
2. For each \( a \), compute possible \( b \) values from the equation \( b = \frac{2013 - a^3}{2a} \),
3. Check if \( b \) is a positive integer.

Since \( a > 0 \), and \( a^3 \) grows quickly, we can limit \( a \) up to a value where \( a^3 < 2013 \), i.e., \( a \le 12 \) because \( 13^3 = 2197 > 2013 \).

```python
# Enumerate positive integers a up to 12 (since 13^3 > 2013)
# For each a, check if (2013 - a^3) is divisible by 2a and yields a positive integer b
solutions = []
max_a = 12
for a in range(1, max_a + 1):
    numerator = 2013 - a**3
    denominator = 2 * a
    if numerator > 0 and numerator % denominator == 0:
        b = numerator // denominator
        if b > 0:
            print((a, b))
            solutions.append((a, b))
```
This code searches for solutions efficiently by limiting the search space and checking the divisibility condition to find valid \( b \).
