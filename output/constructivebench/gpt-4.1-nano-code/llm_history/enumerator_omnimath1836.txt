[write_program]
This problem requires finding the least positive integer \(k\) such that 49 divides \(\binom{2k}{k}\). Since 49 = 7^2, we need to verify for each \(k\) whether the binomial coefficient is divisible by 49. We'll search for the smallest such \(k\) starting from 1 upwards, checking divisibility by 7^2.

To do this efficiently:
- Generate values of \(k\)
- Compute \(\binom{2k}{k}\) using the factorial formula
- Check divisibility by 49
- Stop at the first such \(k\)

I’ll limit to \(k \leq 100\) for efficiency, which covers small cases and is likely enough for the minimal solution. The code will print each candidate \(k\) as it’s checked and stop when the condition is first met.

```python
from math import factorial

def binom(n, r):
    return factorial(n) // (factorial(r) * factorial(n - r))

for k in range(1, 101):
    val = binom(2 * k, k)
    if val % 49 == 0:
        print(k)
        break
```
