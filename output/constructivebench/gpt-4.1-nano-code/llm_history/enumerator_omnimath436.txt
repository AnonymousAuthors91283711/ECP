[write_program]
This problem involves counting integer pairs (x, y) such that x² + 2 y² < 25. To find the number of such pairs, we can systematically enumerate all integer values of x and y within reasonable bounds derived from the inequality.

Since x² < 25, x ranges roughly from -4 to 4, because 5²=25 would make x²=25 and not satisfy strict inequality. Similarly, for each x, we find the range of y satisfying 2 y² < 25 - x², i.e., y² < (25 - x²)/2.

We'll iterate over these x and y values, count pairs satisfying the inequality, and output the count while streaming each (x, y) pair when found.

```python
# Enumerate all integer (x, y) with x in [-4, 4]
# For each x, y in [-max_y, max_y] where max_y satisfies 2 y² < 25 - x²
# Count and print each pair as we proceed

count = 0
for x in range(-4, 5):
    max_y_square = (25 - x * x) / 2
    max_y = int(max_y_square ** 0.5)
    for y in range(-max_y, max_y + 1):
        if x * x + 2 * y * y < 25:
            count += 1
            print(f"Found pair: (x={x}, y={y})")
print(f"Total pairs: {count}")
```
