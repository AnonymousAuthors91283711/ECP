[write_program]
The problem requires enumerating the sums over specific ranges involving factorials. We want to find the value of:

\[ \sum_{a=6}^{12} \sum_{b=0}^{13 - a - 1} \sum_{c=0}^{13 - a - b - 1} \frac{a!}{b! c! (a - b - c)!}. \]

This resembles summing multinomial coefficients over particular bounds.

Let's write a Python enumerator to compute this sum efficiently:

- Compute the binomial coefficient as \( \frac{a!}{b! c! (a - b - c)!} \).
- Loop through \( a \) from 6 to 12.
- For each \( a \), \( b \) runs from 0 to \( 12 - a \) (since \( 13 - a - 1 \) is inclusive).
- For each \( b \), \( c \) is from 0 to \( 12 - a - b \).

The code will calculate each term and stream out partial sums accordingly.

```python
import math

# Initialize total sum
total_sum = 0

# Loop over a from 6 to 12 (inclusive)
for a in range(6, 13):
    # Loop over b from 0 to 12 - a
    for b in range(0, 13 - a):
        # Loop over c from 0 to 12 - a - b
        for c in range(0, 13 - a - b):
            numerator = math.factorial(a)
            denominator = math.factorial(b) * math.factorial(c) * math.factorial(a - b - c)
            term = numerator // denominator
            total_sum += term
            print(f'a={a}, b={b}, c={c} => term={term}, partial sum={total_sum}')
print("Final Answer:", total_sum)
```
