[write_program]
The problem involves enumerating outcomes of four independent rolls, each from 1 to 6, and counting how many of these outcomes result in a product (after shifting each roll by +1) that is a perfect square. We need to compute the ratio of favorable outcomes to total outcomes and identify the numerator and denominator such that they are coprime.

Solution plan:
- Enumerate all possible outcomes: 4 nested loops over 1..6.
- For each outcome, compute the product of (value + 1) for each roll.
- Check if this product is a perfect square.
- Count favorable outcomes, then simplify the fraction numerator/denominator to lowest terms and ensure they are coprime.
- Return the simplified numerator and denominator.

```python
import math
from fractions import Fraction

# Enumerate all outcomes: 4 rolls from 1..6
total_outcomes = 0
favorable_count = 0

for a in range(1, 7):
    for b in range(1, 7):
        for c in range(1, 7):
            for d in range(1, 7):
                total_outcomes += 1
                product = (a + 1) * (b + 1) * (c + 1) * (d + 1)
                root = int(math.isqrt(product))
                if root * root == product:
                    favorable_count += 1

# Compute the fraction and reduce to lowest terms
ratio = Fraction(favorable_count, total_outcomes).limit_denominator()
print(ratio.numerator, ratio.denominator)

# Return numerator and denominator for the theorem
P2019AIMEII_4_answer = (ratio.numerator, ratio.denominator)
```
