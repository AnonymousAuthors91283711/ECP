[write_program]
The problem involves finding the greatest 4-digit number whose decimal digits are [2, 0, 1, 9] in some order, that is divisible by 7. The task is to enumerate permutations of these digits, check divisibility, and identify the maximum such number.

Since it's about permutations of [2, 0, 1, 9], and the number must be 4-digit (so the first digit can't be zero). The approach:
- Generate all permutations of these digits.
- Filter out numbers starting with zero (not 4-digit).
- Check divisibility by 7.
- Keep track of the maximum number satisfying conditions.
- Print each candidate as it is found.

Here's the code implementing this logic efficiently:

```python
from itertools import permutations

digits = [2, 0, 1, 9]
max_num = -1  # Initialize to an invalid number
for perm in permutations(digits):
    if perm[0] == 0:
        continue  # Skip numbers with leading zero
    num = perm[0] * 1000 + perm[1] * 100 + perm[2] * 10 + perm[3]
    if num % 7 == 0:
        print(num)
        if num > max_num:
            max_num = num
print("Maximum number meeting criteria:", max_num)
```

This code will print all 4-digit permutations of [2, 0, 1, 9] divisible by 7, and ultimately display the greatest such number.
