[conjecture_answer] Formal Problem Statement: import Mathlib

open Nat

abbrev omnimath1990_answer : ℕ := sorry
theorem omnimath1990 : 
  IsLeast {N : ℕ | N > 2017 ∧ 
    Finset.card (Finset.filter (fun k => (digits 10 k).head? = some 1) (Finset.range N)) * 5 = 2 * N} 
  omnimath1990_answer := by sorry. Enumerated answers: timeout triggered. Expected Answer Type: ℕ
The condition relates N, counting numbers less than N with a leading digit 1, and an equation involving the number of such terms. The pattern suggests N must be greater than 2017, with the count of leading-digit-1 numbers scaled by 5 equaling twice N. For larger N, the leading digit 1 appears roughly N/10 times, so solving 5 * (N/10) ≈ 2N yields N ≈ 0. Then, check N = 2020 as a small candidate fitting the pattern. The general form: since most leading digits 1 count is (N-1)/10, the N satisfying the relation simplifies to N satisfying 5 * floor((N-1)/10) = 2N. The solution to this is N = 2020 + 10k for integers k, with a minimal N > 2017 being 2020. 

Thus, the simplest explicit solution is N=2020.

<<<2020>>>