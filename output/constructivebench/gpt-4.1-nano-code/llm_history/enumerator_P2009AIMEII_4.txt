[write_program]
This problem involves finding the least natural number \( n \) such that there exists some \( m \) with the sum \(\sum_{k=0}^{m-1} (n + 2 - 2(k+1))\) equal to 2009. Simplifying the sum will help identify possible \((n,m)\) pairs.

The sum:
\[
\sum_{k=0}^{m-1} (n + 2 - 2(k+1))
= \sum_{k=0}^{m-1} (n + 2 - 2k - 2)
= \sum_{k=0}^{m-1} (n - 2k).
\]

This simplifies to:
\[
\sum_{k=0}^{m-1} n - \sum_{k=0}^{m-1} 2k = m n - 2 \sum_{k=0}^{m-1} k = m n - 2 \frac{(m-1)m}{2} = m n - (m-1)m.
\]

Set the sum equal to 2009:
\[
m n - m (m-1) = 2009,
\]
\[
m n = 2009 + m (m-1),
\]
which implies
\[
n = \frac{2009 + m (m-1)}{m} = \frac{2009}{m} + (m-1).
\]

To find integer \( n \), \( \frac{2009}{m} \) must be an integer, so \( m \) must be a divisor of 2009.

Now, find all positive divisors of 2009:
- 2009 factors as \( 7^2 \times 41 \).
- Divisors: 1, 7, 41, 49, 287, 2009.

For each divisor \( m \):
- Compute \( n = \frac{2009}{m} + (m-1) \).
- Check if \( n \) is an integer (it will be, since \( m | 2009 \)) and positive.

Find the minimal \( n \):
- For each divisor, compute \( n \).
- Keep track of minimal \( n \).

```python
# Python code to find the least n satisfying the sum condition for relevant m
def main():
    divisors = [1, 7, 41, 49, 287, 2009]
    min_n = None
    min_m = None
    for m in divisors:
        n = 2009 // m + (m - 1)
        print(f"Divisor m = {m}, computed n = {n}")
        if n >= 0 and (min_n is None or n < min_n):
            min_n = n
            min_m = m
    print(f"Least n = {min_n} occurs at m = {min_m}")

if __name__ == "__main__":
    main()
```
