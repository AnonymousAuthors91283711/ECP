[write_program]
The problem involves finding the least `m` such that there exist positive integers `a` and `p` satisfying multiple inequalities, including `m = 25 * p`. To approach this, I'll analyze the constraints and search for the minimal `m`, i.e., minimal `p`, and corresponding `a`.

Key points:
- `a > 0`, `p > 0`
- `500 < 5a + 5p < 1000` ⇒ `100 < a + p < 200`
- `1000 < 2a + 12p < 2000` ⇒ `500 < a + 6p < 1000`
- `m = 25 * p`

Our goal: find the minimal `p` (and corresponding `a`) satisfying the inequalities.

Strategy:
- Enumerate small `p` starting from 1
- For each `p`, find `a` satisfying the inequalities
- When conditions hold, compute `m = 25 * p` and output the candidate

Here's the code implementing this logic:

```python
# Search for the minimal p satisfying the inequalities
# and corresponding a, and compute m = 25 * p

def main():
    # p must be positive
    p = 1
    found = False
    min_m = None
    min_p = None
    min_a = None

    # Iterate until a valid solution is found or p exceeds a limit
    while p < 500:
        # For each p, define the bounds for a based on inequalities
        # 100 < a + p < 200  =>  (100 - p) < a < (200 - p)
        a_min_1 = 1  # a > 0
        a_max_1 = 199 - p  # a < 200 - p

        # 500 < a + 6p < 1000  =>  (500 - 6p) < a < (1000 - 6p)
        a_min_2 = 1
        a_max_2 = 999 - 6 * p

        # a must satisfy all bounds
        a_lower = max(a_min_1, a_min_2, 1)
        a_upper = min(a_max_1, a_max_2)

        if a_lower <= a_upper:
            # There exists at least one a satisfying all constraints
            # choose the smallest a that satisfies inequalities
            a_candidate = a_lower
            # Verify inequalities explicitly
            sum1 = a_candidate + p
            sum2 = a_candidate + 6 * p
            if (100 < sum1 < 200) and (500 < sum2 < 1000):
                m = 25 * p
                print(f"Found candidate: p={p}, a={a_candidate}, m={m}")
                if not found:
                    min_m = m
                    min_p = p
                    min_a = a_candidate
                    found = True
                else:
                    # Check if m is smaller
                    if m < min_m:
                        min_m = m
                        min_p = p
                        min_a = a_candidate
        p +=1

    if found:
        print(f"Minimal m = {min_m} corresponds to p={min_p}, a={min_a}")

main()
```
