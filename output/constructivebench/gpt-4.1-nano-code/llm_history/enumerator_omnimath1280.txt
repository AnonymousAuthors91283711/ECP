[write_program]
The problem appears to involve counting integers \( k \) between 1 and 2000 such that \( \gcd(k, 2001) = 1 \). To enumerate all such \( k \), we can directly check each number and determine if their gcd with 2001 is 1, then count them. We seek the cardinality of this set, which is the number of coprime integers within that range.

Here's a simple Python script that enumerates all integers from 1 to 2000, checks gcd, and prints each coprime number as it is found. Finally, it outputs the total count, which matches the expected answer for the theorem:

```python
import math

# Parameters
lower_bound = 1
upper_bound = 2000
target_number = 2001

coprime_count = 0

for k in range(lower_bound, upper_bound + 1):
    if math.gcd(k, target_number) == 1:
        print(k)  # Stream partial results
        coprime_count += 1

# Output the total count
print("Total coprime numbers:", coprime_count)
```

This code efficiently enumerates and counts all integers coprime to 2001 between 1 and 2000.
