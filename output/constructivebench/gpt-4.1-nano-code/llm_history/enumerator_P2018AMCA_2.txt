[write_program]
This problem asks for the greatest possible value of \( v = 14a + 11b + 2c \) with the constraints:
- \( a, b, c \) are non-negative integers,
- \( a, b, c \leq 20 \),
- \( 5a + 4b + c \leq 18 \).

We'll systematically enumerate all feasible triplets \((a, b, c)\) within bounds and check which maximize \(v\). To do so efficiently:
- Loop over \(a, b\) within 0 to 20,
- For each, solve for \(c\) upper bound \( c \leq 18 - 5a - 4b \),
- Only consider non-negative \(c \leq 20\),
- Record the maximum \(v\) and corresponding \((a, b, c)\).

This approach ensures all feasible solutions are checked, and the maximum is found precisely.

```python
# Enumerate all feasible (a, b, c) within given constraints to find the maximum value of v
max_v = -1
max_triplet = (0, 0, 0)

for a in range(21):
    for b in range(21):
        # Calculate the maximum c based on the inequality
        c_max = 18 - 5*a - 4*b
        if c_max < 0:
            continue  # No feasible c for this (a, b)
        c_max = min(c_max, 20)  # c cannot exceed 20
        for c in range(c_max + 1):
            v = 14*a + 11*b + 2*c
            if v > max_v:
                max_v = v
                max_triplet = (a, b, c)
                print(f"New max v = {v} found at (a, b, c) = {max_triplet}")

# Outputting the maximum value found
print(f"Maximum v is {max_v} with (a, b, c) = {max_triplet}")
```
