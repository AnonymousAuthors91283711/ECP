[write_program]
This problem involves enumerating all outcomes for two players, Ben and Jamie, with given outcome lists. The goal is to compute the probability that their sums equal 50, based on all possible outcome pairs.

Steps:
- Generate all outcome pairs (ben, jamie).
- Filter pairs where ben + jamie = 50.
- Compute the ratio of favorable outcomes to total outcomes.
- Output the answer as a rational number.

Since lists are small, enumeration is straightforward and efficient.

```python
# Enumerate all outcome pairs
ben_outcomes = [5, 10, 20]
jamie_outcomes = [30, 40]
total_outcomes = [(b, j) for b in ben_outcomes for j in jamie_outcomes]

# Filter pairs where sum equals 50
favorable = [(b, j) for (b, j) in total_outcomes if b + j == 50]

# Compute probability as rational number
probability = len(favorable) / len(total_outcomes)

# Output the probability
print(probability)
```
