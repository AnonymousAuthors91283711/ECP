[write_program]
This problem appears to involve sequences, particularly the parameters p i with a recurrence relation `p (i + 1) = 2 * p i` for i in finite indices. The goal is to compute the ratio `(p 3) / (p 3 + p 2 + p 1 + p 0)` based on the sequence described. Given the recurrence, the sequence seems geometric, starting from some positive initial value, with each subsequent term doubling.

To explore possible answers, I'll choose a positive initial value for p 0 (say 1), then compute p 1, p 2, p 3 accordingly. Since the sequence doubles each time, the sequence is:

- p 0 = 1
- p 1 = 2 * p 0 = 2
- p 2 = 2 * p 1 = 4
- p 3 = 2 * p 2 = 8

Compute the ratio:

(8) / (8 + 4 + 2 + 1) = 8 / 15

To verify this pattern, we'll generate this ratio and potentially larger starting points.

Here's a concise Python script that tests various initial p 0 values (positive integers for simplicity), computes the ratio, and prints it immediately:

```python
# Generate ratios based on initial p0 values with the recurrence p_{i+1} = 2 * p_i
for p0 in [1, 2, 3, 5, 10]:
    p1 = 2 * p0
    p2 = 2 * p1
    p3 = 2 * p2
    numerator = p3
    denominator = p3 + p2 + p1 + p0
    ratio = numerator / denominator
    print(f"p0={p0} => ratio={ratio}")
```

This code explores several initial values, streamlining the discovery of the pattern and potential limits or invariants.
