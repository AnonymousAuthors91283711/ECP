[write_program]
This problem involves finding real numbers \(a, b\) such that there exists a complex \(z\) with \(z^3 = 343\), which is not real, and \(z\) is a root of the quadratic polynomial \(x^2 + a x + b\). Additionally, the answer should be the unique such pair \((a, b)\).

Given that \(343 = 7^3\), the complex roots of \(z^3 = 343\) are \(z = 7\) (real) and two complex conjugates \(z = 7 \omega, 7 \omega^2\), where \(\omega\) is a non-real cube root of unity.

Let's explicitly find the roots of the polynomial-related roots for \(z\), and verify the conditions for the complex roots that are non-real.

```python
import itertools
import math

# Cube roots of 343: 7 (real), and 7 * (-0.5 + i*sqrt(3)/2), 7 * (-0.5 - i*sqrt(3)/2)
z_roots = [
    7,  # real root
    7 * (-0.5 + math.sqrt(3)/2 * 1j),        # complex conjugate
    7 * (-0.5 - math.sqrt(3)/2 * 1j)
]

# Filter for roots that are not real
non_real_roots = [z for z in z_roots if abs(z.imag) > 1e-8]

answers = []

# For each non-real root, find a, b from quadratic polynomial x^2 + a x + b
# z is a root → z^2 + a z + b = 0 → b = - (z^2 + a z)

# We can parametrize a over some sample set: for example, a in [-10,10] with step size 1
a_values = [a for a in range(-10, 11)]  # small sample for enumeration

for z in non_real_roots:
    for a in a_values:
        b = - (z ** 2 + a * z)
        # Because z is complex, b will generally be complex; the condition from the problem is
        # that a, b are real numbers. So check if b is approximately real.
        if abs(b.imag) < 1e-8:
            b_real = b.real
            # Store the answer pair
            answers.append((a, b_real))
            print(f"a = {a}, b = {b_real:.4f}")
```
