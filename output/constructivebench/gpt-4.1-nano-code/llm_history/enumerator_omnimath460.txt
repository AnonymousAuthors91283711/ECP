[write_program]
The problem involves analyzing prime numbers \( p \) within a range, with specific congruence and algebraic conditions. We need to find \( p \) given the constraints:

- \( p \) is prime,
- \( 100 < p < 500 \),
- \( e = 2016 \bmod (p - 1) \),
- \( e - \frac{1}{2}(p - 1) = 21 \).

From the last equation, \( e = 21 + \frac{1}{2}(p - 1) \). Since \( e \equiv 2016 \pmod{p-1} \), and also \( e = 2016 \bmod (p-1) \), these must be equal:

\[
2016 \bmod (p-1) = 21 + \frac{1}{2}(p - 1).
\]

Because \( e \) is the remainder when dividing 2016 by \( p - 1 \), it must satisfy:

\[
0 \leq e < p - 1.
\]

Let's generate candidate \( p \) in \( (100, 500) \), compute \( e \) from the equation, verify the modular relation, and check primality.

```python
# Enumerate primes p in (100, 500)
from sympy import primerange, isprime

for p in primerange(101, 500):
    # Compute e from the equation: e = 21 + (p - 1)/2
    e = 21 + (p - 1) / 2
    # Check if e is integer and within 0 <= e < p - 1
    if e.is_integer() and 0 <= e < p - 1:
        e_int = int(e)
        # Verify the modular condition: 2016 mod (p-1) == e
        if 2016 % (p - 1) == e_int:
            print(p)
```
