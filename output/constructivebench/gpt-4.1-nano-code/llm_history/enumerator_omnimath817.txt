[write_program]
The problem asks to count how many integers n from 2 to 100 (inclusive) satisfy the property that (n - 2)! is divisible by n, i.e., n divides (n - 2)!; then to find the total count. We need to enumerate n in [2, 100], check whether n divides (n - 2)! for each, and count those that do *not* satisfy this property.

Note:
- For each n, check if (n - 2)! % n â‰  0, then include n in the filtered set.
- Count how many such n are in the set.
- Output the total count as `omnimath817_answer`.

The key insight: When n is composite, n may or may not divide (n - 2)! depending on whether n has a prime factor greater than (n-2). When n is prime, (n-2)! is divisible by n (Wilson's theorem states n divides (n-1)!; hence for n > 2, n divides (n-1)! but not necessarily (n-2)!).

The code will test all n from 2 to 100 and count those where n does *not* divide (n-2)!.

```python
# Enumerate integers n from 2 to 100
# Check if n divides (n-2)!; include n if it does NOT, then count all such n

import math

count = 0
for n in range(2, 101):
    factorial = math.factorial(n - 2)
    if factorial % n != 0:
        print(n)
        count += 1

# Assign the answer
omnimath817_answer = count
```
