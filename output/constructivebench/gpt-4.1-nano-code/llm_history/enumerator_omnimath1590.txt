[write_program]
The problem involves finding the number of integers \( n \) satisfying the condition:
\[1 + \lfloor \frac{100n}{101} \rfloor = \lceil \frac{99n}{100} \rceil\]

We'll test integers \( n \) over a suitable small range to observe when the equality holds. Let's pick \( n \) from -50 to 150 as a heuristic, since the fractions involve divisors close to these magnitudes. We'll print each \( n \) that satisfies the condition.

```python
# Enumerate n over a small range to find solutions satisfying:
# 1 + floor(100*n/101) = ceil(99*n/100)

def check_condition(n):
    from math import floor, ceil
    lhs = 1 + floor(100 * n / 101)
    rhs = ceil(99 * n / 100)
    return lhs == rhs

results = []
for n in range(-50, 151):
    if check_condition(n):
        print(n)
        results.append(n)

# Output the count of solutions
print(f"Total solutions: {len(results)}")
```
