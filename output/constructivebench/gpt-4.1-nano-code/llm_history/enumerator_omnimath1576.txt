[write_program]
The problem asks for all natural numbers `n > 0` such that there exists an integer `x` satisfying the equation:
\[ x^n + (2 + x)^n + (2 - x)^n = 0. \]
We want to find all such `n`. Since the problem involves exponentiation, for small `n` we can directly check all possible integers `x`.

Approach:
- Iterate over small `n` values (say, from 1 up to a certain limit like 20).
- For each `n`, iterate over integer `x` in a reasonable range (e.g., -20 to 20).
- For each pair `(n, x)`, check if the equation holds.
- Print solutions immediately when found.

This approach balances thoroughness and efficiency, given the problem's constraints.

```python
# Enumerate small n and x to find solutions to x^n + (2 + x)^n + (2 - x)^n = 0
max_n = 20
x_range = range(-20, 21)

for n in range(1, max_n + 1):
    for x in x_range:
        val = x**n + (2 + x)**n + (2 - x)**n
        if val == 0:
            print(f"n={n}, x={x} => {x}^{n} + ({2 + x})^{n} + ({2 - x})^{n} = 0")
```
