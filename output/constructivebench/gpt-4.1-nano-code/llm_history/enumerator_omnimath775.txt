[write_program]
Let's analyze the problem. We need to find the least natural number \( N \) such that:
- \( N > 1 \),
- \( N = a \times (2a - 1) \) for some \( a \),
- For all \( k \) with \( 1 \leq k \leq 10 \), \( k \) divides \(\frac{N(N-1)}{2}\).

Our goal is to write a Python program that enumerates candidates \( N \) of the form \( a(2a-1) \), checks the divisibility condition for \( k \) from 1 up to 10, and finds the minimal such \( N \).

Here's the approach:
- Loop over \( a \) starting from 1 upward.
- For each \( a \), compute \( N = a \times (2a - 1) \).
- For each \( N \), check divisibility by all \( k \in [1, 10] \) for \(\frac{N(N-1)}{2}\).
- When all \( k \) divide evenly, print \( N \).

Let's implement this efficiently and stream the results:

```python
# Enumerate candidate N of the form a*(2a - 1) for a >= 1
# Check if for all k in 1..10, k divides N*(N-1)/2
# Print each valid N immediately upon verification
# Stop after finding the minimal such N

for a in range(1, 10000):
    N = a * (2 * a - 1)
    total = N * (N - 1) // 2
    if all(total % k == 0 for k in range(1, 11)):
        print(N)
        break  # minimal N will be first found
```

This code efficiently searches for the smallest \( N \) matching all criteria, streaming each valid answer immediately when found.
