[write_program]
This problem describes a set of integer coordinate points `(p.1, p.2)` within specified bounds, satisfying a given linear equation. To enumerate all solutions, we'll:

- Iterate over `p.1` from -9 to 6.
- For each `p.1`, determine `p.2` values between -2 and 8 that satisfy `(p.2 + 2)*(6 - p.1) = (8 - p.2)*(p.1 + 9)`.
- Avoid unnecessary calculations by rearranging the equation when possible, but here, direct iteration suffices since bounds are small.
- Immediately print each solution, count the total, and output the final count as the answer.

The goal is to produce a program that can be run directly and outputs all solutions with the total count, which gives the cardinality (`ncard`).

```python
# Enumerate integer points satisfying the bounds and equation
def main():
    count = 0
    for p1 in range(-9, 7):  # p.1 from -9 to 6 inclusive
        for p2 in range(-2, 9):  # p.2 from -2 to 8 inclusive
            left = (p2 + 2) * (6 - p1)
            right = (8 - p2) * (p1 + 9)
            if left == right:
                print((p1, p2))
                count += 1
    print("Total solutions:", count)

if __name__ == "__main__":
    main()
```
