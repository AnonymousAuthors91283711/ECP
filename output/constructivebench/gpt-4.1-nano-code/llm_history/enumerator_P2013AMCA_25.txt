[write_program]
The problem involves finding complex numbers \( z \) with positive imaginary part, such that \( f(z) = a + bi \) where \( a, b \in \mathbb{Z} \), with \( |a|, |b| \leq 10 \), and \( f(z) = z^2 + i z + 1 \).

Given the constraints, we focus on enumerating all integer pairs \((a, b)\), then solving \( f(z) = a + bi \) for \( z \). Since \( f(z) \) is quadratic in \( z \), for each \((a, b)\), we check whether the quadratic \( z^2 + i z + (1 - a - bi) = 0 \) has solutions with \( \operatorname{Im}(z) > 0 \).

The roots are:

\[
z = \frac{-i \pm \sqrt{(-i)^2 - 4 (1 - a - bi)}}{2}
\]

which simplifies to:

\[
z = \frac{-i \pm \sqrt{-1 - 4(1 - a - bi)}}{2}
\]

We'll compute the discriminant, then check if any solution has positive imaginary part.

```python
import cmath

# Define bounds for a and b
max_abs_ab = 10

# Initialize counter for solutions
solutions_count = 0

# Enumerate all integer pairs within bounds
for a in range(-max_abs_ab, max_abs_ab + 1):
    for b in range(-max_abs_ab, max_abs_ab + 1):
        # Compute the discriminant D = sqrt(-1 - 4*(1 - a - bi))
        discriminant_expr = -1 - 4 * (1 - a - 1j * b)
        D = cmath.sqrt(discriminant_expr)

        # Compute roots
        for sign in [1, -1]:
            z = (-1j + sign * D) / 2
            # Check if imaginary part > 0
            if z.imag > 0:
                solutions_count += 1
                print(f"Solution: a={a}, b={b}, z={z}")

print(f"Total solutions with Im(z) > 0: {solutions_count}")
```
