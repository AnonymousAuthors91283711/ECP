[write_program]
The problem involves finding two distinct real roots \( x \) and \( y \) satisfying four polynomial equations parameterized by \( A \) and \( B \), and then determining the product \( xy \). To facilitate conjecture, we select small sample parameters \( A \) and \( B \), enumerate the roots of the two cubic equations, and look for pairs \((x,y)\) that satisfy the conditions and are distinct.

We will:
- Fix small values of \( A, B \).
- Find real roots of the two cubic equations.
- Check for pairs of roots that satisfy the non-equality \( x \neq y \).
- Output the product \( xy \) when conditions are met.

```python
import numpy as np

# Define parameters
A, B = 1.0, 2.0
# Cubic coefficients
# x roots: x^3 + A x + 10 = 0
# y roots: y^3 + B y + 50 = 0

# Function to find real roots of a cubic of form t^3 + c t + d = 0
def real_roots(c, d):
    coeffs = [1, 0, c, d]
    roots = np.roots(coeffs)
    return [r.real for r in roots if abs(r.imag) < 1e-8]

# Find roots
x_roots = real_roots(A, 10)
y_roots = real_roots(B, 50)

# Check pairs for conditions
for x in x_roots:
    for y in y_roots:
        if abs(x - y) > 1e-8:
            product = x * y
            print(f"Found: x={x:.3f}, y={y:.3f}, x*y={product:.3f}")
```
