[write_program]
The problem involves finding integers \( j, b \), both less than 100, satisfying specific digit and algebraic conditions, and then computing the absolute difference \(|j - b|\). We want to enumerate all candidate pairs and identify the absolute differences.

Key constraints:
- \( j < 100 \), \( b < 100 \)
- \( j/10 = b \% 10 \) (the tens digit of \( j \) equals units digit of \( b \))
- \( j \% 10 = b/10 \) (units digit of \( j \) equals tens digit of \( b \))
- \( j + 5 = 2(b + 5) \)
- The absolute difference \( |j - b| \)

Since the problem is small, brute-force enumeration is efficient. We explore all \( j, b \) in 0..99, check constraints, and compute \( |j - b| \).

```python
# Enumerate all pairs (j, b) with j, b < 100
# and check given conditions. Print all differences.
for j in range(100):
    for b in range(100):
        # Check digit conditions:
        # j//10 == b%10 and j%10 == b//10
        if j // 10 == b % 10 and j % 10 == b // 10:
            # Check the algebraic condition:
            if j + 5 == 2 * (b + 5):
                diff = abs(j - b)
                print(f' j={j}, b={b}, |j-b|={diff}')
```
