[write_program]
This problem seeks the greatest value of \(k = m^2 + n^2\) for some integers \(m, n\) in the range 1 to 1981, where the expression \((n^2 - m n - m^2)^2 = 1\). Immediately, this focuses on pairs \((m, n)\) satisfying \((n^2 - m n - m^2)^2=1\), i.e., \(n^2 - m n - m^2 = \pm 1\).

We will:
- Enumerate small values of \(m, n\) within 1..1981.
- For each pair, check if \(n^2 - m n - m^2 = \pm 1\).
- If yes, compute \(k = m^2 + n^2\).
- Track the maximum \(k\) found.

### Implementation considerations:
- Use bounds to reduce computations.
- Since \(n,m \leq 1981\), the loops are manageable.
- We only need to output the maximum \(k\) found.

```python
# Enumeration to find all pairs (m,n) with 1 <= m,n <= 1981
# satisfying (n^2 - m*n - m^2) == Â±1, and find max m^2 + n^2

max_k = 0

# Loop over m and n
for m in range(1, 1982):
    for n in range(1, 1982):
        val = n**2 - m*n - m**2
        if abs(val) == 1:
            k = m**2 + n**2
            print(k)  # stream the answer immediately
            if k > max_k:
                max_k = k

print("Maximum value of k:", max_k)
```
