[write_program]
This problem asks to find positive natural numbers \( m \) and \( n \) such that:

\[
\frac{1}{n^2} - \frac{3}{2n^3} = \frac{1}{m^2}
\]

The goal is to enumerate possible answers for \((m, n)\). To do so, we'll fix a small range of \( n \) values, compute the corresponding \( 1/m^2 \), and check if this matches a perfect reciprocal of a perfect square \( m^2 \). We'll output all solutions found within the sample range.

```python
# Enumerate small positive n, compute candidate 1/m^2, and check if it corresponds to a perfect square m^2
import math

# Define the search limit for n
n_limit = 50

for n in range(1, n_limit + 1):
    val = (1 / n**2) - (3 / (2 * n**3))
    if val > 0:
        # Check if val is a reciprocal of a perfect square
        m_sq = 1 / val
        m = math.isqrt(round(m_sq))
        # Due to floating point, verify the approximation
        if abs(m**2 - m_sq) < 1e-9:
            # Confirm if the value matches exactly
            if abs(1 / (m**2) - val) < 1e-9:
                print(f"Found solution: m = {m}, n = {n}")
```
