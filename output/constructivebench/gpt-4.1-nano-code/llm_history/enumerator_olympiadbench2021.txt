[write_program]
The problem involves finding the minimal natural number \( n \) for which there exist three positive divisors \( d_1, d_2, d_3 \) (all dividing \( n \)), all distinct, such that their sum is 2022.

To solve this, I will:
- Search for the minimal \( n \) that satisfies the conditions.
- Start from small \( n \) and go upward, checking whether there exist three positive, distinct divisors summing to 2022.
- For each valid \( n \), output it immediately.
- Limit the search to a reasonable upper bound to ensure we don't run indefinitely.

Because the sum of three divisors is fixed at 2022, and divisors are positive, the smallest possible \( n \) is at least as big as the maximum of the three divisors involved. The largest divisor can't exceed \( n \), and the sum equals 2022, so the largest divisor is at most 2022.

Let's proceed with an efficient brute-force approach, iterating over \( n \), checking if there exist three suitable divisors.

```python
# Enumerate candidate n starting from the smallest, checking for existence of three distinct divisors
max_n = 3000  # Upper bound to limit search
for n in range(3, max_n + 1):
    divisors = [d for d in range(1, n + 1) if n % d == 0]
    # Check for three distinct divisors from divisors list that sum to 2022
    for i in range(len(divisors)):
        for j in range(i+1, len(divisors)):
            for k in range(j+1, len(divisors)):
                d1, d2, d3 = divisors[i], divisors[j], divisors[k]
                if d1 + d2 + d3 == 2022:
                    print(n)
                    # Break once found to move to next n
                    break
            else:
                continue
            break
        else:
            continue
        break
```
