[write_program]
The problem involves a cubic polynomial with roots \(x_1, x_2, x_3\) such that the polynomial equals \(\sqrt{2014} \, x^3 - 4029 x^2 + 2\). The roots are ordered \(x_1 < x_2 < x_3\). We need to find the value of \(x_2 \cdot (x_1 + x_3)\).

The key idea is to identify the roots, then compute the desired expression. Since the polynomial is fixed and known, I'll approximate its roots numerically and determine the value \(x_2 (x_1 + x_3)\). Considering the approximate roots, I'll output the computations directly.

```python
import math
import numpy as np

# Polynomial coefficients: a*x^3 + b*x^2 + c*x + d
a = math.sqrt(2014)  # ≈ 44.888
b = -4029
c = 0
d = 2

# Define polynomial
coeffs = [a, b, c, d]

# Find roots numerically
roots = np.roots(coeffs)

# Filter real roots within floating point tolerance
real_roots = [root.real for root in roots if abs(root.imag) < 1e-9]
real_roots.sort()

# Assign roots accordingly
x1, x2, x3 = real_roots

print(f"Approximated roots: x1 ≈ {x1:.6f}, x2 ≈ {x2:.6f}, x3 ≈ {x3:.6f}")

# Compute the desired value
result = x2 * (x1 + x3)
print(f"x2 * (x1 + x3) ≈ {result:.6f}")
```
