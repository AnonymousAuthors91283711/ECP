[write_program]
The problem asks for the greatest natural number n such that there exists an integer k with the sum of (k + i) for i in [0, n-1] equal to 45. 

Let's analyze the sum:

\[
\sum_{i=0}^{n-1} (k + i) = n \cdot k + \frac{n(n-1)}{2} = 45
\]

which simplifies to:

\[
n k = 45 - \frac{n(n-1)}{2}
\]

For some integer k, \( n k \) must be integral, so

\[
k = \frac{45 - \frac{n(n-1)}{2}}{n} = \frac{2 \cdot 45 - n(n-1)}{2 n} = \frac{90 - n(n-1)}{2 n}
\]

To find such n, the numerator must be divisible by \( 2 n \), and \( k \) must be an integer.

We can enumerate small values of n where this is possible, and among these choose the maximum n.

```python
# Enumerate small n to find all n with an integer k satisfying the sum condition
possible_n = []

for n in range(1, 50):  # arbitrary upper bound to find maximum n
    numerator = 90 - n * (n - 1)
    denominator = 2 * n
    if numerator % denominator == 0:
        k = numerator // denominator
        # Verify sum for this n and k:
        total = n * k + n * (n - 1) // 2
        if total == 45:
            print(n)  # print each valid n immediately
            possible_n.append(n)

# The greatest such n:
max_n = max(possible_n) if possible_n else None
print("Maximum n:", max_n)
```
