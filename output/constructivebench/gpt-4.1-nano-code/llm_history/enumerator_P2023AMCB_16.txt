[write_program]
The problem asks to find the greatest integer \( x \leq 29 \) such that there are no non-negative integers \( a, b, c \) satisfying \( 6a + 10b + 15c = x \), and then to verify that the sum of the digits of 29 (base 10) equals the answer. 

Let's write a Python script to enumerate all \( x \) from 0 to 29, check if \( x \) cannot be expressed as \( 6a + 10b + 15c \), and find the greatest such \( x \). Also, it sums the digits of 29 for the second part.

```python
# Enumerate all x from 0 to 29 and check if it can be expressed as 6a + 10b + 15c
def can_express(x):
    for a in range(x // 6 + 1):
        for b in range((x - 6 * a) // 10 + 1):
            c_part = x - 6 * a - 10 * b
            if c_part >= 0 and c_part % 15 == 0:
                return True
    return False

# Find all numbers ≤ 29 that cannot be expressed as 6a+10b+15c
non_expressible = []
for x in range(30):
    if not can_express(x):
        print(f"Cannot express {x} as 6a+10b+15c")
        non_expressible.append(x)

# Find the greatest such number
greatest_non_expressible = max(non_expressible) if non_expressible else None
print(f"Greatest non-expressible x ≤ 29: {greatest_non_expressible}")

# Sum of digits in 29
digits_sum = sum(int(d) for d in str(29))
print(f"Sum of digits in 29: {digits_sum}")
```
