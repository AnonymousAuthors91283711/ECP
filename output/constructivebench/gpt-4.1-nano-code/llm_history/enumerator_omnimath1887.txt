[write_program]
This problem involves finding solutions (h, p, z) in natural numbers satisfying a system of linear equations, and then determining the total sum h + p + z, which depends on the solutions. To assist in reconstructing the answer, I'll write a Python program that searches for all plausible (h, p, z) satisfying the given equations, prioritizing integer solutions and deriving the total sum.

Given the equations:
1. 2h + 3p + 6z = 800
2. 8h + 9p + 12z = 2018

We observe the number of variables and equations, so I'll parameterize by z and solve for h and p.

---

```python
# Program to enumerate possible solutions (h, p, z) for the given equations
# and compute h + p + z for each solution

max_z = 133  # since 6z <= 800; z <= 133 approx
# To optimize, z can range from 0 to max_z
for z in range(max_z + 1):
    # From equation 1: 2h + 3p = 800 - 6z
    rhs1 = 800 - 6 * z
    # From equation 2: 8h + 9p = 2018 - 12z
    rhs2 = 2018 - 12 * z
    
    # For h and p to be integers and non-negative:
    # 2h + 3p = rhs1
    # 8h + 9p = rhs2
    
    # Express h in terms of p from the first:
    # 2h = rhs1 - 3p => h = (rhs1 - 3p)/2
    # p must satisfy p >= 0 and h >= 0, h integer
    
    # p must satisfy parity conditions for h to be integer:
    # (rhs1 - 3p) divisible by 2
    for p in range(max(rhs1//3, 0), (rhs1 // 3) + 2):
        if p < 0:
            continue
        if (rhs1 - 3*p) % 2 != 0:
            continue
        h = (rhs1 - 3*p) // 2
        if h < 0:
            continue
        # Check second equation:
        # 8h + 9p == rhs2
        if 8*h + 9*p == rhs2:
            total = h + p + z
            print(f"h={h}, p={p}, z={z}, total={total}")
```
