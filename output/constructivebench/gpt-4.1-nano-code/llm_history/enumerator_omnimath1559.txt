[write_program]
This problem involves finding all integers \( c \) such that there exist integers \( a, b \) satisfying:
\[
a + b c = 2017 \quad \text{and} \quad b + c a = 8
\]

To solve for possible \( c \), we'll parametrize \( a, b \) and check candidate values numerically. Since \( a, b \) are integers, the equations are linear in \( a \) and \( b \). We can express \( a, b \) in terms of \( c \), then check for integer solutions.

Rearranging:
\[
a + c b = 2017 \implies a = 2017 - c b
\]
\[
b + c a = 8
\]

Substitute \( a \):
\[
b + c (2017 - c b) = 8
\]
\[
b + 2017 c - c^2 b = 8
\]
\[
b(1 - c^2) = 8 - 2017 c
\]

Thus:
\[
b = \frac{8 - 2017 c}{1 - c^2}
\]

Similarly:
\[
a = 2017 - c b
\]

We need \( b \) to be integer, so numerator divisible by denominator. Because \( c \) is integer, the divisibility condition reduces to testing small \( c \) values.

We will test \( c \in \{-50, \dots, 50\} \), check for integer \( b \), then derive \( a \). We will print each \( c \) where solutions exist.

```python
# Enumerate candidate c values in a reasonable range
for c in range(-50, 51):
    denom = 1 - c*c
    numerator_b = 8 - 2017*c
    # Check if denominator divides numerator exactly
    if denom != 0 and numerator_b % denom == 0:
        b = numerator_b // denom
        a = 2017 - c * b
        print(f"c = {c}, a = {a}, b = {b}")
```
