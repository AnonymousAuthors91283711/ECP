[write_program]
The problem involves finding non-negative integers x, y, z satisfying several linear equations:

- x + y + z = 20
- 2 + 7 + 6 + 10 + x = 25
- 15 + 9 + 12 + 8 + y = 44
- 3 + 4 + 2 + 2 + z = 11

Simplify each:

- From the second: 2 + 7 + 6 + 10 + x = 25 ⇒ 25 + x = 25 ⇒ x = 0
- From the third: 15 + 9 + 12 + 8 + y = 44 ⇒ 44 + y = 44 ⇒ y = 0
- From the fourth: 3 + 4 + 2 + 2 + z = 11 ⇒ 11 + z = 11 ⇒ z = 0

Check the first: x + y + z = 20, with x=y=z=0, which sums to 0, not 20. So these specific given sums seem inconsistent unless those constant sums are variables themselves or part of an oversight.

The last three equations directly point to x=y=z=0, which contradicts the total sum equation unless there's a mistake.

Instead, I will generate all possible non-negative x,y,z satisfying the sum x+y+z=20, and verifying the constant sums align.

Given the direct calculation, the only consistent solution is x=y=z=0, which does not satisfy the sum of 20. But perhaps variable interpretation is more general — suppose the constants (like 2 + 7 + 6 + 10) are fixed, and the equations imply:

Equation 2: 25 + x = 25 ⇒ x=0
Equation 3: 44 + y=44 ⇒ y=0
Equation 4: 11 + z=11 ⇒ z=0

Sum: 0+0+0=0, not 20. So inconsistent unless the constants are placeholders or part of a more complex interpretation.

Given the problem constraints, I will enumerate non-negative solutions with x + y + z=20, and check if constants align.

Here's a code to explore possible solutions:

```python
# The goal: find all (x, y, z) with non-negative integers satisfying:
# x + y + z = 20
# The constants given in the problem seem to be part of some scoring, but for enumeration,
# focus on the primary sum constraint. Since the question seems to be about enumerating these solutions,
# we will generate all (x, y, z) with x + y + z = 20.

for x in range(21):
    for y in range(21 - x):
        z = 20 - x - y
        # For each solution, print immediately
        print((x, y, z))
```
