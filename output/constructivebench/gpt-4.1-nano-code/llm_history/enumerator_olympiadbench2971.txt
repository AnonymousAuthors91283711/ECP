[write_program]
The problem asks for the greatest natural number \( n \) such that:
- \( 10^4 \leq n \leq 10^5 - 1 \) (i.e., \( n \) is between 10,000 and 99,999),
- the digits of \( n \) are all distinct,
- \( 63 \mid n \).

To find this, we should enumerate candidate numbers from the maximum downward (since we want the greatest such number), check for the conditions, and print each candidate that satisfies all conditions, stopping at the first (largest) one.

Since the divisibility is by 63, and 63 = 7 * 9, \( n \) must be divisible by both 7 and 9. This will be utilized in the filtering process.

Here is a Python program to perform this enumeration efficiently, from 99,999 downward to 10,000:

```python
def digits_unique(n):
    s = str(n)
    return len(set(s)) == len(s)

for n in range(99999, 9999, -1):
    if n % 63 == 0:
        if digits_unique(n):
            print(n)
            break
```

This code will print the largest \( n \) fulfilling all criteria immediately upon finding it.
