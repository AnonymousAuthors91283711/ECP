[write_program]
The problem involves finding the least positive integer N that can be expressed as two different scaled forms involving integral k and m, with specific divisibility constraints. Specifically, N equals 78% of k and 116% of m, with both scalings yielding integers, and we want the minimal such N satisfying these conditions. The final condition asserts that this minimal N modulo 1000 is 131.

To solve this, we'll:
- Express N in terms of k and m,
- Enforce the integral constraints via divisibility conditions,
- Find the minimal N by searching through candidate k and m values,
- Then check the conditions for N and the modulo constraint.

Since this is a code enumeration task for a competition problem, we'll limit our search to small k and m values to find candidate solutions, then choose the minimal N.

```python
# Enumerate small k and m values to find minimal N satisfying conditions
max_value = 2000  # upper bounds for search; can be adjusted
candidates = []

for k in range(1, max_value):
    if (k * 78) % 100 == 0:
        N1 = (k * 78) // 100
        for m in range(1, max_value):
            if (m * 116) % 100 == 0:
                N2 = (m * 116) // 100
                if N1 == N2 and N1 > 0:
                    candidates.append(N1)

if candidates:
    min_N = min(candidates)
    print("Minimal N satisfying conditions:", min_N)
    print("N % 1000 =", min_N % 1000)
```
